pipeline {
    agent any

    parameters {
        choice(
            name: 'PYTHON_SCRIPT',
            choices: ['main.py', 'redis_main.py'],
            description: '请选择要运行的 Python 脚本'
        )
    }

    environment {
        UV_CACHE_DIR = '/tmp/uv-cache'
        PIP_INDEX = 'https://pypi.tuna.tsinghua.edu.cn/simple'
    }

    stages {
        stage('初始化环境') {
            steps {
                echo '🛠️ 打印工作目录和 Python 版本信息'
                sh 'pwd || true'
                sh 'python3 --version || true'
                sh 'pip3 --version || true'
            }
        }

        stage('安装 uv（若未安装）') {
            steps {
                script {
                    echo '📦 检查并安装 uv'
                    sh '''
                        if ! command -v uv >/dev/null 2>&1; then
                            echo "🔧 安装 uv..."
                            curl -LsSf https://astral.sh/uv/install.sh | sh
                            export PATH="$HOME/.local/bin:$PATH"
                        else
                            echo "✅ uv 已安装"
                        fi
                        uv --version
                    '''
                }
            }
        }

        stage('安装依赖') {
            steps {
                echo "📦 使用 uv 安装依赖"
                sh """
                    export PATH="$HOME/.local/bin:$PATH"
                    uv pip install -r requirements.txt \
                        --index-url=${PIP_INDEX} \
                        --cache-dir=${UV_CACHE_DIR}
                """
            }
        }

        stage('执行接口自动化脚本') {
            steps {
                echo "🚀 执行 ${params.PYTHON_SCRIPT}"
                sh """
                    export PATH="$HOME/.local/bin:$PATH"
                    uv run python ${params.PYTHON_SCRIPT}
                """
            }
        }

        stage('生成 Excel 报告') {
            steps {
                echo "📊 生成 Excel 报告"
                sh """
                    export PATH="$HOME/.local/bin:$PATH"
                    uv run python generate_report_main.py
                """
            }
        }
    }

    post {
        failure {
            echo '❌ 构建失败，请检查日志。'
        }
        success {
            echo '✅ 构建成功。'
        }
    }
}
