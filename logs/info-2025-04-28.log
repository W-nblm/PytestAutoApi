INFO    2025-04-28 11:50:50,609d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 11:50:50,609d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 11:50:50,612d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:50:50,612d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:50:50,624d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 11:50:50,625d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 11:50:50,625d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 11:50:50,627d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 11:50:50,629d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 11:50:50,630d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'DELETE', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 11:50:50,630d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:50:50,630d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:50:50,639d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 11:50:50,640d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 11:50:50,640d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 11:50:50,641d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:50:50,641d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:50:50,649d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 11:50:50,649d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 11:50:50,649d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 11:50:50,652d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 11:50:50,656d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 11:50:50,656d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/list', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 11:50:50,657d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 11:50:50,657d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 11:50:50,661d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 11:50:50,661d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 11:50:50,662d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 11:50:50,662d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 11:50:50,674d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 11:50:50,674d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 11:50:50,674d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:50:50,675d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:50:50,676d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 11:50:50,676d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-28 11:50:50,676d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 11:50:50,676d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:50:50,676d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:50:50,680d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 11:50:50,680d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 11:50:50,680d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 11:50:50,680d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 11:50:50,689d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 11:50:50,689d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 11:50:50,689d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 11:50:50,689d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:50:50,694d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:50:57,990d:\PytestAutoApi\logs\info-2025-04-28.log:main.py:36 Allure report generated, total cases: TestMetrics(passed=5, failed=0, skipped=0, total=5, broken=0, pass_rate=100.0, time=2.88)
INFO    2025-04-28 11:52:12,837d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 11:52:12,837d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 11:52:12,838d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:52:12,838d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:52:12,841d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 11:52:12,842d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 11:52:12,842d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 11:52:12,842d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 11:52:12,845d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 11:52:12,845d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'DELETE', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 11:52:12,846d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:52:12,846d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:52:12,849d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 11:52:12,850d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 11:52:12,850d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 11:52:12,850d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:52:12,850d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:52:12,855d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 11:52:12,856d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 11:52:12,856d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 11:52:12,857d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 11:52:12,858d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 11:52:12,858d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/list', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 11:52:12,858d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 11:52:12,861d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 11:52:12,861d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 11:52:12,861d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 11:52:12,861d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 11:52:12,861d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 11:52:12,861d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 11:52:12,861d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 11:52:12,861d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:52:12,861d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:52:12,861d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 11:52:12,861d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-28 11:52:12,861d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 11:52:12,861d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:52:12,861d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:52:12,861d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 11:52:12,873d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 11:52:12,873d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 11:52:12,873d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 11:52:12,873d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 11:52:12,878d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 11:52:12,878d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 11:52:12,878d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_query_bird_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:52:12,878d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_query_bird_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:52:12,892d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 11:52:12,892d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-28 11:52:12,892d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/app/info/appUser/pet/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 11:52:12,892d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:52:12,892d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:52:12,895d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 11:52:12,895d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 11:52:12,895d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 11:52:12,895d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 11:52:15,542d:\PytestAutoApi\logs\info-2025-04-28.log:main.py:36 Allure report generated, total cases: TestMetrics(passed=5, failed=0, skipped=0, total=5, broken=0, pass_rate=100.0, time=2.88)
INFO    2025-04-28 11:52:35,699d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 11:52:35,699d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 11:52:35,700d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:52:35,700d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:52:35,703d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 11:52:35,703d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 11:52:35,704d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 11:52:35,704d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 11:52:35,706d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 11:52:35,706d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'DELETE', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 11:52:35,707d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:52:35,707d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:52:35,711d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 11:52:35,712d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 11:52:35,712d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 11:52:35,712d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:52:35,713d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:52:35,717d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 11:52:35,717d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 11:52:35,718d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 11:52:35,718d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 11:52:35,721d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 11:52:35,721d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/list', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 11:52:35,721d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 11:52:35,721d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 11:52:35,723d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 11:52:35,723d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 11:52:35,723d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 11:52:35,723d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 11:52:35,728d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 11:52:35,728d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 11:52:35,728d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:52:35,728d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:52:35,731d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 11:52:35,732d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-28 11:52:35,732d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 11:52:35,732d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:52:35,733d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:52:35,737d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 11:52:35,737d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 11:52:35,737d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 11:52:35,738d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 11:52:35,741d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 11:52:35,741d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 11:52:35,741d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 11:52:35,741d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_query_bird_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:52:35,741d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_query_bird_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:52:35,746d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 11:52:35,746d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-28 11:52:35,746d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/app/info/appUser/pet/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 11:52:35,747d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:52:35,747d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:52:35,750d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 11:52:35,750d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 11:52:35,750d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 11:52:35,752d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 11:52:36,270d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:19 初始化conftest.py
INFO    2025-04-28 11:52:36,527d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:129 指定运行顺序: []
INFO    2025-04-28 11:52:36,527d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:138 运行顺序: []
ERROR   2025-04-28 11:52:36,591d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:175 用例总数: 0
ERROR   2025-04-28 11:52:36,591d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:176 异常用例数: 1
INFO    2025-04-28 11:52:36,591d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:179 用例执行时长: 0.27 s
INFO    2025-04-28 11:52:36,591d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:185 用例成功率: 0.00 %
INFO    2025-04-28 11:52:38,791d:\PytestAutoApi\logs\info-2025-04-28.log:main.py:36 Allure report generated, total cases: TestMetrics(passed=0, failed=0, skipped=0, total=0, broken=0, pass_rate=0.0, time={})
INFO    2025-04-28 11:53:23,279d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 11:53:23,279d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 11:53:23,279d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:53:23,280d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:53:23,283d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 11:53:23,283d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 11:53:23,284d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 11:53:23,284d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 11:53:23,288d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 11:53:23,288d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'DELETE', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 11:53:23,289d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:53:23,289d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:53:23,293d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 11:53:23,293d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 11:53:23,295d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 11:53:23,295d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:53:23,295d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:53:23,298d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 11:53:23,298d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 11:53:23,298d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 11:53:23,298d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 11:53:23,298d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 11:53:23,298d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/list', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 11:53:23,298d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 11:53:23,298d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 11:53:23,311d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 11:53:23,311d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 11:53:23,311d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 11:53:23,311d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 11:53:23,313d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 11:53:23,313d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 11:53:23,314d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:53:23,314d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:53:23,317d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 11:53:23,317d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-28 11:53:23,317d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 11:53:23,317d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:53:23,318d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:53:23,320d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 11:53:23,320d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 11:53:23,321d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 11:53:23,321d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 11:53:23,325d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 11:53:23,325d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 11:53:23,326d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 11:53:23,326d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_query_bird_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:53:23,327d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_query_bird_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:53:23,329d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 11:53:23,329d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-28 11:53:23,329d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/app/info/appUser/pet/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 11:53:23,330d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:53:23,330d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 11:53:23,333d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 11:53:23,333d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 11:53:23,333d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 11:53:23,335d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 11:53:23,618d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:19 初始化conftest.py
INFO    2025-04-28 11:53:23,640d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:12 TestData: [{'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-28 11:53:23,724d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-28 11:53:23,730d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:129 指定运行顺序: []
INFO    2025-04-28 11:53:23,730d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:138 运行顺序: [<Function test_login[正常登录]>]
INFO    2025-04-28 11:53:23,794d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:37 app接口登录初始化
INFO    2025-04-28 11:53:23,954d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:47 获取hostlist: {"code":200,"msg":"操作成功","data":{"areaListVoList":[{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"NO","dictKeyName":"挪威","dictDataRemark":"{\"national_number\":\"47\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"挪威"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"JP","dictKeyName":"日本","dictDataRemark":"{\"national_number\":\"81\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"日本"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"LI","dictKeyName":"列支敦士登","dictDataRemark":"{\"national_number\":\"423\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"列支敦士登"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"LT","dictKeyName":"立陶宛","dictDataRemark":"{\"national_number\":\"370\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"立陶宛"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"LU","dictKeyName":"卢森堡","dictDataRemark":"{\"national_number\":\"352\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"卢森堡"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"LV","dictKeyName":"拉脱维亚","dictDataRemark":"{\"national_number\":\"371\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"拉脱维亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MC","dictKeyName":"摩纳哥","dictDataRemark":"{\"national_number\":\"377\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"摩纳哥"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MD","dictKeyName":"摩尔多瓦","dictDataRemark":"{\"national_number\":\"373\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"摩尔多瓦"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"ME","dictKeyName":"蒙特内哥罗","dictDataRemark":"{\"national_number\":\"382\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"蒙特内哥罗"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MK","dictKeyName":"马其顿","dictDataRemark":"{\"national_number\":\"389\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"马其顿"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MT","dictKeyName":"马耳他","dictDataRemark":"{\"national_number\":\"356\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"马耳他"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MX","dictKeyName":"墨西哥","dictDataRemark":"{\"national_number\":\"52\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"墨西哥"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"NL","dictKeyName":"荷兰","dictDataRemark":"{\"national_number\":\"31\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"荷兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"IT","dictKeyName":"意大利","dictDataRemark":"{\"national_number\":\"39\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"意大利"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"PL","dictKeyName":"波兰","dictDataRemark":"{\"national_number\":\"48\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"波兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"PT","dictKeyName":"葡萄牙","dictDataRemark":"{\"national_number\":\"351\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"葡萄牙"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"RO","dictKeyName":"罗马尼亚","dictDataRemark":"{\"national_number\":\"40\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"罗马尼亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"RS","dictKeyName":"塞尔维亚","dictDataRemark":"{\"national_number\":\"381\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"塞尔维亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"SE","dictKeyName":"瑞典","dictDataRemark":"{\"national_number\":\"46\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"瑞典"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"SI","dictKeyName":"斯洛文尼亚","dictDataRemark":"{\"national_number\":\"386\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"斯洛文尼亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"SK","dictKeyName":"斯洛伐克","dictDataRemark":"{\"national_number\":\"421\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"斯洛伐克"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"SM","dictKeyName":"圣马力诺","dictDataRemark":"{\"national_number\":\"378\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"圣马力诺"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"UA","dictKeyName":"乌克兰","dictDataRemark":"{\"national_number\":\"380\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"乌克兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"US","dictKeyName":"美国","dictDataRemark":"{\"national_number\":\"1\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"美国test"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"VG","dictKeyName":"英属维京群岛","dictDataRemark":"{\"national_number\":\"1284\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"英属维京群岛"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"EE","dictKeyName":"爱沙尼亚","dictDataRemark":"{\"national_number\":\"372\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"爱沙尼亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"AL","dictKeyName":"阿尔巴尼亚","dictDataRemark":"{\"national_number\":\"355\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"阿尔巴尼亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"AT","dictKeyName":"奥地利","dictDataRemark":"{\"national_number\":\"43\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"奥地利"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"BA","dictKeyName":"波斯尼亚和黑塞哥维那","dictDataRemark":"{\"national_number\":\"387\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"波斯尼亚和黑塞哥维那"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"BE","dictKeyName":"比利时","dictDataRemark":"{\"national_number\":\"32\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"比利时"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"BG","dictKeyName":"保加利亚","dictDataRemark":"{\"national_number\":\"359\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"保加利亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"BY","dictKeyName":"白俄罗斯","dictDataRemark":"{\"national_number\":\"375\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"白俄罗斯"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"CA","dictKeyName":"加拿大","dictDataRemark":"{\"national_number\":\"1\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"加拿大"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"CH","dictKeyName":"瑞士","dictDataRemark":"{\"national_number\":\"41\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"瑞士"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"CY","dictKeyName":"塞浦路斯","dictDataRemark":"{\"national_number\":\"357\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"塞浦路斯"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"CZ","dictKeyName":"捷克共和国","dictDataRemark":"{\"national_number\":\"420\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"捷克共和国"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"DE","dictKeyName":"德国","dictDataRemark":"{\"national_number\":\"49\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"德国"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"DK","dictKeyName":"丹麦","dictDataRemark":"{\"national_number\":\"45\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"丹麦"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"AD","dictKeyName":"安道尔","dictDataRemark":"{\"national_number\":\"376\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"安道尔"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"ES","dictKeyName":"西班牙","dictDataRemark":"{\"national_number\":\"34\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"西班牙"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"FI","dictKeyName":"芬兰","dictDataRemark":"{\"national_number\":\"358\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"芬兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"FO","dictKeyName":"法罗群岛","dictDataRemark":"{\"national_number\":\"298\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"法罗群岛"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"FR","dictKeyName":"法国","dictDataRemark":"{\"national_number\":\"33\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"法国"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"GB","dictKeyName":"英国","dictDataRemark":"{\"national_number\":\"44\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"英国"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"GI","dictKeyName":"直布罗陀","dictDataRemark":"{\"national_number\":\"350\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"直布罗陀"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"GL","dictKeyName":"格陵兰","dictDataRemark":"{\"national_number\":\"299\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"格陵兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"GR","dictKeyName":"希腊","dictDataRemark":"{\"national_number\":\"30\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"希腊"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"HR","dictKeyName":"克罗地亚","dictDataRemark":"{\"national_number\":\"385\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"克罗地亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"HU","dictKeyName":"匈牙利","dictDataRemark":"{\"national_number\":\"36\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"匈牙利"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"IE","dictKeyName":"爱尔兰","dictDataRemark":"{\"national_number\":\"353\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"爱尔兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"IS","dictKeyName":"冰岛","dictDataRemark":"{\"national_number\":\"354\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"冰岛"},{"appSource":"WObird","dictType":"country_code","category":"DEV","categoryName":"中国","parentCategory":"root","dictKey":"CN","dictKeyName":"中国DEV","dictDataRemark":"{\"national_number\":\"86\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"中国_dev"}],"hostListVoList":[{"dataCenterCode":"AL","host":"http://47.107.113.31:18090/prod-api","wopetHost":null},{"dataCenterCode":"DEV","host":"http://192.168.100.3:8090/prod-api","wopetHost":null}]}}
INFO    2025-04-28 11:53:23,957d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:56 登录初始化
INFO    2025-04-28 11:53:24,151d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:80 验证码: 5
INFO    2025-04-28 11:53:24,151d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:81 uuid: faa6186b692d4f0b8ab35a09fadd5707
INFO    2025-04-28 11:53:24,384d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:102 缓存中的token:Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJsb2dpblR5cGUiOiJsb2dpbiIsImxvZ2luSWQiOiJzeXNfdXNlcjoxNjU5MzkxNjY2MjU0NzA0NjQyIiwicm5TdHIiOiJLMEJheUhYQ2p3SUNkMlU5RDZXR243TEswcnhrY3BwbCIsInVzZXJJZCI6MTY1OTM5MTY2NjI1NDcwNDY0Mn0.Xk-QgJl0Gxdic0cbxCZYG-A7d8zLLQ_P00WMXCR9EZs
INFO    2025-04-28 11:53:24,390d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:29 data: {'url': 'http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-28 11:53:24,405d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:171 _dependent_type: True
INFO    2025-04-28 11:53:24,405d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:172 _dependence_case_datas: [DependentCaseData(case_id='code_01', dependent_data=[DependentData(dependent_type='response', jsonpath='$.data.uuid', set_cache='code_01_uuid', replace_key=None), DependentData(dependent_type='response', jsonpath='$.data.img', set_cache='code_01_code', replace_key=None)])]
INFO    2025-04-28 11:53:24,406d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:180 ********开始获取依赖数据: code_01********
INFO    2025-04-28 11:53:24,407d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:190 ********获取依赖数据成功: code_01********
INFO    2025-04-28 11:53:24,407d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:193 依赖数据: {'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-28 11:53:24,407d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:171 _dependent_type: False
INFO    2025-04-28 11:53:24,407d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:172 _dependence_case_datas: None
INFO    2025-04-28 11:53:24,407d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:429 ---------------处理多业务逻辑结束---------------
INFO    2025-04-28 11:53:24,407d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:430 ---------------开始请求---------------
INFO    2025-04-28 11:53:24,435d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:436 ---------------请求结束----------------
INFO    2025-04-28 11:53:24,435d:\PytestAutoApi\logs\info-2025-04-28.log:log_decorator.py:32 
======================================================
用例标题: 获取验证码和uuid
请求路径: http://47.107.113.31:18090/prod-api/code
请求方式: GET
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}
请求内容: None
接口响应内容: {"code":200,"msg":"操作成功","data":{"img":"iVBORw0KGgoAAAANSUhEUgAAAKAAAAA8CAYAAADha7EVAAAKHUlEQVR42u2ca3AUVRbH0YWyXJW1RKVYUJdCUVakZJHKhpeCWRUEA5KKIEECRFBkEfCBKOCGBUsRlYiBlKJojFljCBAgQEiCgEIMxhASyIs8SUgm73cmfNmzOXftTs9M355+0zNzP5xKV/ft0z3Nj3vvOed/b5+rV68CM+Ps+dz/EtPq587MF73y+/RhkFgfQA4+b4SQAWgwfGLHWno+b4OQAcgAZAAyABmAzBiADEAGoLzI15sg9BgAb33hNQfzhSiYAWgh8OSeZwAyAHWFT482nmoMQJVWcEceMaPh83YIGYAC6+hqguK6A3Cm9B1Izp8LCecnQHy2X4/59xxPhJTCBfBL2buQEfgtdHd38SAyAB0t+0IRbImMgeAl62Dk5BC4adgUuOGeR6Hf3ZPglvsCYPwzSyFkeTjs+u4ADDgcygBs76yDXys+ILDFnRsjy/blTIbzVTug096sCkKlQIUOuhWCb7qO2IKB/S35oRGoUVPmQ59B4xTZ8PHPwdr3dkJO3iXfA7Ci8TiBSS54znbwwnT4beJBwwF8b9Y0HsBNgU9Z6gNn5RSoAk/MfArA/JpY1eAJDYdoBNlIAHe8vJgHEI+t8nHjElPJ8KoHfGYD+E3+wy5mGoAldYckgcq6/AnUtpyH7qt20r6tywZFtQlwOG829Z7q5l8NAzAt+isewJSvPrcEfDEJRyVhmhL0T4iOPwwVlTX8PZ2dXWSoRXBfD98O/SY/7ns9YHNHGQkwxEDan/sPqG/LpzrD4AMDEbF7E3OfhPauek0A/id8Hez76H3ottsdzp89lMgDiMfO9x2K3AYx698y7aP+9Es2CSrEwLtj5DQ4cvyM7Ci4qroWtn8ZD2OnLvYNAE8Vr6b2fjXNmbKcnipeKXr/2YrNmnrBZSP+QiBbOXoEZB9P4c8PmLeCB7Cp1tYbcfa0eW3sQ+T8kmF/NuWDtra1w1C/2VT48opKLZGGeSZ8mmbTHcCm9hIqfD+VyB8W2zqrybDr7OOH7LGkh1UDYEl2Fg8ZZx/OeRZs5WWkbf2VKmLYFs9tfT7Ipf3PqTug3JZCzCgA13/wOXXYTUo9bRkxgh4A6gGhA4C5V76gAljeoOwfLaM8XNRPZsUWVb1g3KZ3XYBCC+rfF347mtQbdR47AiG3/1G07fcb1/PtjICwsamF5PXE4Jsd9jZTw7gD8OSlV6kAtnXaFDlGYMVzhAGqasFrxo8RhQph62ht7Z3It7fDwsG3ibZ9w3+04zvqDOHWnd9Re7+z5y4yAN0BKJXzU+oYgdU6lxTa4FmhMDwgEEY8NhXGjRwFW56bSaAUy/tx1zY+OwGiXnkRUr/eBWf2xkNpTrbrfxQdIfzbE6Gi8GEeUK9ynFcDKFXtUOoYUzQ0X3k10br9gPT9CdBQU907j+0JQhA2uXDpBWDlFRu191u5YZt4dWRTMTG2KOl3wyCBBo29u0N5Ipbi63TpWn3SHT/EwpyeOSCJitOOkah31ZgHyXCb+OU78qcLOkAYuzeZCiDm9cTgEzv26WWZKCqgQaMkkUxqyF31VF9phUs0v/iPMV87zO8StmwmJjyHbcwCcPnbH8me/61auh8WrdpMhmwMWjBn2HfIJJKmCQxdA+9vj4aS8iqfUI07AHji0itUaC5W71bkuKwhWVKsoOWlk3dFOYA2/86boaWhHlqbGsmx8NrhndtNARDBoQGIuUFsg5WPe/2DZZXd/jBkAoS+uokkon0GQFSw0KBJujhLWXmsKIzqa8/5capf+EDEVpfodvebq/jreOx8He8xGkCUVkkBiGkYNfVf7BVTTmb4BoAtHRWS88ACW6wsp4W2ODcCBT9NQ6+wl8M54JXiXqlSTWkJOSdM02AUbDSAtPwf2sSZL2sSIdw4dLKqJDbNXlobYKopKsVllP+bCg7CiUOrlEMUJbhXyPhp+oAVeRf4YCNi4TyX69sWzCXXsA22NWMIptV+ne3+RxZB/ME0aG75f+6yvaMDjp3IgBdWbJS87+a7Hof0kByoXloral4DIIpID12cKQkQRrFVTaf5yLjL3k4Sz2mFYbIkWlqGYF6h3doKkUsXiub2ijLPEllWcUWSaWkYOfBF7t4jGfEuD4uHfoPpID85dyX1XiVQWhpAriaMFQstOkApGLUGIXqmV/QCEIMGd/C5S7ngtW1fxEn6UVJRoYFoeQC5+eCRvCBV8GEPib0i7Xpq4SLTJrlSgOlZBcF5mtQc0F3OD0Hhrj0wcS7V14p1Hyt+N6VDtGUk+TjEZldFUvWBrhL8GVBan/T7sNwqAegaU3+kGGh614Fvf3CqrES0M4DCXoq7houWaL78p6vLoaqZK1pmVRzOC4tse+DnkjcIZFzJDudyuEIORaiVjSd5hTSJRpszqQBiusfsH8rJsIySY02dt5oKDapkpAB0vnYyPYvqC6Ntte/osQCqMSlZv9I1InItZGiMJtP07OXhbtdyOAPoDAR3DSNjqQT1fQVDRM0TITQMwPSyDdQUDLduWG/grqW/CInggVYHFuv93EXV193tT30HOSD6DIC4fkQMQJTr6wWK0R9HyXMwOqVBg0oZvQAcOGq623eRghCf6RFRsBa73HjC0OHXigCiIRxy1DBiw7DwHNZ/aQBizVktgNyzvB7A5IJ5utSTrT4EX7ilzsEWD9gqCg2KCqSGYefeD4GlAbg5Qp7CxxlCYRTs1QBKLWhXuq7EikGIEDjna5dKL4smpPsOmgTH/5Tvco9QkCocjmkRNfrGZygF0Hne57UAYnmOpqrWY+53LY0GncvS0bc+lCyjSflBUBKC0qi9H25oJKlCD1vmAqCVk9BUAHGnK1S04I5Ysrdks8WKLsXk9ojBTY48GT65bW11DTB4dKAoQCg4wBQLzScGMii/Erv3+mF/dytS1SpSsAyAQvUL1nRzqqJI8NDSWcknm/FvY1sRFNR8D0fygiXqvgGktuwL8PGrC9OzqHvCYJktKnofiYzRt91uh/TMXFj9rwhJRU3UjL1UJYwQNuwF5eYELQ+gVkNVjdyF6N4CH2eJR0/ptjERJ2SQyvNx4HkSfIYCiNtwYAnPF+ET9oR3jZmpGjysLyPItISzWCVEOA/0WAAb2grgXOWnbnWBYoJVVMJIbWDkSwByuyXgBpO4+6lc8LDnxEVO1Tb578CB5xUAOnzAnnkeplYQrKP5c4gAAUHDgGNvzqPwY9EyIkZAFYySoMUX4HMQdHR2kS3bMCfo93QYARLnfJhaQSnXXwfOhzkvbSALl4TiBZ8H0BfNCACNfiYDkAHIAGQAMgAZgAzCa/IsBiADkAHo7QA+8ll/2eYpEOr1DAagCdCZcZ+ZEOrpmwFoEHhW8GUEhHr7ZADqDJ/V/MqVY5nlhwGoowWfGC1qVoTbWQWtVcRqBIQMQIXg0eAwCkQ9e1hnIMXMrO/JAFQIn1ww9IbQqCGemYcASANKCgw9IWQAWsf+B+1qetiJbRyZAAAAAElFTkSuQmCC","captchaEnabled":true,"uuid":"2161c8a27d7544dfba3d78ac353061d7"},"paramMsg":null,"errCode":null}
接口响应时长: 25.79 ms
Http状态码: 200
=====================================================
INFO    2025-04-28 11:53:24,435d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:195 依赖响应数据: url='http://47.107.113.31:18090/prod-api/code' is_run=None detail='获取验证码和uuid' response_data='{"code":200,"msg":"操作成功","data":{"img":"iVBORw0KGgoAAAANSUhEUgAAAKAAAAA8CAYAAADha7EVAAAKHUlEQVR42u2ca3AUVRbH0YWyXJW1RKVYUJdCUVakZJHKhpeCWRUEA5KKIEECRFBkEfCBKOCGBUsRlYiBlKJojFljCBAgQEiCgEIMxhASyIs8SUgm73cmfNmzOXftTs9M355+0zNzP5xKV/ft0z3Nj3vvOed/b5+rV68CM+Ps+dz/EtPq587MF73y+/RhkFgfQA4+b4SQAWgwfGLHWno+b4OQAcgAZAAyABmAzBiADEAGoLzI15sg9BgAb33hNQfzhSiYAWgh8OSeZwAyAHWFT482nmoMQJVWcEceMaPh83YIGYAC6+hqguK6A3Cm9B1Izp8LCecnQHy2X4/59xxPhJTCBfBL2buQEfgtdHd38SAyAB0t+0IRbImMgeAl62Dk5BC4adgUuOGeR6Hf3ZPglvsCYPwzSyFkeTjs+u4ADDgcygBs76yDXys+ILDFnRsjy/blTIbzVTug096sCkKlQIUOuhWCb7qO2IKB/S35oRGoUVPmQ59B4xTZ8PHPwdr3dkJO3iXfA7Ci8TiBSS54znbwwnT4beJBwwF8b9Y0HsBNgU9Z6gNn5RSoAk/MfArA/JpY1eAJDYdoBNlIAHe8vJgHEI+t8nHjElPJ8KoHfGYD+E3+wy5mGoAldYckgcq6/AnUtpyH7qt20r6tywZFtQlwOG829Z7q5l8NAzAt+isewJSvPrcEfDEJRyVhmhL0T4iOPwwVlTX8PZ2dXWSoRXBfD98O/SY/7ns9YHNHGQkwxEDan/sPqG/LpzrD4AMDEbF7E3OfhPauek0A/id8Hez76H3ottsdzp89lMgDiMfO9x2K3AYx698y7aP+9Es2CSrEwLtj5DQ4cvyM7Ci4qroWtn8ZD2OnLvYNAE8Vr6b2fjXNmbKcnipeKXr/2YrNmnrBZSP+QiBbOXoEZB9P4c8PmLeCB7Cp1tYbcfa0eW3sQ+T8kmF/NuWDtra1w1C/2VT48opKLZGGeSZ8mmbTHcCm9hIqfD+VyB8W2zqrybDr7OOH7LGkh1UDYEl2Fg8ZZx/OeRZs5WWkbf2VKmLYFs9tfT7Ipf3PqTug3JZCzCgA13/wOXXYTUo9bRkxgh4A6gGhA4C5V76gAljeoOwfLaM8XNRPZsUWVb1g3KZ3XYBCC+rfF347mtQbdR47AiG3/1G07fcb1/PtjICwsamF5PXE4Jsd9jZTw7gD8OSlV6kAtnXaFDlGYMVzhAGqasFrxo8RhQph62ht7Z3It7fDwsG3ibZ9w3+04zvqDOHWnd9Re7+z5y4yAN0BKJXzU+oYgdU6lxTa4FmhMDwgEEY8NhXGjRwFW56bSaAUy/tx1zY+OwGiXnkRUr/eBWf2xkNpTrbrfxQdIfzbE6Gi8GEeUK9ynFcDKFXtUOoYUzQ0X3k10br9gPT9CdBQU907j+0JQhA2uXDpBWDlFRu191u5YZt4dWRTMTG2KOl3wyCBBo29u0N5Ipbi63TpWn3SHT/EwpyeOSCJitOOkah31ZgHyXCb+OU78qcLOkAYuzeZCiDm9cTgEzv26WWZKCqgQaMkkUxqyF31VF9phUs0v/iPMV87zO8StmwmJjyHbcwCcPnbH8me/61auh8WrdpMhmwMWjBn2HfIJJKmCQxdA+9vj4aS8iqfUI07AHji0itUaC5W71bkuKwhWVKsoOWlk3dFOYA2/86boaWhHlqbGsmx8NrhndtNARDBoQGIuUFsg5WPe/2DZZXd/jBkAoS+uokkon0GQFSw0KBJujhLWXmsKIzqa8/5capf+EDEVpfodvebq/jreOx8He8xGkCUVkkBiGkYNfVf7BVTTmb4BoAtHRWS88ACW6wsp4W2ODcCBT9NQ6+wl8M54JXiXqlSTWkJOSdM02AUbDSAtPwf2sSZL2sSIdw4dLKqJDbNXlobYKopKsVllP+bCg7CiUOrlEMUJbhXyPhp+oAVeRf4YCNi4TyX69sWzCXXsA22NWMIptV+ne3+RxZB/ME0aG75f+6yvaMDjp3IgBdWbJS87+a7Hof0kByoXloral4DIIpID12cKQkQRrFVTaf5yLjL3k4Sz2mFYbIkWlqGYF6h3doKkUsXiub2ijLPEllWcUWSaWkYOfBF7t4jGfEuD4uHfoPpID85dyX1XiVQWhpAriaMFQstOkApGLUGIXqmV/QCEIMGd/C5S7ngtW1fxEn6UVJRoYFoeQC5+eCRvCBV8GEPib0i7Xpq4SLTJrlSgOlZBcF5mtQc0F3OD0Hhrj0wcS7V14p1Hyt+N6VDtGUk+TjEZldFUvWBrhL8GVBan/T7sNwqAegaU3+kGGh614Fvf3CqrES0M4DCXoq7houWaL78p6vLoaqZK1pmVRzOC4tse+DnkjcIZFzJDudyuEIORaiVjSd5hTSJRpszqQBiusfsH8rJsIySY02dt5oKDapkpAB0vnYyPYvqC6Ntte/osQCqMSlZv9I1InItZGiMJtP07OXhbtdyOAPoDAR3DSNjqQT1fQVDRM0TITQMwPSyDdQUDLduWG/grqW/CInggVYHFuv93EXV193tT30HOSD6DIC4fkQMQJTr6wWK0R9HyXMwOqVBg0oZvQAcOGq623eRghCf6RFRsBa73HjC0OHXigCiIRxy1DBiw7DwHNZ/aQBizVktgNyzvB7A5IJ5utSTrT4EX7ilzsEWD9gqCg2KCqSGYefeD4GlAbg5Qp7CxxlCYRTs1QBKLWhXuq7EikGIEDjna5dKL4smpPsOmgTH/5Tvco9QkCocjmkRNfrGZygF0Hne57UAYnmOpqrWY+53LY0GncvS0bc+lCyjSflBUBKC0qi9H25oJKlCD1vmAqCVk9BUAHGnK1S04I5Ysrdks8WKLsXk9ojBTY48GT65bW11DTB4dKAoQCg4wBQLzScGMii/Erv3+mF/dytS1SpSsAyAQvUL1nRzqqJI8NDSWcknm/FvY1sRFNR8D0fygiXqvgGktuwL8PGrC9OzqHvCYJktKnofiYzRt91uh/TMXFj9rwhJRU3UjL1UJYwQNuwF5eYELQ+gVkNVjdyF6N4CH2eJR0/ptjERJ2SQyvNx4HkSfIYCiNtwYAnPF+ET9oR3jZmpGjysLyPItISzWCVEOA/0WAAb2grgXOWnbnWBYoJVVMJIbWDkSwByuyXgBpO4+6lc8LDnxEVO1Tb578CB5xUAOnzAnnkeplYQrKP5c4gAAUHDgGNvzqPwY9EyIkZAFYySoMUX4HMQdHR2kS3bMCfo93QYARLnfJhaQSnXXwfOhzkvbSALl4TiBZ8H0BfNCACNfiYDkAHIAGQAMgAZgAzCa/IsBiADkAHo7QA+8ll/2eYpEOr1DAagCdCZcZ+ZEOrpmwFoEHhW8GUEhHr7ZADqDJ/V/MqVY5nlhwGoowWfGC1qVoTbWQWtVcRqBIQMQIXg0eAwCkQ9e1hnIMXMrO/JAFQIn1ww9IbQqCGemYcASANKCgw9IWQAWsf+B+1qetiJbRyZAAAAAElFTkSuQmCC","captchaEnabled":true,"uuid":"2161c8a27d7544dfba3d78ac353061d7"},"paramMsg":null,"errCode":null}' request_body=None method='GET' sql_data={'sql': None} yaml_data=TestCase(url='http://47.107.113.31:18090/prod-api/code', method='GET', detail='获取验证码和uuid', assert_data={'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, headers={'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, requestType='NONE', is_run=None, data=None, dependence_case=False, dependence_case_data=None, sql=None, setup_sql=None, status_code=None, teardown_sql=None, teardown=None, current_request_set_cache=None, sleep=None) headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'} cookie={} assert_data={'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}} res_time=25.79 status_code=200 teardown=None teardown_sql=None body=None
INFO    2025-04-28 11:53:24,442d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:429 ---------------处理多业务逻辑结束---------------
INFO    2025-04-28 11:53:24,442d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:430 ---------------开始请求---------------
INFO    2025-04-28 11:53:24,482d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:436 ---------------请求结束----------------
INFO    2025-04-28 11:53:24,483d:\PytestAutoApi\logs\info-2025-04-28.log:log_decorator.py:32 
======================================================
用例标题: 正常登录
请求路径: http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login
请求方式: POST
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam', 'Content-Length': '122', 'Content-Type': 'application/json'}
请求内容: {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}
接口响应内容: {"code":500,"msg":" 10012","data":null,"paramMsg":null,"errCode":null}
接口响应时长: 38.24 ms
Http状态码: 200
=====================================================
ERROR   2025-04-28 11:53:24,622d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:175 用例总数: 1
ERROR   2025-04-28 11:53:24,623d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:176 异常用例数: 0
INFO    2025-04-28 11:53:24,623d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:179 用例执行时长: 1.00 s
INFO    2025-04-28 11:53:24,623d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:183 用例成功率: 0.00 %
INFO    2025-04-28 11:53:26,893d:\PytestAutoApi\logs\info-2025-04-28.log:main.py:36 Allure report generated, total cases: TestMetrics(passed=0, failed=1, skipped=0, total=1, broken=0, pass_rate=0.0, time=0.09)
INFO    2025-04-28 12:00:24,169d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 12:00:24,169d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:00:24,169d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:00:24,169d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:00:24,169d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 12:00:24,169d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:00:24,169d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 12:00:24,169d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 12:00:24,181d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 12:00:24,181d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'DELETE', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:00:24,181d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:00:24,181d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:00:24,187d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 12:00:24,187d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 12:00:24,188d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:00:24,189d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:00:24,189d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:00:24,191d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 12:00:24,191d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:00:24,195d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 12:00:24,195d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 12:00:24,199d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 12:00:24,200d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/list', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:00:24,200d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 12:00:24,201d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 12:00:24,206d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 12:00:24,207d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:00:24,207d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 12:00:24,207d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 12:00:24,209d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 12:00:24,209d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:00:24,209d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:00:24,209d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:00:24,217d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 12:00:24,217d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-28 12:00:24,219d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:00:24,219d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:00:24,219d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:00:24,222d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 12:00:24,222d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:00:24,223d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 12:00:24,223d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 12:00:24,232d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 12:00:24,232d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 12:00:24,233d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:00:24,233d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_query_bird_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:00:24,234d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_query_bird_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:00:24,237d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 12:00:24,238d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-28 12:00:24,238d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/app/info/appUser/pet/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:00:24,238d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:00:24,240d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:00:24,242d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 12:00:24,242d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:00:24,242d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 12:00:24,246d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 12:00:24,582d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:19 初始化conftest.py
INFO    2025-04-28 12:00:24,610d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:12 TestData: [{'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-28 12:00:24,672d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-28 12:00:24,685d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:133 指定运行顺序: []
INFO    2025-04-28 12:00:24,685d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:142 运行顺序: [<Function test_login[正常登录]>]
INFO    2025-04-28 12:00:24,762d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:37 app接口登录初始化
ERROR   2025-04-28 12:00:24,982d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:179 用例总数: 1
ERROR   2025-04-28 12:00:24,982d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:180 异常用例数: 1
INFO    2025-04-28 12:00:24,982d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:183 用例执行时长: 0.39 s
INFO    2025-04-28 12:00:24,982d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:187 用例成功率: 0.00 %
INFO    2025-04-28 12:00:27,551d:\PytestAutoApi\logs\info-2025-04-28.log:main.py:36 Allure report generated, total cases: TestMetrics(passed=0, failed=0, skipped=0, total=1, broken=1, pass_rate=0.0, time=0.0)
INFO    2025-04-28 12:00:53,173d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 12:00:53,174d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:00:53,174d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:00:53,175d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:00:53,178d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 12:00:53,178d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:00:53,178d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 12:00:53,179d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 12:00:53,182d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 12:00:53,182d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'DELETE', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:00:53,182d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:00:53,183d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:00:53,186d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 12:00:53,188d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 12:00:53,188d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:00:53,189d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:00:53,190d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:00:53,194d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 12:00:53,195d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:00:53,195d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 12:00:53,196d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 12:00:53,199d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 12:00:53,199d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/list', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:00:53,200d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 12:00:53,200d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 12:00:53,204d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 12:00:53,204d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:00:53,205d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 12:00:53,206d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 12:00:53,207d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 12:00:53,207d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:00:53,208d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:00:53,208d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:00:53,208d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 12:00:53,208d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-28 12:00:53,208d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:00:53,211d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:00:53,212d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:00:53,214d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 12:00:53,214d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:00:53,215d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 12:00:53,215d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 12:00:53,218d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 12:00:53,218d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 12:00:53,219d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:00:53,219d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_query_bird_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:00:53,219d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_query_bird_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:00:53,219d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 12:00:53,219d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-28 12:00:53,219d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/app/info/appUser/pet/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:00:53,219d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:00:53,223d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:00:53,225d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 12:00:53,225d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:00:53,226d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 12:00:53,226d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 12:00:53,558d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:19 初始化conftest.py
INFO    2025-04-28 12:00:53,578d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:12 TestData: [{'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-28 12:00:53,660d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-28 12:00:53,660d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:134 指定运行顺序: []
INFO    2025-04-28 12:00:53,660d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:143 运行顺序: [<Function test_login[正常登录]>]
INFO    2025-04-28 12:00:53,727d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:37 app接口登录初始化
ERROR   2025-04-28 12:00:53,880d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:180 用例总数: 1
ERROR   2025-04-28 12:00:53,880d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:181 异常用例数: 1
INFO    2025-04-28 12:00:53,881d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:184 用例执行时长: 0.31 s
INFO    2025-04-28 12:00:53,881d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:188 用例成功率: 0.00 %
INFO    2025-04-28 12:00:56,392d:\PytestAutoApi\logs\info-2025-04-28.log:main.py:36 Allure report generated, total cases: TestMetrics(passed=0, failed=0, skipped=0, total=1, broken=1, pass_rate=0.0, time=0.0)
INFO    2025-04-28 12:01:27,544d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 12:01:27,544d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:01:27,545d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:01:27,545d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:01:27,548d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 12:01:27,548d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:01:27,549d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 12:01:27,549d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 12:01:27,552d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 12:01:27,552d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'DELETE', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:01:27,553d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:01:27,553d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:01:27,556d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 12:01:27,556d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 12:01:27,557d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:01:27,557d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:01:27,558d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:01:27,562d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 12:01:27,563d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:01:27,563d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 12:01:27,564d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 12:01:27,566d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 12:01:27,566d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/list', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:01:27,567d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 12:01:27,567d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 12:01:27,571d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 12:01:27,571d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:01:27,572d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 12:01:27,572d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 12:01:27,573d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 12:01:27,574d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:01:27,574d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:01:27,574d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:01:27,574d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 12:01:27,574d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-28 12:01:27,574d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:01:27,580d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:01:27,580d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:01:27,583d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 12:01:27,584d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:01:27,585d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 12:01:27,585d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 12:01:27,586d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 12:01:27,586d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 12:01:27,586d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:01:27,590d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_query_bird_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:01:27,590d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_query_bird_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:01:27,592d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 12:01:27,593d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-28 12:01:27,593d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/app/info/appUser/pet/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:01:27,593d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:01:27,594d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:01:27,595d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 12:01:27,595d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:01:27,595d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 12:01:27,595d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 12:01:27,891d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:19 初始化conftest.py
INFO    2025-04-28 12:01:27,920d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:12 TestData: [{'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-28 12:01:27,982d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-28 12:01:27,992d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:134 指定运行顺序: []
INFO    2025-04-28 12:01:27,992d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:143 运行顺序: [<Function test_login[正常登录]>]
INFO    2025-04-28 12:01:28,048d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:37 app接口登录初始化
ERROR   2025-04-28 12:01:28,193d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:180 用例总数: 1
ERROR   2025-04-28 12:01:28,193d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:181 异常用例数: 1
INFO    2025-04-28 12:01:28,194d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:184 用例执行时长: 0.29 s
INFO    2025-04-28 12:01:28,194d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:188 用例成功率: 0.00 %
INFO    2025-04-28 12:01:30,613d:\PytestAutoApi\logs\info-2025-04-28.log:main.py:36 Allure report generated, total cases: TestMetrics(passed=0, failed=0, skipped=0, total=1, broken=1, pass_rate=0.0, time=0.0)
INFO    2025-04-28 12:01:44,772d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 12:01:44,772d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:01:44,772d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:01:44,778d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:01:44,778d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 12:01:44,778d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:01:44,778d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 12:01:44,778d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 12:01:44,783d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 12:01:44,783d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'DELETE', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:01:44,785d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:01:44,785d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:01:44,788d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 12:01:44,788d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 12:01:44,788d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:01:44,790d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:01:44,790d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:01:44,795d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 12:01:44,796d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:01:44,796d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 12:01:44,797d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 12:01:44,800d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 12:01:44,800d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/list', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:01:44,802d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 12:01:44,802d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 12:01:44,804d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 12:01:44,804d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:01:44,804d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 12:01:44,807d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 12:01:44,808d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 12:01:44,808d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:01:44,809d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:01:44,809d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:01:44,811d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 12:01:44,811d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-28 12:01:44,812d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:01:44,812d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:01:44,813d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:01:44,815d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 12:01:44,816d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:01:44,816d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 12:01:44,816d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 12:01:44,818d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 12:01:44,818d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 12:01:44,818d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:01:44,821d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_query_bird_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:01:44,821d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_query_bird_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:01:44,824d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 12:01:44,824d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-28 12:01:44,824d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/app/info/appUser/pet/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:01:44,825d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:01:44,825d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 12:01:44,826d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 12:01:44,826d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 12:01:44,826d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 12:01:44,826d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 12:01:45,124d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:19 初始化conftest.py
INFO    2025-04-28 12:01:45,155d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:12 TestData: [{'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-28 12:01:45,215d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-28 12:01:45,225d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:134 指定运行顺序: []
INFO    2025-04-28 12:01:45,225d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:143 运行顺序: [<Function test_login[正常登录]>]
INFO    2025-04-28 12:01:45,286d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:37 app接口登录初始化
INFO    2025-04-28 12:01:45,320d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:49 response: {"code":200,"msg":"操作成功","data":{"areaListVoList":[{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"NL_31","dictKeyName":"荷兰","dictDataRemark":"{\"national_number\":\"31\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"荷兰"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"IT_39","dictKeyName":"意大利","dictDataRemark":"{\"national_number\":\"39\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"意大利"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"JP_81","dictKeyName":"日本","dictDataRemark":"{\"national_number\":\"81\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"日本"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"LI_423","dictKeyName":"列支敦士登","dictDataRemark":"{\"national_number\":\"423\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"列支敦士登"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"LT_370","dictKeyName":"立陶宛","dictDataRemark":"{\"national_number\":\"370\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"立陶宛"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"LU_352","dictKeyName":"卢森堡","dictDataRemark":"{\"national_number\":\"352\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"卢森堡"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"LV_371","dictKeyName":"拉脱维亚","dictDataRemark":"{\"national_number\":\"371\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"拉脱维亚"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MC_377","dictKeyName":"摩纳哥","dictDataRemark":"{\"national_number\":\"377\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"摩纳哥"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MD_373","dictKeyName":"摩尔多瓦","dictDataRemark":"{\"national_number\":\"373\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"摩尔多瓦"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"ME_382","dictKeyName":"蒙特内哥罗","dictDataRemark":"{\"national_number\":\"382\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"蒙特内哥罗"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MK_389","dictKeyName":"马其顿","dictDataRemark":"{\"national_number\":\"389\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"马其顿"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MT_356","dictKeyName":"马耳他","dictDataRemark":"{\"national_number\":\"356\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"马耳他"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MX_1","dictKeyName":"墨西哥","dictDataRemark":"{\"national_number\":\"52\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"墨西哥"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"IS_354","dictKeyName":"冰岛","dictDataRemark":"{\"national_number\":\"354\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"冰岛"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"NO_47","dictKeyName":"挪威","dictDataRemark":"{\"national_number\":\"47\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"挪威"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"PL_48","dictKeyName":"波兰","dictDataRemark":"{\"national_number\":\"48\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"波兰"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"PT_351","dictKeyName":"葡萄牙","dictDataRemark":"{\"national_number\":\"351\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"葡萄牙"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"RO_40","dictKeyName":"罗马尼亚","dictDataRemark":"{\"national_number\":\"40\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"罗马尼亚"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"RS_381","dictKeyName":"塞尔维亚","dictDataRemark":"{\"national_number\":\"381\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"塞尔维亚"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"SE_46","dictKeyName":"瑞典","dictDataRemark":"{\"national_number\":\"46\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"瑞典"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"SI_386","dictKeyName":"斯洛文尼亚","dictDataRemark":"{\"national_number\":\"386\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"斯洛文尼亚"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"SK_421","dictKeyName":"斯洛伐克","dictDataRemark":"{\"national_number\":\"421\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"斯洛伐克"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"SM_378","dictKeyName":"圣马力诺","dictDataRemark":"{\"national_number\":\"378\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"圣马力诺"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"UA_380","dictKeyName":"乌克兰","dictDataRemark":"{\"national_number\":\"380\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"乌克兰"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"US_1","dictKeyName":"美国","dictDataRemark":"{\"national_number\":\"1\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"美国test"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"VG_1284","dictKeyName":"英属维京群岛","dictDataRemark":"{\"national_number\":\"1284\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"英属维京群岛"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"EE_372","dictKeyName":"爱沙尼亚","dictDataRemark":"{\"national_number\":\"372\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"爱沙尼亚"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"AL_355","dictKeyName":"阿尔巴尼亚","dictDataRemark":"{\"national_number\":\"355\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"阿尔巴尼亚"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"AT_43","dictKeyName":"奥地利","dictDataRemark":"{\"national_number\":\"43\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"奥地利"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"BA_387","dictKeyName":"波斯尼亚和黑塞哥维那","dictDataRemark":"{\"national_number\":\"387\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"波斯尼亚和黑塞哥维那"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"BE_32","dictKeyName":"比利时","dictDataRemark":"{\"national_number\":\"32\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"比利时"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"BG_359","dictKeyName":"保加利亚","dictDataRemark":"{\"national_number\":\"359\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"保加利亚"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"BY_375","dictKeyName":"白俄罗斯","dictDataRemark":"{\"national_number\":\"375\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"白俄罗斯"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"CA_1","dictKeyName":"加拿大","dictDataRemark":"{\"national_number\":\"1\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"加拿大"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"CH_41","dictKeyName":"瑞士","dictDataRemark":"{\"national_number\":\"41\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"瑞士"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"CY_357","dictKeyName":"塞浦路斯","dictDataRemark":"{\"national_number\":\"357\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"塞浦路斯"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"CZ_420","dictKeyName":"捷克共和国","dictDataRemark":"{\"national_number\":\"420\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"捷克共和国"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"DE_49","dictKeyName":"德国","dictDataRemark":"{\"national_number\":\"49\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"德国"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"DK_45","dictKeyName":"丹麦","dictDataRemark":"{\"national_number\":\"45\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"丹麦"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"AD_376","dictKeyName":"安道尔","dictDataRemark":"{\"national_number\":\"376\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"安道尔"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"ES_34","dictKeyName":"西班牙","dictDataRemark":"{\"national_number\":\"34\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"西班牙"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"FI_358","dictKeyName":"芬兰","dictDataRemark":"{\"national_number\":\"358\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"芬兰"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"FO_298","dictKeyName":"法罗群岛","dictDataRemark":"{\"national_number\":\"298\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"法罗群岛"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"FR_33","dictKeyName":"法国","dictDataRemark":"{\"national_number\":\"33\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"法国"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"GB_44","dictKeyName":"英国","dictDataRemark":"{\"national_number\":\"44\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"英国"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"GI_350","dictKeyName":"直布罗陀","dictDataRemark":"{\"national_number\":\"350\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"直布罗陀"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"GL_299","dictKeyName":"格陵兰","dictDataRemark":"{\"national_number\":\"299\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"格陵兰"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"GR_30","dictKeyName":"希腊","dictDataRemark":"{\"national_number\":\"30\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"希腊"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"HR_385","dictKeyName":"克罗地亚","dictDataRemark":"{\"national_number\":\"385\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"克罗地亚"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"HU_36","dictKeyName":"匈牙利","dictDataRemark":"{\"national_number\":\"36\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"匈牙利"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"IE_353","dictKeyName":"爱尔兰","dictDataRemark":"{\"national_number\":\"353\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"爱尔兰"}],"hostListVoList":[{"dataCenterCode":"AL","host":"http://47.107.113.31:18090/prod-api","wopetHost":null}]}}
INFO    2025-04-28 12:01:45,322d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:61 登录初始化
INFO    2025-04-28 12:01:45,469d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:85 验证码: 10
INFO    2025-04-28 12:01:45,470d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:86 uuid: 2d60c509857e45adbe245cd790186b8f
INFO    2025-04-28 12:01:45,709d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:107 缓存中的token:Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJsb2dpblR5cGUiOiJsb2dpbiIsImxvZ2luSWQiOiJzeXNfdXNlcjoxNjU5MzkxNjY2MjU0NzA0NjQyIiwicm5TdHIiOiJ4YUJHdkZ2cWMwQmJUbkZpUEdaemVCMnFYYjZMSHZvUSIsInVzZXJJZCI6MTY1OTM5MTY2NjI1NDcwNDY0Mn0.GT0tNT8EufXQ9UIjoFIOdKnhXMD5gRIEn2N1sqy2yGI
INFO    2025-04-28 12:01:45,714d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:29 data: {'url': 'http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-28 12:01:45,717d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:171 _dependent_type: True
INFO    2025-04-28 12:01:45,717d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:172 _dependence_case_datas: [DependentCaseData(case_id='code_01', dependent_data=[DependentData(dependent_type='response', jsonpath='$.data.uuid', set_cache='code_01_uuid', replace_key=None), DependentData(dependent_type='response', jsonpath='$.data.img', set_cache='code_01_code', replace_key=None)])]
INFO    2025-04-28 12:01:45,718d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:180 ********开始获取依赖数据: code_01********
INFO    2025-04-28 12:01:45,719d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:190 ********获取依赖数据成功: code_01********
INFO    2025-04-28 12:01:45,719d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:193 依赖数据: {'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-28 12:01:45,720d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:171 _dependent_type: False
INFO    2025-04-28 12:01:45,720d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:172 _dependence_case_datas: None
INFO    2025-04-28 12:01:45,720d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:429 ---------------处理多业务逻辑结束---------------
INFO    2025-04-28 12:01:45,721d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:430 ---------------开始请求---------------
INFO    2025-04-28 12:01:45,751d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:436 ---------------请求结束----------------
INFO    2025-04-28 12:01:45,751d:\PytestAutoApi\logs\info-2025-04-28.log:log_decorator.py:32 
======================================================
用例标题: 获取验证码和uuid
请求路径: http://47.107.113.31:18090/prod-api/code
请求方式: GET
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}
请求内容: None
接口响应内容: {"code":200,"msg":"操作成功","data":{"img":"iVBORw0KGgoAAAANSUhEUgAAAKAAAAA8CAYAAADha7EVAAAGFElEQVR42u3dfWhVZRwH8GH/htF/IaIlFdWENCnUEMb+CNFqvqBDnUQ2EaNcUUlRToKgf8qCSC1N3TSX+bJmOnWjWTJDRzVSGauW16673t2cu/Nube2vI8+Fozvnec7b8/6c8/vjiyDnbe7j83Z+z70lY2NjFgSiKiXwjwABgBAACIEkGuC2prduB34xycjPZ7/QA6AbHSDUJ/tvtPqGFp4dAAjxRRf22CjwtOqCvbABQnXwRJzrhgcAIRggUYi98AFACFd8pGv64QOAECH4xl+bGuCOiY8ITRiAV8tqqaP6F1t2d4/Q8Aa4/M0FvhGFWxuAbkCsLaBqkCYAREDCAqOBiFq/IIRaACQB4d0Fy0ZoCsCo50SBaHe/fveBFjChAFnHfmEQGgHQayGaZfwHY8BgPDwmH0EImQDyyM1M1to7bS6G78xrm+FNSIjkMiNWxf2XMXwf1/Qxo+E1+w2DUBnAlqoNGL6j81dBMULI1K66huF79ZleLlh4Lr/4IVQG8M+D32P49j08r9gq0l5z08Zq38QJX+u3eQzfkgdTxVaRBxLe639+CKUDLHa9D8xx4Nt5b6nV297BhI7nsdp3vVNTDnzl9/RYne0FbkBkA5T6Lrhl5StY69f56U4qeKytpYkA31uRwVq/hk/6uQKRBXD8faRUw+zeNRvD17x0bWQ8vJ7HNIQn9uFd78bFvcJxiEJIuoeQesD6gXKrrrvMqp/ylLPrnVZq1f9dphSMKQiz6VHrucnOWS+aBV/PjigZn8loZUt44UN/opbO3fqlTrQ5jlEFxQSEqKVzt35nm28qmyAYAdCG1VV3EF/vq9lMPFYVEJ0RHtszgK/3begTPkEQtSYY9polPPANpjNW3eQnHfgaSsut4YG85zkA0Nn1Lpzk7HorH01ZgwOjUgCyVkOzLHJzAXi8Yg3W+l1pPeN7DgC8kzeex7vecy0FKUskMsvyuQK0IV3c8TWG7/T6d0KdCwDHrMYvb2D4PlyX5X6f8QjfX/241AgDmE+lrT2TZjnwoVlwIZsDgCHSe3nEWnCfs+tFs2DWWW9iAB579gWs9ft9W33o1jPps+DXF17FWr9DW/uF3Ct2AHd/ji84H5pTEan7poVyV+4h7tGh610z+x+h97QRGg8QLTi7Z70o6bb2yGNIGoSmAyTNelE6figIvzft/g5R16MC+NWSGRg+NBOmmcTQvMs1HeDbS/F3vWgmLOv+vBDyuE5kgH8cOEqscO7rvMgVoF+Fi8kAW77JEyucu38blvqfgBUPL8SRABZy14kVzqdWvEy9jJOkesD+3CixwvndyoyS56HdcsmzG48EEL1aI7V+1zo6hQJc+eOlYliPUR30ao3U+l06P6T0uURuzeQGMPvrBSI+Uon9vAtbuACkQaUrwq5fhoj4WErsaWPkLPjw04uIAHsaTxLxBSEMAsgCScfWsHpumgjwdOMgAKTZ32Hv8fBq/VgA8sKjC0LS/g57j4eK5zEO4IEn5hMBnqv9iAqgyNZPR4BVM64QAW7f9C8ADHrYnqZTnpvL0biQB8B1Wz7jFt0Q/tQ06Lm5HI0Lk771NBAgqcq5WGr/WCnxeNUA3QhVAyRVOdv1frD3OQAgKihF2ylJAHe9ONPzPNrxnygsqhCiglK0nZIE8IPqLAAMAvjXkWbP7re74TuqxWQZkw9dALYd9u5+T+7PawniyPRl+gBEn+HiBRBtMgeAAQvPNX2eAFk2mYvGJxOhL0BSqb2d0aHhyG80ZM1+dQFIKrW389/Q/5GvV7l9gmdiCdBd7ez18WphEIZ98xEngO5qZ9qPVwuDjBWiG50shFw3ppOQef19EgDySFRUtAj9AC6r6iJGK4BucFHgicSSJHws55EABkHjAVG7b8sEgPoADHsuC0Itv641bq/iTAOIQEUdA9IiBIAwBnQAtCHRTEJoEGr7hdWsJVVxwKdiFgwAGSGZUBnNClHkOiBN9xtrgHEqydc9WgLMVTfcji4QSQFAfBHKwBcI0I1OB4S65fxLE0LHpJ8rCihhyzAAMBicrHNVIVS6EA0AcUA6X080RCWv4nQaA8YJn2kIReUWSLZN7vSTT/oAAAAASUVORK5CYII=","captchaEnabled":true,"uuid":"19e537f883774d868a83d89425afee1b"},"paramMsg":null,"errCode":null}
接口响应时长: 28.6 ms
Http状态码: 200
=====================================================
INFO    2025-04-28 12:01:45,751d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:195 依赖响应数据: url='http://47.107.113.31:18090/prod-api/code' is_run=None detail='获取验证码和uuid' response_data='{"code":200,"msg":"操作成功","data":{"img":"iVBORw0KGgoAAAANSUhEUgAAAKAAAAA8CAYAAADha7EVAAAGFElEQVR42u3dfWhVZRwH8GH/htF/IaIlFdWENCnUEMb+CNFqvqBDnUQ2EaNcUUlRToKgf8qCSC1N3TSX+bJmOnWjWTJDRzVSGauW16673t2cu/Nube2vI8+Fozvnec7b8/6c8/vjiyDnbe7j83Z+z70lY2NjFgSiKiXwjwABgBAACIEkGuC2prduB34xycjPZ7/QA6AbHSDUJ/tvtPqGFp4dAAjxRRf22CjwtOqCvbABQnXwRJzrhgcAIRggUYi98AFACFd8pGv64QOAECH4xl+bGuCOiY8ITRiAV8tqqaP6F1t2d4/Q8Aa4/M0FvhGFWxuAbkCsLaBqkCYAREDCAqOBiFq/IIRaACQB4d0Fy0ZoCsCo50SBaHe/fveBFjChAFnHfmEQGgHQayGaZfwHY8BgPDwmH0EImQDyyM1M1to7bS6G78xrm+FNSIjkMiNWxf2XMXwf1/Qxo+E1+w2DUBnAlqoNGL6j81dBMULI1K66huF79ZleLlh4Lr/4IVQG8M+D32P49j08r9gq0l5z08Zq38QJX+u3eQzfkgdTxVaRBxLe639+CKUDLHa9D8xx4Nt5b6nV297BhI7nsdp3vVNTDnzl9/RYne0FbkBkA5T6Lrhl5StY69f56U4qeKytpYkA31uRwVq/hk/6uQKRBXD8faRUw+zeNRvD17x0bWQ8vJ7HNIQn9uFd78bFvcJxiEJIuoeQesD6gXKrrrvMqp/ylLPrnVZq1f9dphSMKQiz6VHrucnOWS+aBV/PjigZn8loZUt44UN/opbO3fqlTrQ5jlEFxQSEqKVzt35nm28qmyAYAdCG1VV3EF/vq9lMPFYVEJ0RHtszgK/3begTPkEQtSYY9polPPANpjNW3eQnHfgaSsut4YG85zkA0Nn1Lpzk7HorH01ZgwOjUgCyVkOzLHJzAXi8Yg3W+l1pPeN7DgC8kzeex7vecy0FKUskMsvyuQK0IV3c8TWG7/T6d0KdCwDHrMYvb2D4PlyX5X6f8QjfX/241AgDmE+lrT2TZjnwoVlwIZsDgCHSe3nEWnCfs+tFs2DWWW9iAB579gWs9ft9W33o1jPps+DXF17FWr9DW/uF3Ct2AHd/ji84H5pTEan7poVyV+4h7tGh610z+x+h97QRGg8QLTi7Z70o6bb2yGNIGoSmAyTNelE6figIvzft/g5R16MC+NWSGRg+NBOmmcTQvMs1HeDbS/F3vWgmLOv+vBDyuE5kgH8cOEqscO7rvMgVoF+Fi8kAW77JEyucu38blvqfgBUPL8SRABZy14kVzqdWvEy9jJOkesD+3CixwvndyoyS56HdcsmzG48EEL1aI7V+1zo6hQJc+eOlYliPUR30ao3U+l06P6T0uURuzeQGMPvrBSI+Uon9vAtbuACkQaUrwq5fhoj4WErsaWPkLPjw04uIAHsaTxLxBSEMAsgCScfWsHpumgjwdOMgAKTZ32Hv8fBq/VgA8sKjC0LS/g57j4eK5zEO4IEn5hMBnqv9iAqgyNZPR4BVM64QAW7f9C8ADHrYnqZTnpvL0biQB8B1Wz7jFt0Q/tQ06Lm5HI0Lk771NBAgqcq5WGr/WCnxeNUA3QhVAyRVOdv1frD3OQAgKihF2ylJAHe9ONPzPNrxnygsqhCiglK0nZIE8IPqLAAMAvjXkWbP7re74TuqxWQZkw9dALYd9u5+T+7PawniyPRl+gBEn+HiBRBtMgeAAQvPNX2eAFk2mYvGJxOhL0BSqb2d0aHhyG80ZM1+dQFIKrW389/Q/5GvV7l9gmdiCdBd7ez18WphEIZ98xEngO5qZ9qPVwuDjBWiG50shFw3ppOQef19EgDySFRUtAj9AC6r6iJGK4BucFHgicSSJHws55EABkHjAVG7b8sEgPoADHsuC0Itv641bq/iTAOIQEUdA9IiBIAwBnQAtCHRTEJoEGr7hdWsJVVxwKdiFgwAGSGZUBnNClHkOiBN9xtrgHEqydc9WgLMVTfcji4QSQFAfBHKwBcI0I1OB4S65fxLE0LHpJ8rCihhyzAAMBicrHNVIVS6EA0AcUA6X080RCWv4nQaA8YJn2kIReUWSLZN7vSTT/oAAAAASUVORK5CYII=","captchaEnabled":true,"uuid":"19e537f883774d868a83d89425afee1b"},"paramMsg":null,"errCode":null}' request_body=None method='GET' sql_data={'sql': None} yaml_data=TestCase(url='http://47.107.113.31:18090/prod-api/code', method='GET', detail='获取验证码和uuid', assert_data={'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, headers={'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, requestType='NONE', is_run=None, data=None, dependence_case=False, dependence_case_data=None, sql=None, setup_sql=None, status_code=None, teardown_sql=None, teardown=None, current_request_set_cache=None, sleep=None) headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'} cookie={} assert_data={'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}} res_time=28.6 status_code=200 teardown=None teardown_sql=None body=None
INFO    2025-04-28 12:01:45,751d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:429 ---------------处理多业务逻辑结束---------------
INFO    2025-04-28 12:01:45,751d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:430 ---------------开始请求---------------
INFO    2025-04-28 12:01:45,798d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:436 ---------------请求结束----------------
INFO    2025-04-28 12:01:45,801d:\PytestAutoApi\logs\info-2025-04-28.log:log_decorator.py:32 
======================================================
用例标题: 正常登录
请求路径: http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login
请求方式: POST
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam', 'Content-Length': '122', 'Content-Type': 'application/json'}
请求内容: {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}
接口响应内容: {"code":500,"msg":" 10012","data":null,"paramMsg":null,"errCode":null}
接口响应时长: 41.27 ms
Http状态码: 200
=====================================================
ERROR   2025-04-28 12:01:45,921d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:180 用例总数: 1
ERROR   2025-04-28 12:01:45,922d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:181 异常用例数: 0
INFO    2025-04-28 12:01:45,923d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:184 用例执行时长: 0.78 s
INFO    2025-04-28 12:01:45,923d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:188 用例成功率: 0.00 %
INFO    2025-04-28 12:01:48,376d:\PytestAutoApi\logs\info-2025-04-28.log:main.py:36 Allure report generated, total cases: TestMetrics(passed=0, failed=1, skipped=0, total=1, broken=0, pass_rate=0.0, time=0.09)
INFO    2025-04-28 13:53:08,858d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 13:53:08,872d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 13:53:08,872d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 13:53:08,872d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 13:53:08,891d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 13:53:08,891d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 13:53:08,891d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 13:53:08,892d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 13:53:08,901d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 13:53:08,901d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'DELETE', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 13:53:08,901d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 13:53:08,904d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 13:53:08,921d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 13:53:08,922d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 13:53:08,922d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 13:53:08,922d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 13:53:08,923d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 13:53:08,930d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 13:53:08,930d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 13:53:08,930d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 13:53:08,937d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 13:53:08,944d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 13:53:08,944d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/list', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 13:53:08,944d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 13:53:08,948d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 13:53:08,959d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 13:53:08,961d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 13:53:08,961d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 13:53:08,961d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 13:53:08,983d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 13:53:08,983d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 13:53:08,984d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 13:53:08,984d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 13:53:08,993d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 13:53:08,993d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-28 13:53:08,993d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 13:53:08,993d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 13:53:08,996d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 13:53:09,000d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 13:53:09,000d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 13:53:09,000d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 13:53:09,000d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 13:53:09,024d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 13:53:09,024d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 13:53:09,027d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 13:53:09,027d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_query_bird_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 13:53:09,028d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_query_bird_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 13:53:09,047d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 13:53:09,047d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-28 13:53:09,048d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/app/info/appUser/pet/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 13:53:09,049d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 13:53:09,049d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 13:53:09,067d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 13:53:09,067d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 13:53:09,067d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 13:53:09,068d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 13:53:09,532d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:19 初始化conftest.py
INFO    2025-04-28 13:53:09,620d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:12 TestData: [{'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-28 13:53:09,706d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-28 13:53:09,706d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:134 指定运行顺序: []
INFO    2025-04-28 13:53:09,706d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:143 运行顺序: [<Function test_login[正常登录]>]
INFO    2025-04-28 13:53:09,782d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:37 app接口登录初始化
INFO    2025-04-28 13:53:09,877d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:49 www_response: {"code":200,"msg":"操作成功","data":{"areaListVoList":[{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"NL_31","dictKeyName":"荷兰","dictDataRemark":"{\"national_number\":\"31\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"荷兰"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"IT_39","dictKeyName":"意大利","dictDataRemark":"{\"national_number\":\"39\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"意大利"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"JP_81","dictKeyName":"日本","dictDataRemark":"{\"national_number\":\"81\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"日本"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"LI_423","dictKeyName":"列支敦士登","dictDataRemark":"{\"national_number\":\"423\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"列支敦士登"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"LT_370","dictKeyName":"立陶宛","dictDataRemark":"{\"national_number\":\"370\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"立陶宛"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"LU_352","dictKeyName":"卢森堡","dictDataRemark":"{\"national_number\":\"352\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"卢森堡"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"LV_371","dictKeyName":"拉脱维亚","dictDataRemark":"{\"national_number\":\"371\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"拉脱维亚"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MC_377","dictKeyName":"摩纳哥","dictDataRemark":"{\"national_number\":\"377\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"摩纳哥"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MD_373","dictKeyName":"摩尔多瓦","dictDataRemark":"{\"national_number\":\"373\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"摩尔多瓦"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"ME_382","dictKeyName":"蒙特内哥罗","dictDataRemark":"{\"national_number\":\"382\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"蒙特内哥罗"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MK_389","dictKeyName":"马其顿","dictDataRemark":"{\"national_number\":\"389\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"马其顿"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MT_356","dictKeyName":"马耳他","dictDataRemark":"{\"national_number\":\"356\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"马耳他"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MX_1","dictKeyName":"墨西哥","dictDataRemark":"{\"national_number\":\"52\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"墨西哥"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"IS_354","dictKeyName":"冰岛","dictDataRemark":"{\"national_number\":\"354\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"冰岛"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"NO_47","dictKeyName":"挪威","dictDataRemark":"{\"national_number\":\"47\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"挪威"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"PL_48","dictKeyName":"波兰","dictDataRemark":"{\"national_number\":\"48\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"波兰"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"PT_351","dictKeyName":"葡萄牙","dictDataRemark":"{\"national_number\":\"351\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"葡萄牙"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"RO_40","dictKeyName":"罗马尼亚","dictDataRemark":"{\"national_number\":\"40\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"罗马尼亚"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"RS_381","dictKeyName":"塞尔维亚","dictDataRemark":"{\"national_number\":\"381\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"塞尔维亚"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"SE_46","dictKeyName":"瑞典","dictDataRemark":"{\"national_number\":\"46\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"瑞典"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"SI_386","dictKeyName":"斯洛文尼亚","dictDataRemark":"{\"national_number\":\"386\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"斯洛文尼亚"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"SK_421","dictKeyName":"斯洛伐克","dictDataRemark":"{\"national_number\":\"421\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"斯洛伐克"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"SM_378","dictKeyName":"圣马力诺","dictDataRemark":"{\"national_number\":\"378\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"圣马力诺"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"UA_380","dictKeyName":"乌克兰","dictDataRemark":"{\"national_number\":\"380\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"乌克兰"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"US_1","dictKeyName":"美国","dictDataRemark":"{\"national_number\":\"1\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"美国test"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"VG_1284","dictKeyName":"英属维京群岛","dictDataRemark":"{\"national_number\":\"1284\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"英属维京群岛"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"EE_372","dictKeyName":"爱沙尼亚","dictDataRemark":"{\"national_number\":\"372\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"爱沙尼亚"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"AL_355","dictKeyName":"阿尔巴尼亚","dictDataRemark":"{\"national_number\":\"355\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"阿尔巴尼亚"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"AT_43","dictKeyName":"奥地利","dictDataRemark":"{\"national_number\":\"43\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"奥地利"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"BA_387","dictKeyName":"波斯尼亚和黑塞哥维那","dictDataRemark":"{\"national_number\":\"387\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"波斯尼亚和黑塞哥维那"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"BE_32","dictKeyName":"比利时","dictDataRemark":"{\"national_number\":\"32\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"比利时"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"BG_359","dictKeyName":"保加利亚","dictDataRemark":"{\"national_number\":\"359\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"保加利亚"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"BY_375","dictKeyName":"白俄罗斯","dictDataRemark":"{\"national_number\":\"375\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"白俄罗斯"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"CA_1","dictKeyName":"加拿大","dictDataRemark":"{\"national_number\":\"1\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"加拿大"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"CH_41","dictKeyName":"瑞士","dictDataRemark":"{\"national_number\":\"41\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"瑞士"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"CY_357","dictKeyName":"塞浦路斯","dictDataRemark":"{\"national_number\":\"357\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"塞浦路斯"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"CZ_420","dictKeyName":"捷克共和国","dictDataRemark":"{\"national_number\":\"420\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"捷克共和国"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"DE_49","dictKeyName":"德国","dictDataRemark":"{\"national_number\":\"49\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"德国"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"DK_45","dictKeyName":"丹麦","dictDataRemark":"{\"national_number\":\"45\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"丹麦"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"AD_376","dictKeyName":"安道尔","dictDataRemark":"{\"national_number\":\"376\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"安道尔"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"ES_34","dictKeyName":"西班牙","dictDataRemark":"{\"national_number\":\"34\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"西班牙"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"FI_358","dictKeyName":"芬兰","dictDataRemark":"{\"national_number\":\"358\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"芬兰"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"FO_298","dictKeyName":"法罗群岛","dictDataRemark":"{\"national_number\":\"298\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"法罗群岛"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"FR_33","dictKeyName":"法国","dictDataRemark":"{\"national_number\":\"33\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"法国"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"GB_44","dictKeyName":"英国","dictDataRemark":"{\"national_number\":\"44\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"英国"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"GI_350","dictKeyName":"直布罗陀","dictDataRemark":"{\"national_number\":\"350\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"直布罗陀"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"GL_299","dictKeyName":"格陵兰","dictDataRemark":"{\"national_number\":\"299\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"格陵兰"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"GR_30","dictKeyName":"希腊","dictDataRemark":"{\"national_number\":\"30\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"希腊"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"HR_385","dictKeyName":"克罗地亚","dictDataRemark":"{\"national_number\":\"385\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"克罗地亚"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"HU_36","dictKeyName":"匈牙利","dictDataRemark":"{\"national_number\":\"36\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"匈牙利"},{"appSource":"WOcam","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"IE_353","dictKeyName":"爱尔兰","dictDataRemark":"{\"national_number\":\"353\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"爱尔兰"}],"hostListVoList":[{"dataCenterCode":"AL","host":"http://47.107.113.31:18090/prod-api","wopetHost":null}]}}
INFO    2025-04-28 13:53:09,877d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:61 登录初始化
INFO    2025-04-28 13:53:11,131d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:85 验证码: 13
INFO    2025-04-28 13:53:11,131d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:86 uuid: 049939839ce74e35895766a77896aae8
INFO    2025-04-28 13:53:11,373d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:107 缓存中的token:Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJsb2dpblR5cGUiOiJsb2dpbiIsImxvZ2luSWQiOiJzeXNfdXNlcjoxNjU5MzkxNjY2MjU0NzA0NjQyIiwicm5TdHIiOiJYd3dIWndvMkV3OWJXa09adnhFUUhuTmx0Nzk2Zkd6WiIsInVzZXJJZCI6MTY1OTM5MTY2NjI1NDcwNDY0Mn0.9oVD0NkkH9Gg8sHuI0M_lb4Vi57Sehs3EhpYXkFX9Cw
INFO    2025-04-28 13:53:11,373d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:29 data: {'url': 'http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-28 13:53:11,388d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:171 _dependent_type: True
INFO    2025-04-28 13:53:11,388d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:172 _dependence_case_datas: [DependentCaseData(case_id='code_01', dependent_data=[DependentData(dependent_type='response', jsonpath='$.data.uuid', set_cache='code_01_uuid', replace_key=None), DependentData(dependent_type='response', jsonpath='$.data.img', set_cache='code_01_code', replace_key=None)])]
INFO    2025-04-28 13:53:11,388d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:180 ********开始获取依赖数据: code_01********
INFO    2025-04-28 13:53:11,390d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:190 ********获取依赖数据成功: code_01********
INFO    2025-04-28 13:53:11,390d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:193 依赖数据: {'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-28 13:53:11,390d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:171 _dependent_type: False
INFO    2025-04-28 13:53:11,390d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:172 _dependence_case_datas: None
INFO    2025-04-28 13:53:11,390d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:429 ---------------处理多业务逻辑结束---------------
INFO    2025-04-28 13:53:11,391d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:430 ---------------开始请求---------------
INFO    2025-04-28 13:53:11,426d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:436 ---------------请求结束----------------
INFO    2025-04-28 13:53:11,431d:\PytestAutoApi\logs\info-2025-04-28.log:log_decorator.py:32 
======================================================
用例标题: 获取验证码和uuid
请求路径: http://47.107.113.31:18090/prod-api/code
请求方式: GET
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}
请求内容: None
接口响应内容: {"code":200,"msg":"操作成功","data":{"img":"iVBORw0KGgoAAAANSUhEUgAAAKAAAAA8CAYAAADha7EVAAAGNElEQVR42u3d229URRwH8P4LXoiXGGPQBx8IPqjhkqAxxhBDGggSSYxFbSBqlIARoUAj9JLWKiXSAlqMVFtgqaBQ6IWWklqwhXbLlm1ZpBYoXapCWqB0S0tNyJjfCbvZPWfmdObcL7+HbwK758yW8mGmM/ObQ9rk5CTBYOxKGn4TMAgQgwAxGASIQYAYDAL0YKaXntEVBIjRBc8p7SBABKi7B0WALsvcF7fhECyQ4MtbEkGAHgHohtDQmQ2RCXBG7QZT40eA5/86RSoPZ5O8Helk+cZnSMbax6Rkbnhaeu2n37Kka+zCp+f95JwoWqYIArQRXteFJrJuyzzyzucPcwWu7QjXOAafyHUsbKzXEaCJGbs7Snbu+5gbnjw79n4oteEUgFNdq9bTsd5HgCblzugtsrn0Tc344oE2oC0n4FO7fip8rOsQoEkp+H4xFdS7X0wj+45uJv3XehLXXomGpdfgPdo9+TsXOhogLz7a9abOgq/HbpF5jfkKfLnhQ54G+EtdARUSTDwifa3M++A9mJDQ7g3U5CJA0azu3KPAt6ytzNPLMNCbsXqyttDU//DgGtZw3Hf1rK34WPc5EmBttEuB77WmQqlX9DJAWE6h4YHXedvI2b6A2ga87jSAovjk96WZNvQeTx16Z9Zlk+CNS55eiO69EmT2Xp09x/j/grvrmO2oDeEI8EFWBSsVvd/uvhbP74SU7V9JRfN+1pPk3r0J7nbg2g/WP0VtC5Z1EKBKDg90KvB91F7u+a04QMOaQGwtzxBuD+4xArOvAP4du0nmNual4INZ8I3YbUfted5/fEkiWtt4PjQtJeE/m5nD5oH6rwybSUPgsxAgJdDTyXu/5n8ijsOn9ntefPLXXtn7KBPM6a5q4c+Ae1jtHTpejADlOdjfrsCXY/F6nxUAafgg237OZIKBvWDRr1OtR4XPwmUY2dA7uyE3Bd8bJ74mt8djjsanBSELIGv5BRIbGxH+WkfuDKtuz+FCdFJWnPlR0fud+vei43s/UYAsfBDY5WCBGZ+4K/y1wj2s9uCzEOCDBC63KfBt7DrgyIJLMwG+t+4JJhitXy+rPZgJ6/k+vNQzbGk0FSPwJDo6RGY15KTgg1mw02a9VgBUq2gxGiAUsboRoFA5Fk8yT/+g6P0qL/3h2JJzrwCE3tZtAIULUrUMvYtPllgCacZbbYZH7yTE6UNw9pFYIlYD1FSSLzrrhbRe7/UtwBXZ0y2bhMBnef5QEisVzwbIoqJCBb704gLpveR4ESALYfo3jzDBaKloVluGMboqxopjmaVLX5CiCWAyqqPRELXC+fzNqOp9XgJI24qzciG6pGK56458agaYjGdobIRa4bwyWEFE2vHCXrA8Nc3bDd2KUytMrW761nX4aL+eEqAcDWyt0Xq/c0P93MO3Vw919/S2uK4YwfEAk9F0Dw9Q8fGW2HsZX7wci7UbYmQ5FtQJ0sqxxpce4Y7Vs2BdAON4Xi/LowJsGAxz/ezoh0db7KpaJYRGDTNrWee7wCdUdE5eB9QNkHa+AzInsEkx8/UbOt6S/FCk0ZBSrIuX2zWhczXABc3FVIBbI/X4UB/O88AiZ3s3lcynV8F8OkcXPFcCbBzsZh4uh58LEV1q4MA561gmz8Gklo79zN6vN6PUsj+HEdANWYahVTnH6/0QHD0w62XtYMAwrTaTZh1Ggicn6B16RfA5AiAUlMJxShrArFCV66F89tz9lBjZdmHZEmYhQVVtPrk6GElMOABl+a9ruR/NYRZEq4BzA6y/do45/FYPnHU9PN7XtT6ciHXAXCTQBmsrT768oged1fC4AOYyFp4hdh0yNwKfEdfwPp4NHrGmFR8suYg8nk1kLdBOdNwAaaX28YxNjHsSn9EIIfCwyTVFs7jhrS9+VdP+sRujClBe7WzX49WSc+y/34VjN8DkAoPdB9dIwypMNuBnvvgjeot2vU32VH8prfP5acLmmoeUyzFZca8ZCDE+Bih6vxsBLpzZgQCdOARrwaQV4IXWRVLswucmhL75n5IQIAL0xSw4GZ7VCBEgAkSACNDehWi7AMrRuQWhL/+3TDO34hAgArS1GAEBIkBbgwARIAJEgAgQASJAQzN79UMpQYDG5H9JirhCiBei9wAAAABJRU5ErkJggg==","captchaEnabled":true,"uuid":"8ea5456bf5594535ada7e6c29aa287fc"},"paramMsg":null,"errCode":null}
接口响应时长: 34.28 ms
Http状态码: 200
=====================================================
INFO    2025-04-28 13:53:11,433d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:195 依赖响应数据: url='http://47.107.113.31:18090/prod-api/code' is_run=None detail='获取验证码和uuid' response_data='{"code":200,"msg":"操作成功","data":{"img":"iVBORw0KGgoAAAANSUhEUgAAAKAAAAA8CAYAAADha7EVAAAGNElEQVR42u3d229URRwH8P4LXoiXGGPQBx8IPqjhkqAxxhBDGggSSYxFbSBqlIARoUAj9JLWKiXSAlqMVFtgqaBQ6IWWklqwhXbLlm1ZpBYoXapCWqB0S0tNyJjfCbvZPWfmdObcL7+HbwK758yW8mGmM/ObQ9rk5CTBYOxKGn4TMAgQgwAxGASIQYAYDAL0YKaXntEVBIjRBc8p7SBABKi7B0WALsvcF7fhECyQ4MtbEkGAHgHohtDQmQ2RCXBG7QZT40eA5/86RSoPZ5O8Helk+cZnSMbax6Rkbnhaeu2n37Kka+zCp+f95JwoWqYIArQRXteFJrJuyzzyzucPcwWu7QjXOAafyHUsbKzXEaCJGbs7Snbu+5gbnjw79n4oteEUgFNdq9bTsd5HgCblzugtsrn0Tc344oE2oC0n4FO7fip8rOsQoEkp+H4xFdS7X0wj+45uJv3XehLXXomGpdfgPdo9+TsXOhogLz7a9abOgq/HbpF5jfkKfLnhQ54G+EtdARUSTDwifa3M++A9mJDQ7g3U5CJA0azu3KPAt6ytzNPLMNCbsXqyttDU//DgGtZw3Hf1rK34WPc5EmBttEuB77WmQqlX9DJAWE6h4YHXedvI2b6A2ga87jSAovjk96WZNvQeTx16Z9Zlk+CNS55eiO69EmT2Xp09x/j/grvrmO2oDeEI8EFWBSsVvd/uvhbP74SU7V9JRfN+1pPk3r0J7nbg2g/WP0VtC5Z1EKBKDg90KvB91F7u+a04QMOaQGwtzxBuD+4xArOvAP4du0nmNual4INZ8I3YbUfted5/fEkiWtt4PjQtJeE/m5nD5oH6rwybSUPgsxAgJdDTyXu/5n8ijsOn9ntefPLXXtn7KBPM6a5q4c+Ae1jtHTpejADlOdjfrsCXY/F6nxUAafgg237OZIKBvWDRr1OtR4XPwmUY2dA7uyE3Bd8bJ74mt8djjsanBSELIGv5BRIbGxH+WkfuDKtuz+FCdFJWnPlR0fud+vei43s/UYAsfBDY5WCBGZ+4K/y1wj2s9uCzEOCDBC63KfBt7DrgyIJLMwG+t+4JJhitXy+rPZgJ6/k+vNQzbGk0FSPwJDo6RGY15KTgg1mw02a9VgBUq2gxGiAUsboRoFA5Fk8yT/+g6P0qL/3h2JJzrwCE3tZtAIULUrUMvYtPllgCacZbbYZH7yTE6UNw9pFYIlYD1FSSLzrrhbRe7/UtwBXZ0y2bhMBnef5QEisVzwbIoqJCBb704gLpveR4ESALYfo3jzDBaKloVluGMboqxopjmaVLX5CiCWAyqqPRELXC+fzNqOp9XgJI24qzciG6pGK56458agaYjGdobIRa4bwyWEFE2vHCXrA8Nc3bDd2KUytMrW761nX4aL+eEqAcDWyt0Xq/c0P93MO3Vw919/S2uK4YwfEAk9F0Dw9Q8fGW2HsZX7wci7UbYmQ5FtQJ0sqxxpce4Y7Vs2BdAON4Xi/LowJsGAxz/ezoh0db7KpaJYRGDTNrWee7wCdUdE5eB9QNkHa+AzInsEkx8/UbOt6S/FCk0ZBSrIuX2zWhczXABc3FVIBbI/X4UB/O88AiZ3s3lcynV8F8OkcXPFcCbBzsZh4uh58LEV1q4MA561gmz8Gklo79zN6vN6PUsj+HEdANWYahVTnH6/0QHD0w62XtYMAwrTaTZh1Ggicn6B16RfA5AiAUlMJxShrArFCV66F89tz9lBjZdmHZEmYhQVVtPrk6GElMOABl+a9ruR/NYRZEq4BzA6y/do45/FYPnHU9PN7XtT6ciHXAXCTQBmsrT768oged1fC4AOYyFp4hdh0yNwKfEdfwPp4NHrGmFR8suYg8nk1kLdBOdNwAaaX28YxNjHsSn9EIIfCwyTVFs7jhrS9+VdP+sRujClBe7WzX49WSc+y/34VjN8DkAoPdB9dIwypMNuBnvvgjeot2vU32VH8prfP5acLmmoeUyzFZca8ZCDE+Bih6vxsBLpzZgQCdOARrwaQV4IXWRVLswucmhL75n5IQIAL0xSw4GZ7VCBEgAkSACNDehWi7AMrRuQWhL/+3TDO34hAgArS1GAEBIkBbgwARIAJEgAgQASJAQzN79UMpQYDG5H9JirhCiBei9wAAAABJRU5ErkJggg==","captchaEnabled":true,"uuid":"8ea5456bf5594535ada7e6c29aa287fc"},"paramMsg":null,"errCode":null}' request_body=None method='GET' sql_data={'sql': None} yaml_data=TestCase(url='http://47.107.113.31:18090/prod-api/code', method='GET', detail='获取验证码和uuid', assert_data={'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, headers={'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, requestType='NONE', is_run=None, data=None, dependence_case=False, dependence_case_data=None, sql=None, setup_sql=None, status_code=None, teardown_sql=None, teardown=None, current_request_set_cache=None, sleep=None) headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'} cookie={} assert_data={'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}} res_time=34.28 status_code=200 teardown=None teardown_sql=None body=None
INFO    2025-04-28 13:53:11,437d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:429 ---------------处理多业务逻辑结束---------------
INFO    2025-04-28 13:53:11,437d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:430 ---------------开始请求---------------
INFO    2025-04-28 13:53:11,473d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:436 ---------------请求结束----------------
INFO    2025-04-28 13:53:11,473d:\PytestAutoApi\logs\info-2025-04-28.log:log_decorator.py:32 
======================================================
用例标题: 正常登录
请求路径: http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login
请求方式: POST
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam', 'Content-Length': '122', 'Content-Type': 'application/json'}
请求内容: {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}
接口响应内容: {"code":500,"msg":" 10012","data":null,"paramMsg":null,"errCode":null}
接口响应时长: 34.15 ms
Http状态码: 200
=====================================================
ERROR   2025-04-28 13:53:11,665d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:180 用例总数: 1
ERROR   2025-04-28 13:53:11,665d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:181 异常用例数: 0
INFO    2025-04-28 13:53:11,668d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:184 用例执行时长: 2.11 s
INFO    2025-04-28 13:53:11,668d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:188 用例成功率: 0.00 %
INFO    2025-04-28 13:53:18,783d:\PytestAutoApi\logs\info-2025-04-28.log:main.py:36 Allure report generated, total cases: TestMetrics(passed=0, failed=1, skipped=0, total=1, broken=0, pass_rate=0.0, time=0.1)
INFO    2025-04-28 13:56:54,873d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 13:56:54,873d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 13:56:54,873d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 13:56:54,873d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 13:56:54,873d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 13:56:54,873d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 13:56:54,873d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 13:56:54,873d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 13:56:54,873d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 13:56:54,873d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'DELETE', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 13:56:54,873d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 13:56:54,885d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 13:56:54,890d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 13:56:54,890d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 13:56:54,891d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 13:56:54,891d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 13:56:54,892d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 13:56:54,897d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 13:56:54,897d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 13:56:54,898d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 13:56:54,898d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 13:56:54,900d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 13:56:54,900d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/list', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 13:56:54,900d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 13:56:54,900d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 13:56:54,907d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 13:56:54,907d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 13:56:54,907d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 13:56:54,907d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 13:56:54,911d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 13:56:54,911d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 13:56:54,911d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 13:56:54,912d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 13:56:54,914d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 13:56:54,914d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-28 13:56:54,915d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 13:56:54,915d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 13:56:54,915d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 13:56:54,918d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 13:56:54,918d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 13:56:54,918d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 13:56:54,918d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 13:56:54,923d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 13:56:54,924d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 13:56:54,924d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 13:56:54,924d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_query_bird_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 13:56:54,925d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_query_bird_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 13:56:54,928d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 13:56:54,928d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-28 13:56:54,928d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/app/info/appUser/pet/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 13:56:54,928d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 13:56:54,928d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 13:56:54,929d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 13:56:54,929d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 13:56:54,929d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 13:56:54,929d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 13:56:55,265d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:19 初始化conftest.py
INFO    2025-04-28 13:56:55,292d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:12 TestData: [{'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-28 13:56:55,357d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-28 13:56:55,364d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:132 指定运行顺序: []
INFO    2025-04-28 13:56:55,364d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:141 运行顺序: [<Function test_login[正常登录]>]
INFO    2025-04-28 13:56:55,425d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:37 app接口登录初始化
INFO    2025-04-28 13:56:55,463d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:49 AL_HOST: http://47.107.113.31:18090/prod-api
INFO    2025-04-28 13:56:55,463d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:50 DEV_HOST: http://192.168.100.3:8090/prod-api
INFO    2025-04-28 13:56:55,464d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:59 登录初始化
INFO    2025-04-28 13:56:55,627d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:83 验证码: 2
INFO    2025-04-28 13:56:55,628d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:84 uuid: 1f0154617ace4a23a989e4382b64d799
INFO    2025-04-28 13:56:55,857d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:105 缓存中的token:Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJsb2dpblR5cGUiOiJsb2dpbiIsImxvZ2luSWQiOiJzeXNfdXNlcjoxNjU5MzkxNjY2MjU0NzA0NjQyIiwicm5TdHIiOiJrYnFsbjJyWmVxbDJJalVoUjFhUXU2RUxvYUNMUkJuZiIsInVzZXJJZCI6MTY1OTM5MTY2NjI1NDcwNDY0Mn0.sI2HLxiQfwlqeTi4FHG0COn9LOMBC_DA9YJyDyl_OaY
INFO    2025-04-28 13:56:55,860d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:29 data: {'url': 'http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-28 13:56:55,862d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:171 _dependent_type: True
INFO    2025-04-28 13:56:55,863d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:172 _dependence_case_datas: [DependentCaseData(case_id='code_01', dependent_data=[DependentData(dependent_type='response', jsonpath='$.data.uuid', set_cache='code_01_uuid', replace_key=None), DependentData(dependent_type='response', jsonpath='$.data.img', set_cache='code_01_code', replace_key=None)])]
INFO    2025-04-28 13:56:55,863d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:180 ********开始获取依赖数据: code_01********
INFO    2025-04-28 13:56:55,864d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:190 ********获取依赖数据成功: code_01********
INFO    2025-04-28 13:56:55,865d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:193 依赖数据: {'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-28 13:56:55,865d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:171 _dependent_type: False
INFO    2025-04-28 13:56:55,865d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:172 _dependence_case_datas: None
INFO    2025-04-28 13:56:55,866d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:429 ---------------处理多业务逻辑结束---------------
INFO    2025-04-28 13:56:55,866d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:430 ---------------开始请求---------------
INFO    2025-04-28 13:56:55,899d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:436 ---------------请求结束----------------
INFO    2025-04-28 13:56:55,902d:\PytestAutoApi\logs\info-2025-04-28.log:log_decorator.py:32 
======================================================
用例标题: 获取验证码和uuid
请求路径: http://47.107.113.31:18090/prod-api/code
请求方式: GET
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}
请求内容: None
接口响应内容: {"code":200,"msg":"操作成功","data":{"img":"iVBORw0KGgoAAAANSUhEUgAAAKAAAAA8CAYAAADha7EVAAAGWklEQVR42u3cT2gdRRwH8BxEEMSDh9pKRYoHD6KIIIIXQUQQC8VDUS+CCkolkSBCi38CRSymRdEQ/9R/LYY0TRuKKbTQmkpMNCaNTY2xRkNiMdTWJk1s3v4NHsadxY37Zmfm7eybmZ3d9zt8SXlvd1+b9+nMzsxvtml1dRVBIHmlCX4JEAAIAYAQCACEAEAIBABCAKCpudjWlSpl+6KGBjYwAwA1olN5jsnoZBwHADPCM+U6uuHpPhcAEmiKcE0V+Ey6jkh2bW+WB7D1uqeVJi8o+hH6yPPmke2MI8seRCuVviAHgxwI0oMq1iFkWSeD90fQ5MTDwfGucZhF8IkiNA6gDiA6PsPzLoWoKlZvAK1bIAeD804j368UBiGJTgShUQB1tk6qPsvzLgQt3UlBdMlUrMPBtc4DQAAolnrhkXHdc8YjBIBGA+wLu2LXmwu61aXwnnDt3tBfCID9jBYXO7gIPe+PxgMoI0t/XkGv3vJiAl9vy/61Y55/6ngpAVr2QDj4+B8cO8Nfb0S2/Q27O64cCY7zAKBoPn+yM4Gv46FdVcfEAZZhEGLZp8KWTRyIH9z3HeV0xb8BQJGM944k8LVtag1bRRKfToQmzgVGQBx3mgnQtgcBoFDXu7GlCt9L1z+LZoanqa0fCVA2lDuGv6hK9PoDd/8axhyEVzn3gn1GzwVKnwesJ5893pFo/QbeOZY4jgdQ5hIaDWAcngkIo26YDbCnMJPRuQIc7RpO4Ptoy9vUY2sBlFWMUASAERaZAIuwJiwV4JX5RfTKhuYqfHgUvHxpqS6A9ZZjkQBp4ExA6PvLNUbC5cInHSBu6cjWb+r4BPP4LABldMGmAnTcXziDkCGohuFlZN9gcr6veT/3HABITOFYx9jTMN4c1APyut4dN71QhW/n7S+jylKlEAAvvnFt+Br+SYuOL8J1Zznrwv1o6NTNUBHNygeP7km0fudOTNY8Ly+AcXhxYKxWUDVE37f+K9NiLMX5F2BPCLP53zuQwNf93Kepzs0TIA1UrW5YFUK8esLC57g/Sv+8B3evaI0ygAu//4W2r9tWhQ+PglmjXlMAsiCluQ+UjRDX/jHxOaNKfh+lAdj5SHui9Rt8/wTz+M1bWquC4cV/4ujsgrMORGQhdNxJ9qjXGVf2H7IUAGldb/u9r3PxpWkBVUA0EaDjnmXgOxCuCavsEQoPkDbqxZkemGK2eqJdMO88EpTqyAaI6wNZ6724oho2pjPyz/3tYT5e35LAh0fCaQGJ3APSrlFUgL5vMwcclvWVtH0gpQEYgYuCXzvd8x21wnn+np1rx4h0oWkGICTmPAFmxYc3KeH5PFqX67pTSr/kres/DFMogBGmeP6+vEytcP5k63sJtDIBkq1hXgCz4PN9J+hyxxgTzEeR519W/iUXDiALEF5ao7V+c2MzCSQiCEUBFmUi2l+9GhYR0KdYvq+rzF4EH+3PxgJkwTn/wywVX7zEngRiCsI093S85bhsf9cVJj7X1bfuTANo7CiYB2b3fW1UgBNHxrgwTEAoexomTbfLKixQPcVSWIA8KLT9HdEejzQoZCOsF6Dqahg7fASHvpWN0gN8864dVID9rx1KjSJPhDoB4o3krDk+3DLmhS/+mnEAeTjOfjnO3FyO7wvTYmgEgL6/EJbO07ven3Jt/UwdiNQESKtyjur9RDA0AkBeQWnntk3orSduVJLSAsQFpXg7JQ1g1zN7CwtQ1aYk2c+FISOKsBAAeTDO9I0yu9+x7m+FMchE2IgAS9kF81DgZ7iwAMY3mRcRoIqN6QBQMkBaqX0U13IKD9D0R7PpAHjNmXVh6vl398zcljlcgGS1M+vxagCwmADj8EQQkoiUtYCyMcgCqKpyumzhAaSBS4OwXnBKAOoeCQPA/ABKbwFlwdC5EtJoAA/v608kzy5Y6j2grpYJWr/s8ETf0z0IIXPrY3eG0doC1gKi816zzPBEjtU9DUPCSwNRC0DAJ4ZP1nl5AEzzmnA1TBYscTAAUC0+1vk6AfKg8d5rUjVQiNDUe02VG9ajvHvDbKYAQMkAZSPE18oKSCe8vM6XiY92HVMA8t5vUjVgIK8hAkp3d2tCC6gCoK5NSWlGvEIAs2yvTAuYfD4MLY04aQwAU2xOF9nADtGPr1Y3rAJg2vk+1rGZHs0B4ACgLID/AjlGOA/sj3rcAAAAAElFTkSuQmCC","captchaEnabled":true,"uuid":"f03cf665595342a6ad9dc7c870548aed"},"paramMsg":null,"errCode":null}
接口响应时长: 31.28 ms
Http状态码: 200
=====================================================
INFO    2025-04-28 13:56:55,903d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:195 依赖响应数据: url='http://47.107.113.31:18090/prod-api/code' is_run=None detail='获取验证码和uuid' response_data='{"code":200,"msg":"操作成功","data":{"img":"iVBORw0KGgoAAAANSUhEUgAAAKAAAAA8CAYAAADha7EVAAAGWklEQVR42u3cT2gdRRwH8BxEEMSDh9pKRYoHD6KIIIIXQUQQC8VDUS+CCkolkSBCi38CRSymRdEQ/9R/LYY0TRuKKbTQmkpMNCaNTY2xRkNiMdTWJk1s3v4NHsadxY37Zmfm7eybmZ3d9zt8SXlvd1+b9+nMzsxvtml1dRVBIHmlCX4JEAAIAYAQCACEAEAIBABCAKCpudjWlSpl+6KGBjYwAwA1olN5jsnoZBwHADPCM+U6uuHpPhcAEmiKcE0V+Ey6jkh2bW+WB7D1uqeVJi8o+hH6yPPmke2MI8seRCuVviAHgxwI0oMq1iFkWSeD90fQ5MTDwfGucZhF8IkiNA6gDiA6PsPzLoWoKlZvAK1bIAeD804j368UBiGJTgShUQB1tk6qPsvzLgQt3UlBdMlUrMPBtc4DQAAolnrhkXHdc8YjBIBGA+wLu2LXmwu61aXwnnDt3tBfCID9jBYXO7gIPe+PxgMoI0t/XkGv3vJiAl9vy/61Y55/6ngpAVr2QDj4+B8cO8Nfb0S2/Q27O64cCY7zAKBoPn+yM4Gv46FdVcfEAZZhEGLZp8KWTRyIH9z3HeV0xb8BQJGM944k8LVtag1bRRKfToQmzgVGQBx3mgnQtgcBoFDXu7GlCt9L1z+LZoanqa0fCVA2lDuGv6hK9PoDd/8axhyEVzn3gn1GzwVKnwesJ5893pFo/QbeOZY4jgdQ5hIaDWAcngkIo26YDbCnMJPRuQIc7RpO4Ptoy9vUY2sBlFWMUASAERaZAIuwJiwV4JX5RfTKhuYqfHgUvHxpqS6A9ZZjkQBp4ExA6PvLNUbC5cInHSBu6cjWb+r4BPP4LABldMGmAnTcXziDkCGohuFlZN9gcr6veT/3HABITOFYx9jTMN4c1APyut4dN71QhW/n7S+jylKlEAAvvnFt+Br+SYuOL8J1Zznrwv1o6NTNUBHNygeP7km0fudOTNY8Ly+AcXhxYKxWUDVE37f+K9NiLMX5F2BPCLP53zuQwNf93Kepzs0TIA1UrW5YFUK8esLC57g/Sv+8B3evaI0ygAu//4W2r9tWhQ+PglmjXlMAsiCluQ+UjRDX/jHxOaNKfh+lAdj5SHui9Rt8/wTz+M1bWquC4cV/4ujsgrMORGQhdNxJ9qjXGVf2H7IUAGldb/u9r3PxpWkBVUA0EaDjnmXgOxCuCavsEQoPkDbqxZkemGK2eqJdMO88EpTqyAaI6wNZ6724oho2pjPyz/3tYT5e35LAh0fCaQGJ3APSrlFUgL5vMwcclvWVtH0gpQEYgYuCXzvd8x21wnn+np1rx4h0oWkGICTmPAFmxYc3KeH5PFqX67pTSr/kres/DFMogBGmeP6+vEytcP5k63sJtDIBkq1hXgCz4PN9J+hyxxgTzEeR519W/iUXDiALEF5ao7V+c2MzCSQiCEUBFmUi2l+9GhYR0KdYvq+rzF4EH+3PxgJkwTn/wywVX7zEngRiCsI093S85bhsf9cVJj7X1bfuTANo7CiYB2b3fW1UgBNHxrgwTEAoexomTbfLKixQPcVSWIA8KLT9HdEejzQoZCOsF6Dqahg7fASHvpWN0gN8864dVID9rx1KjSJPhDoB4o3krDk+3DLmhS/+mnEAeTjOfjnO3FyO7wvTYmgEgL6/EJbO07ven3Jt/UwdiNQESKtyjur9RDA0AkBeQWnntk3orSduVJLSAsQFpXg7JQ1g1zN7CwtQ1aYk2c+FISOKsBAAeTDO9I0yu9+x7m+FMchE2IgAS9kF81DgZ7iwAMY3mRcRoIqN6QBQMkBaqX0U13IKD9D0R7PpAHjNmXVh6vl398zcljlcgGS1M+vxagCwmADj8EQQkoiUtYCyMcgCqKpyumzhAaSBS4OwXnBKAOoeCQPA/ABKbwFlwdC5EtJoAA/v608kzy5Y6j2grpYJWr/s8ETf0z0IIXPrY3eG0doC1gKi816zzPBEjtU9DUPCSwNRC0DAJ4ZP1nl5AEzzmnA1TBYscTAAUC0+1vk6AfKg8d5rUjVQiNDUe02VG9ajvHvDbKYAQMkAZSPE18oKSCe8vM6XiY92HVMA8t5vUjVgIK8hAkp3d2tCC6gCoK5NSWlGvEIAs2yvTAuYfD4MLY04aQwAU2xOF9nADtGPr1Y3rAJg2vk+1rGZHs0B4ACgLID/AjlGOA/sj3rcAAAAAElFTkSuQmCC","captchaEnabled":true,"uuid":"f03cf665595342a6ad9dc7c870548aed"},"paramMsg":null,"errCode":null}' request_body=None method='GET' sql_data={'sql': None} yaml_data=TestCase(url='http://47.107.113.31:18090/prod-api/code', method='GET', detail='获取验证码和uuid', assert_data={'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, headers={'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, requestType='NONE', is_run=None, data=None, dependence_case=False, dependence_case_data=None, sql=None, setup_sql=None, status_code=None, teardown_sql=None, teardown=None, current_request_set_cache=None, sleep=None) headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'} cookie={} assert_data={'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}} res_time=31.28 status_code=200 teardown=None teardown_sql=None body=None
INFO    2025-04-28 13:56:55,905d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:429 ---------------处理多业务逻辑结束---------------
INFO    2025-04-28 13:56:55,905d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:430 ---------------开始请求---------------
INFO    2025-04-28 13:56:55,937d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:436 ---------------请求结束----------------
INFO    2025-04-28 13:56:55,939d:\PytestAutoApi\logs\info-2025-04-28.log:log_decorator.py:32 
======================================================
用例标题: 正常登录
请求路径: http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login
请求方式: POST
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam', 'Content-Length': '122', 'Content-Type': 'application/json'}
请求内容: {'customId': '${customId}', 'email': '${email}', 'password': '', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}
接口响应内容: {"code":500,"msg":" 10012","data":null,"paramMsg":null,"errCode":null}
接口响应时长: 30.26 ms
Http状态码: 200
=====================================================
ERROR   2025-04-28 13:56:56,061d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:178 用例总数: 1
ERROR   2025-04-28 13:56:56,061d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:179 异常用例数: 0
INFO    2025-04-28 13:56:56,062d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:182 用例执行时长: 0.78 s
INFO    2025-04-28 13:56:56,062d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:186 用例成功率: 0.00 %
INFO    2025-04-28 13:56:58,484d:\PytestAutoApi\logs\info-2025-04-28.log:main.py:36 Allure report generated, total cases: TestMetrics(passed=0, failed=1, skipped=0, total=1, broken=0, pass_rate=0.0, time=0.08)
INFO    2025-04-28 14:16:17,886d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 14:16:17,886d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:16:17,887d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:16:17,887d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:16:17,890d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 14:16:17,890d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:16:17,891d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 14:16:17,891d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 14:16:17,893d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 14:16:17,894d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'DELETE', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:16:17,894d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:16:17,895d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:16:17,898d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 14:16:17,899d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 14:16:17,899d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:16:17,900d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:16:17,900d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:16:17,906d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 14:16:17,906d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:16:17,907d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 14:16:17,908d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 14:16:17,912d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 14:16:17,912d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/list', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:16:17,913d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 14:16:17,913d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 14:16:17,916d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 14:16:17,917d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:16:17,917d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 14:16:17,918d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 14:16:17,921d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 14:16:17,922d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:16:17,922d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:16:17,922d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:16:17,925d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 14:16:17,926d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-28 14:16:17,926d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:16:17,926d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:16:17,927d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:16:17,929d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 14:16:17,930d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:16:17,930d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 14:16:17,931d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 14:16:17,935d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 14:16:17,936d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 14:16:17,936d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:16:17,937d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_query_bird_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:16:17,937d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_query_bird_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:16:17,940d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'json', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 14:16:17,941d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/app/info/appUser/pet/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:16:17,941d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:16:17,941d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:16:17,945d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 14:16:17,946d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:16:17,946d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 14:16:17,946d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 14:16:18,275d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:20 初始化conftest.py
INFO    2025-04-28 14:16:18,298d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:12 TestData: [{'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-28 14:16:18,367d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-28 14:16:18,369d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:136 指定运行顺序: []
INFO    2025-04-28 14:16:18,369d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:145 运行顺序: [<Function test_login[正常登录]>]
INFO    2025-04-28 14:16:18,441d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:38 app接口登录初始化
INFO    2025-04-28 14:16:18,528d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:53 AL_HOST: http://47.107.113.31:18090/prod-api
INFO    2025-04-28 14:16:18,528d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:54 DEV_HOST: http://192.168.100.3:8090/prod-api
INFO    2025-04-28 14:16:18,528d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:63 登录初始化
INFO    2025-04-28 14:16:18,674d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:87 验证码: 0
INFO    2025-04-28 14:16:18,674d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:88 uuid: c483060b4f6543309ef4f2c55cdd9771
INFO    2025-04-28 14:16:18,906d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:109 缓存中的token:Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJsb2dpblR5cGUiOiJsb2dpbiIsImxvZ2luSWQiOiJzeXNfdXNlcjoxNjU5MzkxNjY2MjU0NzA0NjQyIiwicm5TdHIiOiJyZ0dpOGZVNjkxejh4S0tHemplSDFqcEt3SHFOYTV4TyIsInVzZXJJZCI6MTY1OTM5MTY2NjI1NDcwNDY0Mn0.qOGp5OFJPFh-otLwXQOnhIntPZaVVaG01oMdXkd1gTA
INFO    2025-04-28 14:16:18,907d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:29 data: {'url': 'http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-28 14:16:18,908d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:171 _dependent_type: False
INFO    2025-04-28 14:16:18,908d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:172 _dependence_case_datas: None
INFO    2025-04-28 14:16:18,908d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:429 ---------------处理多业务逻辑结束---------------
INFO    2025-04-28 14:16:18,909d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:430 ---------------开始请求---------------
INFO    2025-04-28 14:16:19,038d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:436 ---------------请求结束----------------
INFO    2025-04-28 14:16:19,044d:\PytestAutoApi\logs\info-2025-04-28.log:log_decorator.py:32 
======================================================
用例标题: 正常登录
请求路径: http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login
请求方式: POST
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Content-Length': '299', 'Content-Type': 'application/json'}
请求内容: {'customId': 'uqWpSNdirt7wYZUOLwkI/I6O4A3fAH1bTThuLXlIrHxi3D6yvTXKBOIO0aNgkH8rvczDclVfAhp6cHJoqLfH1xmxQFcQxVEN95CQuFYzkQodivGZLIeeqIZdV12gO9hKdPn6o3ZO3vTJVRnMHUKWqC0aRTtjz6xvPTQ2E+9QdM0=', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}
接口响应内容: {"code":200,"msg":"操作成功","data":{"countryCode":null,"token":null,"userInfo":null,"emqConnInfo":null,"wopetLoginType":3,"wopetLoginVo":{"wopetLoginType":3,"userUid":null,"firstRegRegion":null}},"paramMsg":null,"errCode":null}
接口响应时长: 127.78 ms
Http状态码: 200
=====================================================
ERROR   2025-04-28 14:16:19,170d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:182 用例总数: 1
ERROR   2025-04-28 14:16:19,170d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:183 异常用例数: 0
INFO    2025-04-28 14:16:19,171d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:186 用例执行时长: 0.88 s
INFO    2025-04-28 14:16:19,171d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:190 用例成功率: 0.00 %
INFO    2025-04-28 14:16:21,720d:\PytestAutoApi\logs\info-2025-04-28.log:main.py:36 Allure report generated, total cases: TestMetrics(passed=0, failed=1, skipped=0, total=1, broken=0, pass_rate=0.0, time=0.14)
INFO    2025-04-28 14:37:49,050d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 14:37:49,057d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:37:49,059d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:37:49,059d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:37:49,067d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 14:37:49,068d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:37:49,069d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 14:37:49,069d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 14:37:49,074d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 14:37:49,074d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'DELETE', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:37:49,075d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:37:49,075d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:37:49,083d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 14:37:49,084d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 14:37:49,084d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:37:49,084d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:37:49,084d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:37:49,091d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 14:37:49,091d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:37:49,092d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 14:37:49,092d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 14:37:49,096d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 14:37:49,097d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/list', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:37:49,097d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 14:37:49,098d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 14:37:49,101d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 14:37:49,101d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:37:49,102d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 14:37:49,102d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 14:37:49,116d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 14:37:49,116d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:37:49,117d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:37:49,117d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:37:49,120d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 14:37:49,120d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-28 14:37:49,120d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:37:49,120d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:37:49,120d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:37:49,123d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 14:37:49,124d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:37:49,124d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 14:37:49,124d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 14:37:49,135d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 14:37:49,135d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 14:37:49,136d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:37:49,136d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_query_bird_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:37:49,137d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_query_bird_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:37:49,147d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'json', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 14:37:49,147d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/app/info/appUser/pet/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:37:49,148d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:37:49,148d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:37:49,158d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 14:37:49,159d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:37:49,159d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 14:37:49,159d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 14:37:49,945d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:21 初始化conftest.py
INFO    2025-04-28 14:37:50,016d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:12 TestData: [{'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-28 14:37:50,090d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-28 14:37:50,093d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:147 指定运行顺序: []
INFO    2025-04-28 14:37:50,093d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:156 运行顺序: [<Function test_login[正常登录]>]
INFO    2025-04-28 14:37:50,158d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:39 app接口登录初始化
INFO    2025-04-28 14:37:50,193d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:54 AL_HOST: http://47.107.113.31:18090/prod-api
INFO    2025-04-28 14:37:50,193d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:55 DEV_HOST: http://192.168.100.3:8090/prod-api
ERROR   2025-04-28 14:37:50,350d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:193 用例总数: 1
ERROR   2025-04-28 14:37:50,350d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:194 异常用例数: 1
INFO    2025-04-28 14:37:50,362d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:197 用例执行时长: 0.38 s
INFO    2025-04-28 14:37:50,362d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:201 用例成功率: 0.00 %
INFO    2025-04-28 14:37:54,279d:\PytestAutoApi\logs\info-2025-04-28.log:main.py:36 Allure report generated, total cases: TestMetrics(passed=0, failed=0, skipped=0, total=1, broken=1, pass_rate=0.0, time=0.0)
INFO    2025-04-28 14:39:56,734d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 14:39:56,735d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:39:56,735d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:39:56,736d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:39:56,738d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 14:39:56,739d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:39:56,739d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 14:39:56,739d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 14:39:56,742d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 14:39:56,742d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'DELETE', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:39:56,742d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:39:56,742d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:39:56,745d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 14:39:56,746d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 14:39:56,746d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:39:56,747d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:39:56,747d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:39:56,751d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 14:39:56,752d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:39:56,752d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 14:39:56,753d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 14:39:56,755d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 14:39:56,756d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/list', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:39:56,756d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 14:39:56,756d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 14:39:56,759d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 14:39:56,760d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:39:56,760d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 14:39:56,760d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 14:39:56,763d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 14:39:56,764d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:39:56,764d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:39:56,764d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:39:56,769d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 14:39:56,769d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-28 14:39:56,769d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:39:56,770d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:39:56,770d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:39:56,774d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 14:39:56,774d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:39:56,774d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 14:39:56,774d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 14:39:56,779d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 14:39:56,779d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 14:39:56,780d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:39:56,781d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_query_bird_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:39:56,781d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_query_bird_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:39:56,784d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'json', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 14:39:56,784d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/app/info/appUser/pet/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:39:56,785d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:39:56,785d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:39:56,787d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 14:39:56,788d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:39:56,788d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 14:39:56,789d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 14:39:57,108d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:21 初始化conftest.py
INFO    2025-04-28 14:39:57,127d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:12 TestData: [{'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-28 14:39:57,197d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-28 14:39:57,201d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:147 指定运行顺序: []
INFO    2025-04-28 14:39:57,201d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:156 运行顺序: [<Function test_login[正常登录]>]
INFO    2025-04-28 14:39:57,263d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:39 app接口登录初始化
INFO    2025-04-28 14:39:57,305d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:54 AL_HOST: http://47.107.113.31:18090/prod-api
INFO    2025-04-28 14:39:57,321d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:55 DEV_HOST: http://192.168.100.3:8090/prod-api
INFO    2025-04-28 14:39:57,461d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:63 登录token: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
INFO    2025-04-28 14:39:57,462d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:74 登录初始化
INFO    2025-04-28 14:39:57,624d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:98 验证码: 0
INFO    2025-04-28 14:39:57,624d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:99 uuid: db317ca01e244f9885056a31d71e0d62
INFO    2025-04-28 14:39:57,940d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:120 缓存中的token:Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJsb2dpblR5cGUiOiJsb2dpbiIsImxvZ2luSWQiOiJzeXNfdXNlcjoxNjU5MzkxNjY2MjU0NzA0NjQyIiwicm5TdHIiOiJmenhFZjZaNXRHc0JEWXhROG9aSWhLTzRsQ2prWmc4aCIsInVzZXJJZCI6MTY1OTM5MTY2NjI1NDcwNDY0Mn0.qA2MCJsLF2YHQiUeXysaZzihqe69tyQDnsMAX33IK_E
INFO    2025-04-28 14:39:57,945d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:29 data: {'url': 'http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-28 14:39:57,955d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:171 _dependent_type: False
INFO    2025-04-28 14:39:57,955d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:172 _dependence_case_datas: None
INFO    2025-04-28 14:39:57,956d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:429 ---------------处理多业务逻辑结束---------------
INFO    2025-04-28 14:39:57,956d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:430 ---------------开始请求---------------
INFO    2025-04-28 14:39:58,091d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:436 ---------------请求结束----------------
INFO    2025-04-28 14:39:58,100d:\PytestAutoApi\logs\info-2025-04-28.log:log_decorator.py:32 
======================================================
用例标题: 正常登录
请求路径: http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login
请求方式: POST
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Content-Length': '299', 'Content-Type': 'application/json'}
请求内容: {'customId': 'uqWpSNdirt7wYZUOLwkI/I6O4A3fAH1bTThuLXlIrHxi3D6yvTXKBOIO0aNgkH8rvczDclVfAhp6cHJoqLfH1xmxQFcQxVEN95CQuFYzkQodivGZLIeeqIZdV12gO9hKdPn6o3ZO3vTJVRnMHUKWqC0aRTtjz6xvPTQ2E+9QdM0=', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}
接口响应内容: {"code":200,"msg":"操作成功","data":{"countryCode":null,"token":null,"userInfo":null,"emqConnInfo":null,"wopetLoginType":3,"wopetLoginVo":{"wopetLoginType":3,"userUid":null,"firstRegRegion":null}},"paramMsg":null,"errCode":null}
接口响应时长: 133.18 ms
Http状态码: 200
=====================================================
ERROR   2025-04-28 14:39:58,252d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:193 用例总数: 1
ERROR   2025-04-28 14:39:58,252d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:194 异常用例数: 0
INFO    2025-04-28 14:39:58,253d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:197 用例执行时长: 1.13 s
INFO    2025-04-28 14:39:58,253d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:201 用例成功率: 0.00 %
INFO    2025-04-28 14:40:00,774d:\PytestAutoApi\logs\info-2025-04-28.log:main.py:36 Allure report generated, total cases: TestMetrics(passed=0, failed=1, skipped=0, total=1, broken=0, pass_rate=0.0, time=0.16)
INFO    2025-04-28 14:42:36,071d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 14:42:36,071d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:42:36,072d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:42:36,072d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:42:36,075d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 14:42:36,075d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:42:36,076d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 14:42:36,076d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 14:42:36,079d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 14:42:36,079d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'DELETE', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:42:36,079d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:42:36,079d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:42:36,082d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 14:42:36,082d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 14:42:36,082d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:42:36,083d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:42:36,084d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:42:36,088d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 14:42:36,088d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:42:36,089d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 14:42:36,090d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 14:42:36,092d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 14:42:36,093d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/list', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:42:36,093d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 14:42:36,093d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 14:42:36,096d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 14:42:36,096d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:42:36,097d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 14:42:36,097d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 14:42:36,099d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 14:42:36,099d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:42:36,100d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:42:36,100d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:42:36,103d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 14:42:36,104d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-28 14:42:36,104d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:42:36,104d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:42:36,105d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:42:36,108d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 14:42:36,109d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:42:36,109d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 14:42:36,110d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 14:42:36,113d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 14:42:36,114d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 14:42:36,114d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:42:36,115d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_query_bird_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:42:36,115d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_query_bird_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:42:36,119d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'json', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 14:42:36,119d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/app/info/appUser/pet/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:42:36,119d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:42:36,120d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:42:36,122d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 14:42:36,123d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:42:36,123d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 14:42:36,123d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 14:42:36,472d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:21 初始化conftest.py
INFO    2025-04-28 14:42:36,492d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:12 TestData: [{'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-28 14:42:36,566d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-28 14:42:36,568d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:149 指定运行顺序: []
INFO    2025-04-28 14:42:36,568d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:158 运行顺序: [<Function test_login[正常登录]>]
INFO    2025-04-28 14:42:36,632d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:39 app接口登录初始化
INFO    2025-04-28 14:42:36,672d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:54 AL_HOST: http://47.107.113.31:18090/prod-api
INFO    2025-04-28 14:42:36,673d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:55 DEV_HOST: http://192.168.100.3:8090/prod-api
INFO    2025-04-28 14:42:36,695d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:62 登录请求响应: http://47.107.113.31:18090/prod-api/token
INFO    2025-04-28 14:42:36,695d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:65 登录token: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
INFO    2025-04-28 14:42:36,695d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:76 登录初始化
INFO    2025-04-28 14:42:36,837d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:100 验证码: 8
INFO    2025-04-28 14:42:36,837d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:101 uuid: b4ff2aa669c349b5be4d863d75c3cf53
INFO    2025-04-28 14:42:37,104d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:122 缓存中的token:Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJsb2dpblR5cGUiOiJsb2dpbiIsImxvZ2luSWQiOiJzeXNfdXNlcjoxNjU5MzkxNjY2MjU0NzA0NjQyIiwicm5TdHIiOiJDWlVNV1dMS01UMEk5MVRPSWY5VUZtemY3ZUdzeER4NSIsInVzZXJJZCI6MTY1OTM5MTY2NjI1NDcwNDY0Mn0.4ppUHgxBOWYKXdSr1_V5pNtPx7HwIH5p76PL_Q7ddhM
INFO    2025-04-28 14:42:37,105d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:29 data: {'url': 'http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-28 14:42:37,106d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:171 _dependent_type: False
INFO    2025-04-28 14:42:37,106d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:172 _dependence_case_datas: None
INFO    2025-04-28 14:42:37,107d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:429 ---------------处理多业务逻辑结束---------------
INFO    2025-04-28 14:42:37,107d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:430 ---------------开始请求---------------
INFO    2025-04-28 14:42:37,213d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:436 ---------------请求结束----------------
INFO    2025-04-28 14:42:37,220d:\PytestAutoApi\logs\info-2025-04-28.log:log_decorator.py:32 
======================================================
用例标题: 正常登录
请求路径: http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login
请求方式: POST
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Content-Length': '299', 'Content-Type': 'application/json'}
请求内容: {'customId': 'uqWpSNdirt7wYZUOLwkI/I6O4A3fAH1bTThuLXlIrHxi3D6yvTXKBOIO0aNgkH8rvczDclVfAhp6cHJoqLfH1xmxQFcQxVEN95CQuFYzkQodivGZLIeeqIZdV12gO9hKdPn6o3ZO3vTJVRnMHUKWqC0aRTtjz6xvPTQ2E+9QdM0=', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}
接口响应内容: {"code":200,"msg":"操作成功","data":{"countryCode":null,"token":null,"userInfo":null,"emqConnInfo":null,"wopetLoginType":3,"wopetLoginVo":{"wopetLoginType":3,"userUid":null,"firstRegRegion":null}},"paramMsg":null,"errCode":null}
接口响应时长: 103.75 ms
Http状态码: 200
=====================================================
ERROR   2025-04-28 14:42:37,353d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:195 用例总数: 1
ERROR   2025-04-28 14:42:37,353d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:196 异常用例数: 0
INFO    2025-04-28 14:42:37,354d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:199 用例执行时长: 0.87 s
INFO    2025-04-28 14:42:37,354d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:203 用例成功率: 0.00 %
INFO    2025-04-28 14:42:39,871d:\PytestAutoApi\logs\info-2025-04-28.log:main.py:36 Allure report generated, total cases: TestMetrics(passed=0, failed=1, skipped=0, total=1, broken=0, pass_rate=0.0, time=0.12)
INFO    2025-04-28 14:51:13,977d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 14:51:13,983d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:51:13,986d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:51:13,986d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:51:13,991d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 14:51:13,991d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:51:13,992d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 14:51:13,992d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 14:51:13,994d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 14:51:13,995d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'DELETE', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:51:13,995d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:51:13,995d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:51:13,999d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 14:51:13,999d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 14:51:13,999d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:51:14,000d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:51:14,000d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:51:14,006d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 14:51:14,006d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:51:14,007d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 14:51:14,007d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 14:51:14,025d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 14:51:14,025d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/list', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:51:14,026d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 14:51:14,026d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 14:51:14,030d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 14:51:14,030d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:51:14,030d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 14:51:14,030d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 14:51:14,033d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 14:51:14,033d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:51:14,033d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:51:14,033d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:51:14,037d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 14:51:14,037d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-28 14:51:14,037d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:51:14,038d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:51:14,038d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:51:14,041d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 14:51:14,041d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:51:14,041d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 14:51:14,042d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 14:51:14,051d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 14:51:14,051d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 14:51:14,052d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:51:14,052d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_query_bird_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:51:14,052d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_query_bird_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:51:14,063d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'json', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 14:51:14,063d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/app/info/appUser/pet/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:51:14,063d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:51:14,063d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 14:51:14,075d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 14:51:14,075d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 14:51:14,075d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 14:51:14,076d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 14:51:14,508d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:21 初始化conftest.py
INFO    2025-04-28 14:51:14,590d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:12 TestData: [{'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-28 14:51:14,668d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-28 14:51:14,672d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:150 指定运行顺序: []
INFO    2025-04-28 14:51:14,672d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:159 运行顺序: [<Function test_login[正常登录]>]
INFO    2025-04-28 14:51:14,740d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:39 app接口登录初始化
INFO    2025-04-28 14:51:14,828d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:54 AL_HOST: http://47.107.113.31:18090/prod-api
INFO    2025-04-28 14:51:14,829d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:55 DEV_HOST: http://192.168.100.3:8090/prod-api
INFO    2025-04-28 14:51:14,829d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:56 iot_token{"code":200,"msg":"操作成功","data":{"areaListVoList":[{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"NO","dictKeyName":"挪威","dictDataRemark":"{\"national_number\":\"47\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"挪威"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"JP","dictKeyName":"日本","dictDataRemark":"{\"national_number\":\"81\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"日本"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"LI","dictKeyName":"列支敦士登","dictDataRemark":"{\"national_number\":\"423\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"列支敦士登"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"LT","dictKeyName":"立陶宛","dictDataRemark":"{\"national_number\":\"370\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"立陶宛"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"LU","dictKeyName":"卢森堡","dictDataRemark":"{\"national_number\":\"352\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"卢森堡"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"LV","dictKeyName":"拉脱维亚","dictDataRemark":"{\"national_number\":\"371\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"拉脱维亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MC","dictKeyName":"摩纳哥","dictDataRemark":"{\"national_number\":\"377\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"摩纳哥"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MD","dictKeyName":"摩尔多瓦","dictDataRemark":"{\"national_number\":\"373\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"摩尔多瓦"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"ME","dictKeyName":"蒙特内哥罗","dictDataRemark":"{\"national_number\":\"382\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"蒙特内哥罗"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MK","dictKeyName":"马其顿","dictDataRemark":"{\"national_number\":\"389\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"马其顿"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MT","dictKeyName":"马耳他","dictDataRemark":"{\"national_number\":\"356\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"马耳他"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MX","dictKeyName":"墨西哥","dictDataRemark":"{\"national_number\":\"52\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"墨西哥"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"NL","dictKeyName":"荷兰","dictDataRemark":"{\"national_number\":\"31\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"荷兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"IT","dictKeyName":"意大利","dictDataRemark":"{\"national_number\":\"39\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"意大利"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"PL","dictKeyName":"波兰","dictDataRemark":"{\"national_number\":\"48\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"波兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"PT","dictKeyName":"葡萄牙","dictDataRemark":"{\"national_number\":\"351\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"葡萄牙"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"RO","dictKeyName":"罗马尼亚","dictDataRemark":"{\"national_number\":\"40\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"罗马尼亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"RS","dictKeyName":"塞尔维亚","dictDataRemark":"{\"national_number\":\"381\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"塞尔维亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"SE","dictKeyName":"瑞典","dictDataRemark":"{\"national_number\":\"46\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"瑞典"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"SI","dictKeyName":"斯洛文尼亚","dictDataRemark":"{\"national_number\":\"386\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"斯洛文尼亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"SK","dictKeyName":"斯洛伐克","dictDataRemark":"{\"national_number\":\"421\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"斯洛伐克"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"SM","dictKeyName":"圣马力诺","dictDataRemark":"{\"national_number\":\"378\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"圣马力诺"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"UA","dictKeyName":"乌克兰","dictDataRemark":"{\"national_number\":\"380\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"乌克兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"US","dictKeyName":"美国","dictDataRemark":"{\"national_number\":\"1\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"美国test"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"VG","dictKeyName":"英属维京群岛","dictDataRemark":"{\"national_number\":\"1284\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"英属维京群岛"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"EE","dictKeyName":"爱沙尼亚","dictDataRemark":"{\"national_number\":\"372\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"爱沙尼亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"AL","dictKeyName":"阿尔巴尼亚","dictDataRemark":"{\"national_number\":\"355\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"阿尔巴尼亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"AT","dictKeyName":"奥地利","dictDataRemark":"{\"national_number\":\"43\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"奥地利"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"BA","dictKeyName":"波斯尼亚和黑塞哥维那","dictDataRemark":"{\"national_number\":\"387\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"波斯尼亚和黑塞哥维那"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"BE","dictKeyName":"比利时","dictDataRemark":"{\"national_number\":\"32\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"比利时"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"BG","dictKeyName":"保加利亚","dictDataRemark":"{\"national_number\":\"359\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"保加利亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"BY","dictKeyName":"白俄罗斯","dictDataRemark":"{\"national_number\":\"375\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"白俄罗斯"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"CA","dictKeyName":"加拿大","dictDataRemark":"{\"national_number\":\"1\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"加拿大"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"CH","dictKeyName":"瑞士","dictDataRemark":"{\"national_number\":\"41\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"瑞士"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"CY","dictKeyName":"塞浦路斯","dictDataRemark":"{\"national_number\":\"357\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"塞浦路斯"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"CZ","dictKeyName":"捷克共和国","dictDataRemark":"{\"national_number\":\"420\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"捷克共和国"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"DE","dictKeyName":"德国","dictDataRemark":"{\"national_number\":\"49\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"德国"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"DK","dictKeyName":"丹麦","dictDataRemark":"{\"national_number\":\"45\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"丹麦"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"AD","dictKeyName":"安道尔","dictDataRemark":"{\"national_number\":\"376\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"安道尔"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"ES","dictKeyName":"西班牙","dictDataRemark":"{\"national_number\":\"34\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"西班牙"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"FI","dictKeyName":"芬兰","dictDataRemark":"{\"national_number\":\"358\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"芬兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"FO","dictKeyName":"法罗群岛","dictDataRemark":"{\"national_number\":\"298\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"法罗群岛"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"FR","dictKeyName":"法国","dictDataRemark":"{\"national_number\":\"33\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"法国"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"GB","dictKeyName":"英国","dictDataRemark":"{\"national_number\":\"44\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"英国"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"GI","dictKeyName":"直布罗陀","dictDataRemark":"{\"national_number\":\"350\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"直布罗陀"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"GL","dictKeyName":"格陵兰","dictDataRemark":"{\"national_number\":\"299\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"格陵兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"GR","dictKeyName":"希腊","dictDataRemark":"{\"national_number\":\"30\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"希腊"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"HR","dictKeyName":"克罗地亚","dictDataRemark":"{\"national_number\":\"385\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"克罗地亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"HU","dictKeyName":"匈牙利","dictDataRemark":"{\"national_number\":\"36\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"匈牙利"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"IE","dictKeyName":"爱尔兰","dictDataRemark":"{\"national_number\":\"353\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"爱尔兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"IS","dictKeyName":"冰岛","dictDataRemark":"{\"national_number\":\"354\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"冰岛"},{"appSource":"WObird","dictType":"country_code","category":"DEV","categoryName":"中国","parentCategory":"root","dictKey":"CN","dictKeyName":"中国DEV","dictDataRemark":"{\"national_number\":\"86\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"中国_dev"}],"hostListVoList":[{"dataCenterCode":"AL","host":"http://47.107.113.31:18090/prod-api","wopetHost":null},{"dataCenterCode":"DEV","host":"http://192.168.100.3:8090/prod-api","wopetHost":null}]}}
INFO    2025-04-28 14:51:14,865d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:63 登录请求响应: http://47.107.113.31:18090/prod-api/token
INFO    2025-04-28 14:51:14,866d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:66 登录token: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
INFO    2025-04-28 14:51:14,866d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:77 登录初始化
INFO    2025-04-28 14:51:15,027d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:101 验证码: 0
INFO    2025-04-28 14:51:15,027d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:102 uuid: ba11c2b3cf6340cb9b8fa9b467643c87
INFO    2025-04-28 14:51:15,259d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:123 缓存中的token:Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJsb2dpblR5cGUiOiJsb2dpbiIsImxvZ2luSWQiOiJzeXNfdXNlcjoxNjU5MzkxNjY2MjU0NzA0NjQyIiwicm5TdHIiOiJRbTZFUHlZdGk4cDNqSlVpbFdKYndqb1VTN2U2cGJoRCIsInVzZXJJZCI6MTY1OTM5MTY2NjI1NDcwNDY0Mn0.VSvh2J7d4-H1x1FmHN47BgfRhIORNbGH1OVCnM0g69M
INFO    2025-04-28 14:51:15,261d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:29 data: {'url': 'http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-28 14:51:15,268d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:171 _dependent_type: False
INFO    2025-04-28 14:51:15,269d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:172 _dependence_case_datas: None
INFO    2025-04-28 14:51:15,269d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:429 ---------------处理多业务逻辑结束---------------
INFO    2025-04-28 14:51:15,269d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:430 ---------------开始请求---------------
INFO    2025-04-28 14:51:15,380d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:436 ---------------请求结束----------------
INFO    2025-04-28 14:51:15,387d:\PytestAutoApi\logs\info-2025-04-28.log:log_decorator.py:32 
======================================================
用例标题: 正常登录
请求路径: http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login
请求方式: POST
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Content-Length': '299', 'Content-Type': 'application/json'}
请求内容: {'customId': 'uqWpSNdirt7wYZUOLwkI/I6O4A3fAH1bTThuLXlIrHxi3D6yvTXKBOIO0aNgkH8rvczDclVfAhp6cHJoqLfH1xmxQFcQxVEN95CQuFYzkQodivGZLIeeqIZdV12gO9hKdPn6o3ZO3vTJVRnMHUKWqC0aRTtjz6xvPTQ2E+9QdM0=', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}
接口响应内容: {"code":200,"msg":"操作成功","data":{"countryCode":null,"token":null,"userInfo":null,"emqConnInfo":null,"wopetLoginType":3,"wopetLoginVo":{"wopetLoginType":3,"userUid":null,"firstRegRegion":null}},"paramMsg":null,"errCode":null}
接口响应时长: 108.69 ms
Http状态码: 200
=====================================================
ERROR   2025-04-28 14:51:15,551d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:196 用例总数: 1
ERROR   2025-04-28 14:51:15,551d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:197 异常用例数: 0
INFO    2025-04-28 14:51:15,562d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:200 用例执行时长: 1.01 s
INFO    2025-04-28 14:51:15,562d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:204 用例成功率: 0.00 %
INFO    2025-04-28 14:51:19,496d:\PytestAutoApi\logs\info-2025-04-28.log:main.py:36 Allure report generated, total cases: TestMetrics(passed=0, failed=1, skipped=0, total=1, broken=0, pass_rate=0.0, time=0.13)
INFO    2025-04-28 15:10:58,453d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:10:58,454d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:10:58,454d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:10:58,455d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:10:58,458d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:10:58,458d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:10:58,459d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:10:58,459d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:10:58,463d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:10:58,463d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'DELETE', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:10:58,464d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:10:58,465d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:10:58,470d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 15:10:58,471d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 15:10:58,472d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:10:58,472d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:10:58,473d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:10:58,478d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:10:58,478d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:10:58,480d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:10:58,481d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:10:58,485d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:10:58,485d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/list', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:10:58,485d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:10:58,486d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:10:58,491d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:10:58,491d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:10:58,491d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:10:58,493d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:10:58,495d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:10:58,495d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:10:58,495d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:10:58,495d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:10:58,497d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 15:10:58,497d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-28 15:10:58,497d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:10:58,499d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:10:58,499d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:10:58,501d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 15:10:58,503d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:10:58,503d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 15:10:58,503d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 15:10:58,507d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 15:10:58,507d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 15:10:58,507d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:10:58,508d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_query_bird_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:10:58,508d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_query_bird_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:10:58,511d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 15:10:58,512d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/app/info/appUser/pet/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:10:58,513d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:10:58,513d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:10:58,515d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 15:10:58,516d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:10:58,516d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 15:10:58,517d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 15:10:58,831d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:21 初始化conftest.py
INFO    2025-04-28 15:10:58,856d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:12 TestData: [{'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-28 15:10:58,927d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-28 15:10:58,930d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:150 指定运行顺序: []
INFO    2025-04-28 15:10:58,930d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:159 运行顺序: [<Function test_login[正常登录]>]
INFO    2025-04-28 15:10:58,995d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:39 app接口登录初始化
INFO    2025-04-28 15:10:59,031d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:54 AL_HOST: http://47.107.113.31:18090/prod-api
INFO    2025-04-28 15:10:59,032d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:55 DEV_HOST: http://192.168.100.3:8090/prod-api
INFO    2025-04-28 15:10:59,032d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:56 iot_token{"code":200,"msg":"操作成功","data":{"areaListVoList":[{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"NO","dictKeyName":"挪威","dictDataRemark":"{\"national_number\":\"47\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"挪威"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"JP","dictKeyName":"日本","dictDataRemark":"{\"national_number\":\"81\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"日本"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"LI","dictKeyName":"列支敦士登","dictDataRemark":"{\"national_number\":\"423\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"列支敦士登"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"LT","dictKeyName":"立陶宛","dictDataRemark":"{\"national_number\":\"370\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"立陶宛"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"LU","dictKeyName":"卢森堡","dictDataRemark":"{\"national_number\":\"352\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"卢森堡"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"LV","dictKeyName":"拉脱维亚","dictDataRemark":"{\"national_number\":\"371\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"拉脱维亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MC","dictKeyName":"摩纳哥","dictDataRemark":"{\"national_number\":\"377\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"摩纳哥"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MD","dictKeyName":"摩尔多瓦","dictDataRemark":"{\"national_number\":\"373\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"摩尔多瓦"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"ME","dictKeyName":"蒙特内哥罗","dictDataRemark":"{\"national_number\":\"382\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"蒙特内哥罗"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MK","dictKeyName":"马其顿","dictDataRemark":"{\"national_number\":\"389\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"马其顿"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MT","dictKeyName":"马耳他","dictDataRemark":"{\"national_number\":\"356\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"马耳他"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MX","dictKeyName":"墨西哥","dictDataRemark":"{\"national_number\":\"52\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"墨西哥"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"NL","dictKeyName":"荷兰","dictDataRemark":"{\"national_number\":\"31\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"荷兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"IT","dictKeyName":"意大利","dictDataRemark":"{\"national_number\":\"39\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"意大利"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"PL","dictKeyName":"波兰","dictDataRemark":"{\"national_number\":\"48\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"波兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"PT","dictKeyName":"葡萄牙","dictDataRemark":"{\"national_number\":\"351\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"葡萄牙"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"RO","dictKeyName":"罗马尼亚","dictDataRemark":"{\"national_number\":\"40\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"罗马尼亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"RS","dictKeyName":"塞尔维亚","dictDataRemark":"{\"national_number\":\"381\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"塞尔维亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"SE","dictKeyName":"瑞典","dictDataRemark":"{\"national_number\":\"46\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"瑞典"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"SI","dictKeyName":"斯洛文尼亚","dictDataRemark":"{\"national_number\":\"386\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"斯洛文尼亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"SK","dictKeyName":"斯洛伐克","dictDataRemark":"{\"national_number\":\"421\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"斯洛伐克"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"SM","dictKeyName":"圣马力诺","dictDataRemark":"{\"national_number\":\"378\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"圣马力诺"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"UA","dictKeyName":"乌克兰","dictDataRemark":"{\"national_number\":\"380\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"乌克兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"US","dictKeyName":"美国","dictDataRemark":"{\"national_number\":\"1\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"美国test"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"VG","dictKeyName":"英属维京群岛","dictDataRemark":"{\"national_number\":\"1284\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"英属维京群岛"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"EE","dictKeyName":"爱沙尼亚","dictDataRemark":"{\"national_number\":\"372\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"爱沙尼亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"AL","dictKeyName":"阿尔巴尼亚","dictDataRemark":"{\"national_number\":\"355\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"阿尔巴尼亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"AT","dictKeyName":"奥地利","dictDataRemark":"{\"national_number\":\"43\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"奥地利"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"BA","dictKeyName":"波斯尼亚和黑塞哥维那","dictDataRemark":"{\"national_number\":\"387\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"波斯尼亚和黑塞哥维那"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"BE","dictKeyName":"比利时","dictDataRemark":"{\"national_number\":\"32\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"比利时"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"BG","dictKeyName":"保加利亚","dictDataRemark":"{\"national_number\":\"359\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"保加利亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"BY","dictKeyName":"白俄罗斯","dictDataRemark":"{\"national_number\":\"375\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"白俄罗斯"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"CA","dictKeyName":"加拿大","dictDataRemark":"{\"national_number\":\"1\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"加拿大"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"CH","dictKeyName":"瑞士","dictDataRemark":"{\"national_number\":\"41\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"瑞士"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"CY","dictKeyName":"塞浦路斯","dictDataRemark":"{\"national_number\":\"357\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"塞浦路斯"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"CZ","dictKeyName":"捷克共和国","dictDataRemark":"{\"national_number\":\"420\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"捷克共和国"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"DE","dictKeyName":"德国","dictDataRemark":"{\"national_number\":\"49\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"德国"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"DK","dictKeyName":"丹麦","dictDataRemark":"{\"national_number\":\"45\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"丹麦"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"AD","dictKeyName":"安道尔","dictDataRemark":"{\"national_number\":\"376\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"安道尔"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"ES","dictKeyName":"西班牙","dictDataRemark":"{\"national_number\":\"34\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"西班牙"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"FI","dictKeyName":"芬兰","dictDataRemark":"{\"national_number\":\"358\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"芬兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"FO","dictKeyName":"法罗群岛","dictDataRemark":"{\"national_number\":\"298\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"法罗群岛"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"FR","dictKeyName":"法国","dictDataRemark":"{\"national_number\":\"33\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"法国"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"GB","dictKeyName":"英国","dictDataRemark":"{\"national_number\":\"44\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"英国"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"GI","dictKeyName":"直布罗陀","dictDataRemark":"{\"national_number\":\"350\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"直布罗陀"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"GL","dictKeyName":"格陵兰","dictDataRemark":"{\"national_number\":\"299\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"格陵兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"GR","dictKeyName":"希腊","dictDataRemark":"{\"national_number\":\"30\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"希腊"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"HR","dictKeyName":"克罗地亚","dictDataRemark":"{\"national_number\":\"385\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"克罗地亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"HU","dictKeyName":"匈牙利","dictDataRemark":"{\"national_number\":\"36\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"匈牙利"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"IE","dictKeyName":"爱尔兰","dictDataRemark":"{\"national_number\":\"353\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"爱尔兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"IS","dictKeyName":"冰岛","dictDataRemark":"{\"national_number\":\"354\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"冰岛"},{"appSource":"WObird","dictType":"country_code","category":"DEV","categoryName":"中国","parentCategory":"root","dictKey":"CN","dictKeyName":"中国DEV","dictDataRemark":"{\"national_number\":\"86\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"中国_dev"}],"hostListVoList":[{"dataCenterCode":"AL","host":"http://47.107.113.31:18090/prod-api","wopetHost":null},{"dataCenterCode":"DEV","host":"http://192.168.100.3:8090/prod-api","wopetHost":null}]}}
INFO    2025-04-28 15:10:59,061d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:63 登录请求响应: http://47.107.113.31:18090/prod-api/token
INFO    2025-04-28 15:10:59,061d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:66 登录token: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
INFO    2025-04-28 15:10:59,062d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:77 登录初始化
INFO    2025-04-28 15:10:59,224d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:101 验证码: 5
INFO    2025-04-28 15:10:59,225d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:102 uuid: d28608e474fa49f8b582dc59b611dffe
INFO    2025-04-28 15:10:59,462d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:123 缓存中的token:Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJsb2dpblR5cGUiOiJsb2dpbiIsImxvZ2luSWQiOiJzeXNfdXNlcjoxNjU5MzkxNjY2MjU0NzA0NjQyIiwicm5TdHIiOiJlSHVsUGJLejNaenVHNFJaT1p5YWVRWk5iYm5MaWdiVCIsInVzZXJJZCI6MTY1OTM5MTY2NjI1NDcwNDY0Mn0.I4upjtpjIaYTXeMyfqLKkQV0zcf-mkV2fyEVJvhI1GY
INFO    2025-04-28 15:10:59,463d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:29 data: {'url': 'http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-28 15:10:59,464d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:171 _dependent_type: False
INFO    2025-04-28 15:10:59,465d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:172 _dependence_case_datas: None
INFO    2025-04-28 15:10:59,465d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:429 ---------------处理多业务逻辑结束---------------
INFO    2025-04-28 15:10:59,465d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:430 ---------------开始请求---------------
INFO    2025-04-28 15:10:59,509d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:436 ---------------请求结束----------------
INFO    2025-04-28 15:10:59,512d:\PytestAutoApi\logs\info-2025-04-28.log:log_decorator.py:32 
======================================================
用例标题: 正常登录
请求路径: http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login
请求方式: POST
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Content-Length': '108', 'Content-Type': 'application/json'}
请求内容: {'username': 'test02', 'password': 'admin@lzy123', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}
接口响应内容: {"code":470,"msg":"Email can not be empty","data":null,"paramMsg":null,"errCode":10015}
接口响应时长: 42.69 ms
Http状态码: 200
=====================================================
ERROR   2025-04-28 15:10:59,644d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:196 用例总数: 1
ERROR   2025-04-28 15:10:59,644d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:197 异常用例数: 0
INFO    2025-04-28 15:10:59,645d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:200 用例执行时长: 0.80 s
INFO    2025-04-28 15:10:59,645d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:204 用例成功率: 0.00 %
INFO    2025-04-28 15:11:02,190d:\PytestAutoApi\logs\info-2025-04-28.log:main.py:36 Allure report generated, total cases: TestMetrics(passed=0, failed=1, skipped=0, total=1, broken=0, pass_rate=0.0, time=0.05)
INFO    2025-04-28 15:11:38,375d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:11:38,375d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:11:38,375d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:11:38,376d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:11:38,379d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:11:38,379d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:11:38,379d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:11:38,380d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:11:38,383d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:11:38,383d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'DELETE', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:11:38,383d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:11:38,383d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:11:38,386d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 15:11:38,387d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 15:11:38,387d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:11:38,388d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:11:38,388d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:11:38,395d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:11:38,395d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:11:38,396d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:11:38,397d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:11:38,400d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:11:38,401d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/list', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:11:38,401d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:11:38,402d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:11:38,404d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:11:38,405d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:11:38,405d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:11:38,406d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:11:38,408d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:11:38,408d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:11:38,409d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:11:38,409d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:11:38,412d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 15:11:38,413d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-28 15:11:38,413d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:11:38,413d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:11:38,414d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:11:38,416d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 15:11:38,417d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:11:38,417d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 15:11:38,418d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 15:11:38,423d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 15:11:38,423d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 15:11:38,424d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:11:38,424d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_query_bird_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:11:38,425d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_query_bird_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:11:38,428d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'json', 'is_run': None, 'data': {'email': 'test02', 'password': 'admin@lzy123', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 15:11:38,429d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/app/info/appUser/pet/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'data': {'email': 'test02', 'password': 'admin@lzy123', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:11:38,429d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'email': 'test02', 'password': 'admin@lzy123', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:11:38,429d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'email': 'test02', 'password': 'admin@lzy123', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:11:38,433d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 15:11:38,434d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:11:38,434d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 15:11:38,434d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 15:11:38,774d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:21 初始化conftest.py
INFO    2025-04-28 15:11:38,797d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:12 TestData: [{'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'email': 'test02', 'password': 'admin@lzy123', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-28 15:11:38,865d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'email': 'test02', 'password': 'admin@lzy123', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-28 15:11:38,868d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:150 指定运行顺序: []
INFO    2025-04-28 15:11:38,868d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:159 运行顺序: [<Function test_login[正常登录]>]
INFO    2025-04-28 15:11:38,932d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:39 app接口登录初始化
INFO    2025-04-28 15:11:38,964d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:54 AL_HOST: http://47.107.113.31:18090/prod-api
INFO    2025-04-28 15:11:38,964d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:55 DEV_HOST: http://192.168.100.3:8090/prod-api
INFO    2025-04-28 15:11:38,964d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:56 iot_token{"code":200,"msg":"操作成功","data":{"areaListVoList":[{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"NO","dictKeyName":"挪威","dictDataRemark":"{\"national_number\":\"47\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"挪威"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"JP","dictKeyName":"日本","dictDataRemark":"{\"national_number\":\"81\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"日本"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"LI","dictKeyName":"列支敦士登","dictDataRemark":"{\"national_number\":\"423\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"列支敦士登"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"LT","dictKeyName":"立陶宛","dictDataRemark":"{\"national_number\":\"370\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"立陶宛"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"LU","dictKeyName":"卢森堡","dictDataRemark":"{\"national_number\":\"352\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"卢森堡"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"LV","dictKeyName":"拉脱维亚","dictDataRemark":"{\"national_number\":\"371\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"拉脱维亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MC","dictKeyName":"摩纳哥","dictDataRemark":"{\"national_number\":\"377\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"摩纳哥"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MD","dictKeyName":"摩尔多瓦","dictDataRemark":"{\"national_number\":\"373\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"摩尔多瓦"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"ME","dictKeyName":"蒙特内哥罗","dictDataRemark":"{\"national_number\":\"382\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"蒙特内哥罗"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MK","dictKeyName":"马其顿","dictDataRemark":"{\"national_number\":\"389\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"马其顿"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MT","dictKeyName":"马耳他","dictDataRemark":"{\"national_number\":\"356\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"马耳他"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MX","dictKeyName":"墨西哥","dictDataRemark":"{\"national_number\":\"52\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"墨西哥"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"NL","dictKeyName":"荷兰","dictDataRemark":"{\"national_number\":\"31\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"荷兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"IT","dictKeyName":"意大利","dictDataRemark":"{\"national_number\":\"39\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"意大利"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"PL","dictKeyName":"波兰","dictDataRemark":"{\"national_number\":\"48\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"波兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"PT","dictKeyName":"葡萄牙","dictDataRemark":"{\"national_number\":\"351\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"葡萄牙"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"RO","dictKeyName":"罗马尼亚","dictDataRemark":"{\"national_number\":\"40\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"罗马尼亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"RS","dictKeyName":"塞尔维亚","dictDataRemark":"{\"national_number\":\"381\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"塞尔维亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"SE","dictKeyName":"瑞典","dictDataRemark":"{\"national_number\":\"46\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"瑞典"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"SI","dictKeyName":"斯洛文尼亚","dictDataRemark":"{\"national_number\":\"386\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"斯洛文尼亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"SK","dictKeyName":"斯洛伐克","dictDataRemark":"{\"national_number\":\"421\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"斯洛伐克"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"SM","dictKeyName":"圣马力诺","dictDataRemark":"{\"national_number\":\"378\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"圣马力诺"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"UA","dictKeyName":"乌克兰","dictDataRemark":"{\"national_number\":\"380\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"乌克兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"US","dictKeyName":"美国","dictDataRemark":"{\"national_number\":\"1\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"美国test"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"VG","dictKeyName":"英属维京群岛","dictDataRemark":"{\"national_number\":\"1284\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"英属维京群岛"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"EE","dictKeyName":"爱沙尼亚","dictDataRemark":"{\"national_number\":\"372\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"爱沙尼亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"AL","dictKeyName":"阿尔巴尼亚","dictDataRemark":"{\"national_number\":\"355\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"阿尔巴尼亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"AT","dictKeyName":"奥地利","dictDataRemark":"{\"national_number\":\"43\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"奥地利"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"BA","dictKeyName":"波斯尼亚和黑塞哥维那","dictDataRemark":"{\"national_number\":\"387\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"波斯尼亚和黑塞哥维那"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"BE","dictKeyName":"比利时","dictDataRemark":"{\"national_number\":\"32\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"比利时"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"BG","dictKeyName":"保加利亚","dictDataRemark":"{\"national_number\":\"359\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"保加利亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"BY","dictKeyName":"白俄罗斯","dictDataRemark":"{\"national_number\":\"375\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"白俄罗斯"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"CA","dictKeyName":"加拿大","dictDataRemark":"{\"national_number\":\"1\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"加拿大"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"CH","dictKeyName":"瑞士","dictDataRemark":"{\"national_number\":\"41\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"瑞士"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"CY","dictKeyName":"塞浦路斯","dictDataRemark":"{\"national_number\":\"357\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"塞浦路斯"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"CZ","dictKeyName":"捷克共和国","dictDataRemark":"{\"national_number\":\"420\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"捷克共和国"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"DE","dictKeyName":"德国","dictDataRemark":"{\"national_number\":\"49\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"德国"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"DK","dictKeyName":"丹麦","dictDataRemark":"{\"national_number\":\"45\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"丹麦"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"AD","dictKeyName":"安道尔","dictDataRemark":"{\"national_number\":\"376\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"安道尔"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"ES","dictKeyName":"西班牙","dictDataRemark":"{\"national_number\":\"34\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"西班牙"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"FI","dictKeyName":"芬兰","dictDataRemark":"{\"national_number\":\"358\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"芬兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"FO","dictKeyName":"法罗群岛","dictDataRemark":"{\"national_number\":\"298\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"法罗群岛"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"FR","dictKeyName":"法国","dictDataRemark":"{\"national_number\":\"33\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"法国"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"GB","dictKeyName":"英国","dictDataRemark":"{\"national_number\":\"44\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"英国"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"GI","dictKeyName":"直布罗陀","dictDataRemark":"{\"national_number\":\"350\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"直布罗陀"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"GL","dictKeyName":"格陵兰","dictDataRemark":"{\"national_number\":\"299\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"格陵兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"GR","dictKeyName":"希腊","dictDataRemark":"{\"national_number\":\"30\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"希腊"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"HR","dictKeyName":"克罗地亚","dictDataRemark":"{\"national_number\":\"385\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"克罗地亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"HU","dictKeyName":"匈牙利","dictDataRemark":"{\"national_number\":\"36\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"匈牙利"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"IE","dictKeyName":"爱尔兰","dictDataRemark":"{\"national_number\":\"353\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"爱尔兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"IS","dictKeyName":"冰岛","dictDataRemark":"{\"national_number\":\"354\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"冰岛"},{"appSource":"WObird","dictType":"country_code","category":"DEV","categoryName":"中国","parentCategory":"root","dictKey":"CN","dictKeyName":"中国DEV","dictDataRemark":"{\"national_number\":\"86\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"中国_dev"}],"hostListVoList":[{"dataCenterCode":"AL","host":"http://47.107.113.31:18090/prod-api","wopetHost":null},{"dataCenterCode":"DEV","host":"http://192.168.100.3:8090/prod-api","wopetHost":null}]}}
INFO    2025-04-28 15:11:38,989d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:63 登录请求响应: http://47.107.113.31:18090/prod-api/token
INFO    2025-04-28 15:11:38,989d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:66 登录token: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
INFO    2025-04-28 15:11:38,990d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:77 登录初始化
INFO    2025-04-28 15:11:39,121d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:101 验证码: 7
INFO    2025-04-28 15:11:39,121d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:102 uuid: 3d2633da0b0141f2a1a9fd76fd444475
INFO    2025-04-28 15:11:39,364d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:123 缓存中的token:Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJsb2dpblR5cGUiOiJsb2dpbiIsImxvZ2luSWQiOiJzeXNfdXNlcjoxNjU5MzkxNjY2MjU0NzA0NjQyIiwicm5TdHIiOiJUeXo3SE54RHRoZm55Qko4WTA0U00yaXdiNmp1N1hhUCIsInVzZXJJZCI6MTY1OTM5MTY2NjI1NDcwNDY0Mn0.ZUH_l8v5RZB6fnz8F8q5wPOoVq6gvrCOQ-uzZHvBLpY
INFO    2025-04-28 15:11:39,369d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:29 data: {'url': 'http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'email': 'test02', 'password': 'admin@lzy123', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-28 15:11:39,373d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:171 _dependent_type: False
INFO    2025-04-28 15:11:39,374d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:172 _dependence_case_datas: None
INFO    2025-04-28 15:11:39,375d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:429 ---------------处理多业务逻辑结束---------------
INFO    2025-04-28 15:11:39,375d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:430 ---------------开始请求---------------
INFO    2025-04-28 15:11:39,412d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:436 ---------------请求结束----------------
INFO    2025-04-28 15:11:39,415d:\PytestAutoApi\logs\info-2025-04-28.log:log_decorator.py:32 
======================================================
用例标题: 正常登录
请求路径: http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login
请求方式: POST
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Content-Length': '105', 'Content-Type': 'application/json'}
请求内容: {'email': 'test02', 'password': 'admin@lzy123', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}
接口响应内容: {"code":470,"msg":"Email format error","data":null,"paramMsg":null,"errCode":10009}
接口响应时长: 33.99 ms
Http状态码: 200
=====================================================
ERROR   2025-04-28 15:11:39,547d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:196 用例总数: 1
ERROR   2025-04-28 15:11:39,547d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:197 异常用例数: 0
INFO    2025-04-28 15:11:39,547d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:200 用例执行时长: 0.76 s
INFO    2025-04-28 15:11:39,547d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:204 用例成功率: 0.00 %
INFO    2025-04-28 15:11:42,041d:\PytestAutoApi\logs\info-2025-04-28.log:main.py:36 Allure report generated, total cases: TestMetrics(passed=0, failed=1, skipped=0, total=1, broken=0, pass_rate=0.0, time=0.05)
INFO    2025-04-28 15:19:42,898d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:19:42,898d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:19:42,899d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:19:42,899d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:19:42,903d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:19:42,904d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:19:42,904d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:19:42,904d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:19:42,906d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:19:42,906d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'DELETE', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:19:42,906d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:19:42,907d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:19:42,911d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 15:19:42,912d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 15:19:42,912d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:19:42,912d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:19:42,913d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:19:42,918d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:19:42,919d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:19:42,919d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:19:42,920d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:19:42,922d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:19:42,923d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/list', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:19:42,923d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:19:42,924d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:19:42,927d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:19:42,928d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:19:42,929d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:19:42,929d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:19:42,931d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:19:42,932d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:19:42,932d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:19:42,932d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:19:42,935d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 15:19:42,935d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-28 15:19:42,935d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:19:42,935d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:19:42,936d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:19:42,938d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 15:19:42,939d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:19:42,939d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 15:19:42,939d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 15:19:42,942d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 15:19:42,942d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 15:19:42,942d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:19:42,942d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_query_bird_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:19:42,944d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_query_bird_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:19:42,947d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'json', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 15:19:42,947d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/app/info/appUser/pet/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:19:42,948d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:19:42,948d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:19:42,950d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 15:19:42,950d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:19:42,951d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 15:19:42,951d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 15:19:43,275d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:21 初始化conftest.py
INFO    2025-04-28 15:19:43,305d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:12 TestData: [{'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-28 15:19:43,372d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-28 15:19:43,375d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:159 指定运行顺序: []
INFO    2025-04-28 15:19:43,375d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:168 运行顺序: [<Function test_login[正常登录]>]
INFO    2025-04-28 15:19:43,440d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:39 app接口登录初始化
INFO    2025-04-28 15:19:43,473d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:54 AL_HOST: http://47.107.113.31:18090/prod-api
INFO    2025-04-28 15:19:43,473d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:55 DEV_HOST: http://192.168.100.3:8090/prod-api
INFO    2025-04-28 15:19:43,474d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:56 iot_token{"code":200,"msg":"操作成功","data":{"areaListVoList":[{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"NO","dictKeyName":"挪威","dictDataRemark":"{\"national_number\":\"47\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"挪威"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"JP","dictKeyName":"日本","dictDataRemark":"{\"national_number\":\"81\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"日本"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"LI","dictKeyName":"列支敦士登","dictDataRemark":"{\"national_number\":\"423\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"列支敦士登"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"LT","dictKeyName":"立陶宛","dictDataRemark":"{\"national_number\":\"370\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"立陶宛"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"LU","dictKeyName":"卢森堡","dictDataRemark":"{\"national_number\":\"352\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"卢森堡"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"LV","dictKeyName":"拉脱维亚","dictDataRemark":"{\"national_number\":\"371\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"拉脱维亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MC","dictKeyName":"摩纳哥","dictDataRemark":"{\"national_number\":\"377\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"摩纳哥"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MD","dictKeyName":"摩尔多瓦","dictDataRemark":"{\"national_number\":\"373\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"摩尔多瓦"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"ME","dictKeyName":"蒙特内哥罗","dictDataRemark":"{\"national_number\":\"382\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"蒙特内哥罗"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MK","dictKeyName":"马其顿","dictDataRemark":"{\"national_number\":\"389\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"马其顿"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MT","dictKeyName":"马耳他","dictDataRemark":"{\"national_number\":\"356\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"马耳他"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MX","dictKeyName":"墨西哥","dictDataRemark":"{\"national_number\":\"52\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"墨西哥"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"NL","dictKeyName":"荷兰","dictDataRemark":"{\"national_number\":\"31\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"荷兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"IT","dictKeyName":"意大利","dictDataRemark":"{\"national_number\":\"39\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"意大利"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"PL","dictKeyName":"波兰","dictDataRemark":"{\"national_number\":\"48\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"波兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"PT","dictKeyName":"葡萄牙","dictDataRemark":"{\"national_number\":\"351\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"葡萄牙"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"RO","dictKeyName":"罗马尼亚","dictDataRemark":"{\"national_number\":\"40\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"罗马尼亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"RS","dictKeyName":"塞尔维亚","dictDataRemark":"{\"national_number\":\"381\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"塞尔维亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"SE","dictKeyName":"瑞典","dictDataRemark":"{\"national_number\":\"46\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"瑞典"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"SI","dictKeyName":"斯洛文尼亚","dictDataRemark":"{\"national_number\":\"386\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"斯洛文尼亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"SK","dictKeyName":"斯洛伐克","dictDataRemark":"{\"national_number\":\"421\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"斯洛伐克"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"SM","dictKeyName":"圣马力诺","dictDataRemark":"{\"national_number\":\"378\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"圣马力诺"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"UA","dictKeyName":"乌克兰","dictDataRemark":"{\"national_number\":\"380\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"乌克兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"US","dictKeyName":"美国","dictDataRemark":"{\"national_number\":\"1\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"美国test"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"VG","dictKeyName":"英属维京群岛","dictDataRemark":"{\"national_number\":\"1284\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"英属维京群岛"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"EE","dictKeyName":"爱沙尼亚","dictDataRemark":"{\"national_number\":\"372\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"爱沙尼亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"AL","dictKeyName":"阿尔巴尼亚","dictDataRemark":"{\"national_number\":\"355\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"阿尔巴尼亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"AT","dictKeyName":"奥地利","dictDataRemark":"{\"national_number\":\"43\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"奥地利"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"BA","dictKeyName":"波斯尼亚和黑塞哥维那","dictDataRemark":"{\"national_number\":\"387\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"波斯尼亚和黑塞哥维那"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"BE","dictKeyName":"比利时","dictDataRemark":"{\"national_number\":\"32\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"比利时"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"BG","dictKeyName":"保加利亚","dictDataRemark":"{\"national_number\":\"359\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"保加利亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"BY","dictKeyName":"白俄罗斯","dictDataRemark":"{\"national_number\":\"375\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"白俄罗斯"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"CA","dictKeyName":"加拿大","dictDataRemark":"{\"national_number\":\"1\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"加拿大"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"CH","dictKeyName":"瑞士","dictDataRemark":"{\"national_number\":\"41\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"瑞士"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"CY","dictKeyName":"塞浦路斯","dictDataRemark":"{\"national_number\":\"357\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"塞浦路斯"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"CZ","dictKeyName":"捷克共和国","dictDataRemark":"{\"national_number\":\"420\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"捷克共和国"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"DE","dictKeyName":"德国","dictDataRemark":"{\"national_number\":\"49\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"德国"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"DK","dictKeyName":"丹麦","dictDataRemark":"{\"national_number\":\"45\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"丹麦"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"AD","dictKeyName":"安道尔","dictDataRemark":"{\"national_number\":\"376\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"安道尔"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"ES","dictKeyName":"西班牙","dictDataRemark":"{\"national_number\":\"34\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"西班牙"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"FI","dictKeyName":"芬兰","dictDataRemark":"{\"national_number\":\"358\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"芬兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"FO","dictKeyName":"法罗群岛","dictDataRemark":"{\"national_number\":\"298\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"法罗群岛"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"FR","dictKeyName":"法国","dictDataRemark":"{\"national_number\":\"33\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"法国"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"GB","dictKeyName":"英国","dictDataRemark":"{\"national_number\":\"44\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"英国"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"GI","dictKeyName":"直布罗陀","dictDataRemark":"{\"national_number\":\"350\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"直布罗陀"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"GL","dictKeyName":"格陵兰","dictDataRemark":"{\"national_number\":\"299\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"格陵兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"GR","dictKeyName":"希腊","dictDataRemark":"{\"national_number\":\"30\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"希腊"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"HR","dictKeyName":"克罗地亚","dictDataRemark":"{\"national_number\":\"385\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"克罗地亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"HU","dictKeyName":"匈牙利","dictDataRemark":"{\"national_number\":\"36\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"匈牙利"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"IE","dictKeyName":"爱尔兰","dictDataRemark":"{\"national_number\":\"353\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"爱尔兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"IS","dictKeyName":"冰岛","dictDataRemark":"{\"national_number\":\"354\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"冰岛"},{"appSource":"WObird","dictType":"country_code","category":"DEV","categoryName":"中国","parentCategory":"root","dictKey":"CN","dictKeyName":"中国DEV","dictDataRemark":"{\"national_number\":\"86\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"中国_dev"}],"hostListVoList":[{"dataCenterCode":"AL","host":"http://47.107.113.31:18090/prod-api","wopetHost":null},{"dataCenterCode":"DEV","host":"http://192.168.100.3:8090/prod-api","wopetHost":null}]}}
INFO    2025-04-28 15:19:43,509d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:65 登录请求响应: {"code":500,"msg":"多区域确认登陆 1. 第一次登陆, 2,继续登陆","data":null,"paramMsg":null,"errCode":null}
INFO    2025-04-28 15:19:43,536d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:72 登录请求响应: http://47.107.113.31:18090/prod-api/token
INFO    2025-04-28 15:19:43,536d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:75 登录token: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
INFO    2025-04-28 15:19:43,536d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:86 登录初始化
INFO    2025-04-28 15:19:43,678d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:110 验证码: 0
INFO    2025-04-28 15:19:43,678d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:111 uuid: 5794aae86a0c4e219f896751d1c9d5e1
INFO    2025-04-28 15:19:43,926d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:132 缓存中的token:Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJsb2dpblR5cGUiOiJsb2dpbiIsImxvZ2luSWQiOiJzeXNfdXNlcjoxNjU5MzkxNjY2MjU0NzA0NjQyIiwicm5TdHIiOiJLeHl4S3IxSWx3dzVqY29UbXZkY3BJUXp0Sk1KcUx0UCIsInVzZXJJZCI6MTY1OTM5MTY2NjI1NDcwNDY0Mn0.lSL6MhJfsPA_eoeKYKe0b7M3jPmMeNGpqShQvTp35bo
INFO    2025-04-28 15:19:43,928d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:29 data: {'url': 'http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-28 15:19:43,930d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:171 _dependent_type: False
INFO    2025-04-28 15:19:43,931d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:172 _dependence_case_datas: None
INFO    2025-04-28 15:19:43,931d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:429 ---------------处理多业务逻辑结束---------------
INFO    2025-04-28 15:19:43,931d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:430 ---------------开始请求---------------
INFO    2025-04-28 15:19:44,034d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:436 ---------------请求结束----------------
INFO    2025-04-28 15:19:44,037d:\PytestAutoApi\logs\info-2025-04-28.log:log_decorator.py:32 
======================================================
用例标题: 正常登录
请求路径: http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login
请求方式: POST
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Content-Length': '299', 'Content-Type': 'application/json'}
请求内容: {'customId': 'uqWpSNdirt7wYZUOLwkI/I6O4A3fAH1bTThuLXlIrHxi3D6yvTXKBOIO0aNgkH8rvczDclVfAhp6cHJoqLfH1xmxQFcQxVEN95CQuFYzkQodivGZLIeeqIZdV12gO9hKdPn6o3ZO3vTJVRnMHUKWqC0aRTtjz6xvPTQ2E+9QdM0=', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}
接口响应内容: {"code":200,"msg":"操作成功","data":{"countryCode":null,"token":null,"userInfo":null,"emqConnInfo":null,"wopetLoginType":3,"wopetLoginVo":{"wopetLoginType":3,"userUid":null,"firstRegRegion":null}},"paramMsg":null,"errCode":null}
接口响应时长: 100.83 ms
Http状态码: 200
=====================================================
ERROR   2025-04-28 15:19:44,169d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:205 用例总数: 1
ERROR   2025-04-28 15:19:44,170d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:206 异常用例数: 0
INFO    2025-04-28 15:19:44,170d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:209 用例执行时长: 0.87 s
INFO    2025-04-28 15:19:44,170d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:213 用例成功率: 0.00 %
INFO    2025-04-28 15:19:46,776d:\PytestAutoApi\logs\info-2025-04-28.log:main.py:36 Allure report generated, total cases: TestMetrics(passed=0, failed=1, skipped=0, total=1, broken=0, pass_rate=0.0, time=0.11)
INFO    2025-04-28 15:24:26,746d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:24:26,746d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:24:26,746d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:24:26,746d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:24:26,746d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:24:26,746d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:24:26,746d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:24:26,746d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:24:26,759d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:24:26,759d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'DELETE', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:24:26,759d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:24:26,759d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:24:26,763d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 15:24:26,764d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 15:24:26,764d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:24:26,765d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:24:26,765d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:24:26,771d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:24:26,771d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:24:26,772d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:24:26,772d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:24:26,772d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:24:26,772d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/list', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:24:26,772d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:24:26,777d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:24:26,781d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:24:26,781d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:24:26,782d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:24:26,782d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:24:26,782d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:24:26,782d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:24:26,782d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:24:26,782d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:24:26,782d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 15:24:26,782d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-28 15:24:26,782d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:24:26,782d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:24:26,789d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:24:26,791d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 15:24:26,792d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:24:26,792d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 15:24:26,792d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 15:24:26,797d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 15:24:26,797d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 15:24:26,797d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:24:26,798d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_query_bird_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:24:26,798d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_query_bird_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:24:26,801d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'json', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 15:24:26,801d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/app/info/appUser/pet/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:24:26,801d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:24:26,801d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:24:26,801d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 15:24:26,801d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:24:26,801d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 15:24:26,806d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 15:24:27,152d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:21 初始化conftest.py
INFO    2025-04-28 15:24:27,172d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:12 TestData: [{'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-28 15:24:27,251d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-28 15:24:27,254d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:161 指定运行顺序: []
INFO    2025-04-28 15:24:27,254d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:170 运行顺序: [<Function test_login[正常登录]>]
INFO    2025-04-28 15:24:27,313d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:39 app接口登录初始化
INFO    2025-04-28 15:24:27,439d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:54 AL_HOST: http://47.107.113.31:18090/prod-api
INFO    2025-04-28 15:24:27,439d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:55 DEV_HOST: http://192.168.100.3:8090/prod-api
INFO    2025-04-28 15:24:27,439d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:56 iot_token{"code":200,"msg":"操作成功","data":{"areaListVoList":[{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"NO","dictKeyName":"挪威","dictDataRemark":"{\"national_number\":\"47\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"挪威"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"JP","dictKeyName":"日本","dictDataRemark":"{\"national_number\":\"81\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"日本"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"LI","dictKeyName":"列支敦士登","dictDataRemark":"{\"national_number\":\"423\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"列支敦士登"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"LT","dictKeyName":"立陶宛","dictDataRemark":"{\"national_number\":\"370\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"立陶宛"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"LU","dictKeyName":"卢森堡","dictDataRemark":"{\"national_number\":\"352\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"卢森堡"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"LV","dictKeyName":"拉脱维亚","dictDataRemark":"{\"national_number\":\"371\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"拉脱维亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MC","dictKeyName":"摩纳哥","dictDataRemark":"{\"national_number\":\"377\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"摩纳哥"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MD","dictKeyName":"摩尔多瓦","dictDataRemark":"{\"national_number\":\"373\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"摩尔多瓦"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"ME","dictKeyName":"蒙特内哥罗","dictDataRemark":"{\"national_number\":\"382\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"蒙特内哥罗"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MK","dictKeyName":"马其顿","dictDataRemark":"{\"national_number\":\"389\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"马其顿"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MT","dictKeyName":"马耳他","dictDataRemark":"{\"national_number\":\"356\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"马耳他"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MX","dictKeyName":"墨西哥","dictDataRemark":"{\"national_number\":\"52\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"墨西哥"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"NL","dictKeyName":"荷兰","dictDataRemark":"{\"national_number\":\"31\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"荷兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"IT","dictKeyName":"意大利","dictDataRemark":"{\"national_number\":\"39\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"意大利"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"PL","dictKeyName":"波兰","dictDataRemark":"{\"national_number\":\"48\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"波兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"PT","dictKeyName":"葡萄牙","dictDataRemark":"{\"national_number\":\"351\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"葡萄牙"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"RO","dictKeyName":"罗马尼亚","dictDataRemark":"{\"national_number\":\"40\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"罗马尼亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"RS","dictKeyName":"塞尔维亚","dictDataRemark":"{\"national_number\":\"381\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"塞尔维亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"SE","dictKeyName":"瑞典","dictDataRemark":"{\"national_number\":\"46\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"瑞典"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"SI","dictKeyName":"斯洛文尼亚","dictDataRemark":"{\"national_number\":\"386\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"斯洛文尼亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"SK","dictKeyName":"斯洛伐克","dictDataRemark":"{\"national_number\":\"421\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"斯洛伐克"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"SM","dictKeyName":"圣马力诺","dictDataRemark":"{\"national_number\":\"378\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"圣马力诺"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"UA","dictKeyName":"乌克兰","dictDataRemark":"{\"national_number\":\"380\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"乌克兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"US","dictKeyName":"美国","dictDataRemark":"{\"national_number\":\"1\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"美国test"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"VG","dictKeyName":"英属维京群岛","dictDataRemark":"{\"national_number\":\"1284\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"英属维京群岛"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"EE","dictKeyName":"爱沙尼亚","dictDataRemark":"{\"national_number\":\"372\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"爱沙尼亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"AL","dictKeyName":"阿尔巴尼亚","dictDataRemark":"{\"national_number\":\"355\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"阿尔巴尼亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"AT","dictKeyName":"奥地利","dictDataRemark":"{\"national_number\":\"43\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"奥地利"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"BA","dictKeyName":"波斯尼亚和黑塞哥维那","dictDataRemark":"{\"national_number\":\"387\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"波斯尼亚和黑塞哥维那"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"BE","dictKeyName":"比利时","dictDataRemark":"{\"national_number\":\"32\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"比利时"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"BG","dictKeyName":"保加利亚","dictDataRemark":"{\"national_number\":\"359\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"保加利亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"BY","dictKeyName":"白俄罗斯","dictDataRemark":"{\"national_number\":\"375\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"白俄罗斯"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"CA","dictKeyName":"加拿大","dictDataRemark":"{\"national_number\":\"1\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"加拿大"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"CH","dictKeyName":"瑞士","dictDataRemark":"{\"national_number\":\"41\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"瑞士"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"CY","dictKeyName":"塞浦路斯","dictDataRemark":"{\"national_number\":\"357\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"塞浦路斯"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"CZ","dictKeyName":"捷克共和国","dictDataRemark":"{\"national_number\":\"420\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"捷克共和国"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"DE","dictKeyName":"德国","dictDataRemark":"{\"national_number\":\"49\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"德国"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"DK","dictKeyName":"丹麦","dictDataRemark":"{\"national_number\":\"45\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"丹麦"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"AD","dictKeyName":"安道尔","dictDataRemark":"{\"national_number\":\"376\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"安道尔"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"ES","dictKeyName":"西班牙","dictDataRemark":"{\"national_number\":\"34\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"西班牙"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"FI","dictKeyName":"芬兰","dictDataRemark":"{\"national_number\":\"358\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"芬兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"FO","dictKeyName":"法罗群岛","dictDataRemark":"{\"national_number\":\"298\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"法罗群岛"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"FR","dictKeyName":"法国","dictDataRemark":"{\"national_number\":\"33\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"法国"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"GB","dictKeyName":"英国","dictDataRemark":"{\"national_number\":\"44\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"英国"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"GI","dictKeyName":"直布罗陀","dictDataRemark":"{\"national_number\":\"350\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"直布罗陀"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"GL","dictKeyName":"格陵兰","dictDataRemark":"{\"national_number\":\"299\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"格陵兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"GR","dictKeyName":"希腊","dictDataRemark":"{\"national_number\":\"30\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"希腊"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"HR","dictKeyName":"克罗地亚","dictDataRemark":"{\"national_number\":\"385\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"克罗地亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"HU","dictKeyName":"匈牙利","dictDataRemark":"{\"national_number\":\"36\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"匈牙利"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"IE","dictKeyName":"爱尔兰","dictDataRemark":"{\"national_number\":\"353\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"爱尔兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"IS","dictKeyName":"冰岛","dictDataRemark":"{\"national_number\":\"354\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"冰岛"},{"appSource":"WObird","dictType":"country_code","category":"DEV","categoryName":"中国","parentCategory":"root","dictKey":"CN","dictKeyName":"中国DEV","dictDataRemark":"{\"national_number\":\"86\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"中国_dev"}],"hostListVoList":[{"dataCenterCode":"AL","host":"http://47.107.113.31:18090/prod-api","wopetHost":null},{"dataCenterCode":"DEV","host":"http://192.168.100.3:8090/prod-api","wopetHost":null}]}}
INFO    2025-04-28 15:24:27,479d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:65 登录请求url: http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login
INFO    2025-04-28 15:24:27,480d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:66 登录请求响应: {"code":500,"msg":"多区域确认登陆 1. 第一次登陆, 2,继续登陆","data":null,"paramMsg":null,"errCode":null}
ERROR   2025-04-28 15:24:27,645d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:207 用例总数: 1
ERROR   2025-04-28 15:24:27,645d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:208 异常用例数: 1
INFO    2025-04-28 15:24:27,646d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:211 用例执行时长: 0.49 s
INFO    2025-04-28 15:24:27,646d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:215 用例成功率: 0.00 %
INFO    2025-04-28 15:24:30,082d:\PytestAutoApi\logs\info-2025-04-28.log:main.py:36 Allure report generated, total cases: TestMetrics(passed=0, failed=0, skipped=0, total=1, broken=1, pass_rate=0.0, time=0.0)
INFO    2025-04-28 15:24:39,233d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:24:39,233d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:24:39,233d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:24:39,233d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:24:39,233d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:24:39,233d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:24:39,233d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:24:39,233d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:24:39,233d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:24:39,233d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'DELETE', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:24:39,233d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:24:39,233d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:24:39,252d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 15:24:39,253d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 15:24:39,253d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:24:39,254d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:24:39,254d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:24:39,259d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:24:39,260d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:24:39,260d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:24:39,261d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:24:39,264d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:24:39,264d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/list', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:24:39,264d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:24:39,265d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:24:39,268d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:24:39,269d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:24:39,270d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:24:39,270d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:24:39,272d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:24:39,272d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:24:39,273d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:24:39,273d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:24:39,273d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 15:24:39,273d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-28 15:24:39,273d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:24:39,277d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:24:39,277d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:24:39,279d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 15:24:39,280d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:24:39,280d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 15:24:39,280d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 15:24:39,284d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 15:24:39,284d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 15:24:39,284d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:24:39,284d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_query_bird_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:24:39,285d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_query_bird_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:24:39,288d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'json', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 15:24:39,288d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/app/info/appUser/pet/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:24:39,289d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:24:39,289d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:24:39,291d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 15:24:39,291d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:24:39,291d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 15:24:39,292d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 15:24:39,653d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:21 初始化conftest.py
INFO    2025-04-28 15:24:39,674d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:12 TestData: [{'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-28 15:24:39,749d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-28 15:24:39,750d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:161 指定运行顺序: []
INFO    2025-04-28 15:24:39,750d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:170 运行顺序: [<Function test_login[正常登录]>]
INFO    2025-04-28 15:24:39,812d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:39 app接口登录初始化
INFO    2025-04-28 15:24:39,845d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:54 AL_HOST: http://47.107.113.31:18090/prod-api
INFO    2025-04-28 15:24:39,845d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:55 DEV_HOST: http://192.168.100.3:8090/prod-api
INFO    2025-04-28 15:24:39,845d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:56 iot_token{"code":200,"msg":"操作成功","data":{"areaListVoList":[{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"NO","dictKeyName":"挪威","dictDataRemark":"{\"national_number\":\"47\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"挪威"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"JP","dictKeyName":"日本","dictDataRemark":"{\"national_number\":\"81\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"日本"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"LI","dictKeyName":"列支敦士登","dictDataRemark":"{\"national_number\":\"423\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"列支敦士登"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"LT","dictKeyName":"立陶宛","dictDataRemark":"{\"national_number\":\"370\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"立陶宛"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"LU","dictKeyName":"卢森堡","dictDataRemark":"{\"national_number\":\"352\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"卢森堡"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"LV","dictKeyName":"拉脱维亚","dictDataRemark":"{\"national_number\":\"371\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"拉脱维亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MC","dictKeyName":"摩纳哥","dictDataRemark":"{\"national_number\":\"377\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"摩纳哥"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MD","dictKeyName":"摩尔多瓦","dictDataRemark":"{\"national_number\":\"373\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"摩尔多瓦"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"ME","dictKeyName":"蒙特内哥罗","dictDataRemark":"{\"national_number\":\"382\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"蒙特内哥罗"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MK","dictKeyName":"马其顿","dictDataRemark":"{\"national_number\":\"389\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"马其顿"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MT","dictKeyName":"马耳他","dictDataRemark":"{\"national_number\":\"356\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"马耳他"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MX","dictKeyName":"墨西哥","dictDataRemark":"{\"national_number\":\"52\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"墨西哥"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"NL","dictKeyName":"荷兰","dictDataRemark":"{\"national_number\":\"31\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"荷兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"IT","dictKeyName":"意大利","dictDataRemark":"{\"national_number\":\"39\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"意大利"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"PL","dictKeyName":"波兰","dictDataRemark":"{\"national_number\":\"48\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"波兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"PT","dictKeyName":"葡萄牙","dictDataRemark":"{\"national_number\":\"351\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"葡萄牙"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"RO","dictKeyName":"罗马尼亚","dictDataRemark":"{\"national_number\":\"40\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"罗马尼亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"RS","dictKeyName":"塞尔维亚","dictDataRemark":"{\"national_number\":\"381\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"塞尔维亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"SE","dictKeyName":"瑞典","dictDataRemark":"{\"national_number\":\"46\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"瑞典"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"SI","dictKeyName":"斯洛文尼亚","dictDataRemark":"{\"national_number\":\"386\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"斯洛文尼亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"SK","dictKeyName":"斯洛伐克","dictDataRemark":"{\"national_number\":\"421\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"斯洛伐克"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"SM","dictKeyName":"圣马力诺","dictDataRemark":"{\"national_number\":\"378\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"圣马力诺"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"UA","dictKeyName":"乌克兰","dictDataRemark":"{\"national_number\":\"380\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"乌克兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"US","dictKeyName":"美国","dictDataRemark":"{\"national_number\":\"1\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"美国test"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"VG","dictKeyName":"英属维京群岛","dictDataRemark":"{\"national_number\":\"1284\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"英属维京群岛"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"EE","dictKeyName":"爱沙尼亚","dictDataRemark":"{\"national_number\":\"372\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"爱沙尼亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"AL","dictKeyName":"阿尔巴尼亚","dictDataRemark":"{\"national_number\":\"355\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"阿尔巴尼亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"AT","dictKeyName":"奥地利","dictDataRemark":"{\"national_number\":\"43\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"奥地利"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"BA","dictKeyName":"波斯尼亚和黑塞哥维那","dictDataRemark":"{\"national_number\":\"387\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"波斯尼亚和黑塞哥维那"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"BE","dictKeyName":"比利时","dictDataRemark":"{\"national_number\":\"32\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"比利时"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"BG","dictKeyName":"保加利亚","dictDataRemark":"{\"national_number\":\"359\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"保加利亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"BY","dictKeyName":"白俄罗斯","dictDataRemark":"{\"national_number\":\"375\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"白俄罗斯"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"CA","dictKeyName":"加拿大","dictDataRemark":"{\"national_number\":\"1\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"加拿大"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"CH","dictKeyName":"瑞士","dictDataRemark":"{\"national_number\":\"41\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"瑞士"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"CY","dictKeyName":"塞浦路斯","dictDataRemark":"{\"national_number\":\"357\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"塞浦路斯"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"CZ","dictKeyName":"捷克共和国","dictDataRemark":"{\"national_number\":\"420\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"捷克共和国"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"DE","dictKeyName":"德国","dictDataRemark":"{\"national_number\":\"49\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"德国"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"DK","dictKeyName":"丹麦","dictDataRemark":"{\"national_number\":\"45\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"丹麦"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"AD","dictKeyName":"安道尔","dictDataRemark":"{\"national_number\":\"376\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"安道尔"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"ES","dictKeyName":"西班牙","dictDataRemark":"{\"national_number\":\"34\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"西班牙"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"FI","dictKeyName":"芬兰","dictDataRemark":"{\"national_number\":\"358\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"芬兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"FO","dictKeyName":"法罗群岛","dictDataRemark":"{\"national_number\":\"298\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"法罗群岛"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"FR","dictKeyName":"法国","dictDataRemark":"{\"national_number\":\"33\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"法国"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"GB","dictKeyName":"英国","dictDataRemark":"{\"national_number\":\"44\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"英国"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"GI","dictKeyName":"直布罗陀","dictDataRemark":"{\"national_number\":\"350\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"直布罗陀"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"GL","dictKeyName":"格陵兰","dictDataRemark":"{\"national_number\":\"299\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"格陵兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"GR","dictKeyName":"希腊","dictDataRemark":"{\"national_number\":\"30\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"希腊"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"HR","dictKeyName":"克罗地亚","dictDataRemark":"{\"national_number\":\"385\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"克罗地亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"HU","dictKeyName":"匈牙利","dictDataRemark":"{\"national_number\":\"36\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"匈牙利"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"IE","dictKeyName":"爱尔兰","dictDataRemark":"{\"national_number\":\"353\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"爱尔兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"IS","dictKeyName":"冰岛","dictDataRemark":"{\"national_number\":\"354\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"冰岛"},{"appSource":"WObird","dictType":"country_code","category":"DEV","categoryName":"中国","parentCategory":"root","dictKey":"CN","dictKeyName":"中国DEV","dictDataRemark":"{\"national_number\":\"86\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"中国_dev"}],"hostListVoList":[{"dataCenterCode":"AL","host":"http://47.107.113.31:18090/prod-api","wopetHost":null},{"dataCenterCode":"DEV","host":"http://192.168.100.3:8090/prod-api","wopetHost":null}]}}
INFO    2025-04-28 15:24:39,878d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:65 登录请求url: http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login
INFO    2025-04-28 15:24:39,879d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:66 登录请求响应: {"code":500,"msg":"多区域确认登陆 1. 第一次登陆, 2,继续登陆","data":null,"paramMsg":null,"errCode":null}
INFO    2025-04-28 15:24:39,900d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:74 登录请求响应: http://47.107.113.31:18090/prod-api/token
INFO    2025-04-28 15:24:39,900d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:77 登录token: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
INFO    2025-04-28 15:24:39,900d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:88 登录初始化
INFO    2025-04-28 15:24:40,037d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:112 验证码: 8
INFO    2025-04-28 15:24:40,037d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:113 uuid: 904f826df1674045947318122356b71d
INFO    2025-04-28 15:24:40,283d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:134 缓存中的token:Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJsb2dpblR5cGUiOiJsb2dpbiIsImxvZ2luSWQiOiJzeXNfdXNlcjoxNjU5MzkxNjY2MjU0NzA0NjQyIiwicm5TdHIiOiJMRUFxSFZOWnhtdUNNS29hQ3lBYmtYdkdGZk1NVDZneSIsInVzZXJJZCI6MTY1OTM5MTY2NjI1NDcwNDY0Mn0.IiSXQLUGz0T9ees84CZmg1T42mwpM7l8Kv1EPIRflYw
INFO    2025-04-28 15:24:40,284d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:29 data: {'url': 'http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-28 15:24:40,286d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:171 _dependent_type: False
INFO    2025-04-28 15:24:40,286d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:172 _dependence_case_datas: None
INFO    2025-04-28 15:24:40,287d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:429 ---------------处理多业务逻辑结束---------------
INFO    2025-04-28 15:24:40,287d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:430 ---------------开始请求---------------
INFO    2025-04-28 15:24:40,391d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:436 ---------------请求结束----------------
INFO    2025-04-28 15:24:40,395d:\PytestAutoApi\logs\info-2025-04-28.log:log_decorator.py:32 
======================================================
用例标题: 正常登录
请求路径: http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login
请求方式: POST
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Content-Length': '299', 'Content-Type': 'application/json'}
请求内容: {'customId': 'uqWpSNdirt7wYZUOLwkI/I6O4A3fAH1bTThuLXlIrHxi3D6yvTXKBOIO0aNgkH8rvczDclVfAhp6cHJoqLfH1xmxQFcQxVEN95CQuFYzkQodivGZLIeeqIZdV12gO9hKdPn6o3ZO3vTJVRnMHUKWqC0aRTtjz6xvPTQ2E+9QdM0=', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}
接口响应内容: {"code":200,"msg":"操作成功","data":{"countryCode":null,"token":null,"userInfo":null,"emqConnInfo":null,"wopetLoginType":3,"wopetLoginVo":{"wopetLoginType":3,"userUid":null,"firstRegRegion":null}},"paramMsg":null,"errCode":null}
接口响应时长: 103.6 ms
Http状态码: 200
=====================================================
ERROR   2025-04-28 15:24:40,526d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:207 用例总数: 1
ERROR   2025-04-28 15:24:40,526d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:208 异常用例数: 0
INFO    2025-04-28 15:24:40,527d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:211 用例执行时长: 0.86 s
INFO    2025-04-28 15:24:40,527d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:215 用例成功率: 0.00 %
INFO    2025-04-28 15:24:42,959d:\PytestAutoApi\logs\info-2025-04-28.log:main.py:36 Allure report generated, total cases: TestMetrics(passed=0, failed=1, skipped=0, total=1, broken=0, pass_rate=0.0, time=0.11)
INFO    2025-04-28 15:38:11,558d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:38:11,575d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:38:11,575d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:38:11,583d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:38:11,588d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:38:11,588d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:38:11,589d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:38:11,589d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:38:11,593d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:38:11,593d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'DELETE', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:38:11,594d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:38:11,594d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:38:11,598d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 15:38:11,598d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 15:38:11,599d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:38:11,599d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:38:11,600d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:38:11,606d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:38:11,606d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:38:11,607d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:38:11,608d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:38:11,611d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:38:11,611d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/list', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:38:11,612d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:38:11,612d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:38:11,616d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:38:11,616d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:38:11,617d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:38:11,617d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:38:11,617d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:38:11,617d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:38:11,617d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:38:11,617d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:38:11,617d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 15:38:11,617d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-28 15:38:11,617d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:38:11,617d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:38:11,624d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:38:11,626d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 15:38:11,626d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:38:11,627d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 15:38:11,627d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 15:38:11,642d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 15:38:11,643d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 15:38:11,643d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:38:11,644d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_query_bird_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:38:11,644d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_query_bird_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:38:11,645d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'json', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 15:38:11,645d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/app/info/appUser/pet/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:38:11,645d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:38:11,645d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:38:11,662d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 15:38:11,667d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:38:11,667d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 15:38:11,667d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 15:38:12,098d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:21 初始化conftest.py
INFO    2025-04-28 15:38:12,164d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:12 TestData: [{'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-28 15:38:12,262d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-28 15:38:12,262d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:161 指定运行顺序: []
INFO    2025-04-28 15:38:12,267d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:170 运行顺序: [<Function test_login[正常登录]>]
INFO    2025-04-28 15:38:12,335d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:39 app接口登录初始化
INFO    2025-04-28 15:38:12,381d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:54 AL_HOST: http://47.107.113.31:18090/prod-api
INFO    2025-04-28 15:38:12,381d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:55 DEV_HOST: http://192.168.100.3:8090/prod-api
INFO    2025-04-28 15:38:12,381d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:56 iot_token{"code":200,"msg":"操作成功","data":{"areaListVoList":[{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"NO","dictKeyName":"挪威","dictDataRemark":"{\"national_number\":\"47\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"挪威"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"JP","dictKeyName":"日本","dictDataRemark":"{\"national_number\":\"81\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"日本"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"LI","dictKeyName":"列支敦士登","dictDataRemark":"{\"national_number\":\"423\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"列支敦士登"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"LT","dictKeyName":"立陶宛","dictDataRemark":"{\"national_number\":\"370\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"立陶宛"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"LU","dictKeyName":"卢森堡","dictDataRemark":"{\"national_number\":\"352\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"卢森堡"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"LV","dictKeyName":"拉脱维亚","dictDataRemark":"{\"national_number\":\"371\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"拉脱维亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MC","dictKeyName":"摩纳哥","dictDataRemark":"{\"national_number\":\"377\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"摩纳哥"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MD","dictKeyName":"摩尔多瓦","dictDataRemark":"{\"national_number\":\"373\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"摩尔多瓦"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"ME","dictKeyName":"蒙特内哥罗","dictDataRemark":"{\"national_number\":\"382\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"蒙特内哥罗"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MK","dictKeyName":"马其顿","dictDataRemark":"{\"national_number\":\"389\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"马其顿"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MT","dictKeyName":"马耳他","dictDataRemark":"{\"national_number\":\"356\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"马耳他"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MX","dictKeyName":"墨西哥","dictDataRemark":"{\"national_number\":\"52\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"墨西哥"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"NL","dictKeyName":"荷兰","dictDataRemark":"{\"national_number\":\"31\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"荷兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"IT","dictKeyName":"意大利","dictDataRemark":"{\"national_number\":\"39\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"意大利"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"PL","dictKeyName":"波兰","dictDataRemark":"{\"national_number\":\"48\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"波兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"PT","dictKeyName":"葡萄牙","dictDataRemark":"{\"national_number\":\"351\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"葡萄牙"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"RO","dictKeyName":"罗马尼亚","dictDataRemark":"{\"national_number\":\"40\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"罗马尼亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"RS","dictKeyName":"塞尔维亚","dictDataRemark":"{\"national_number\":\"381\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"塞尔维亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"SE","dictKeyName":"瑞典","dictDataRemark":"{\"national_number\":\"46\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"瑞典"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"SI","dictKeyName":"斯洛文尼亚","dictDataRemark":"{\"national_number\":\"386\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"斯洛文尼亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"SK","dictKeyName":"斯洛伐克","dictDataRemark":"{\"national_number\":\"421\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"斯洛伐克"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"SM","dictKeyName":"圣马力诺","dictDataRemark":"{\"national_number\":\"378\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"圣马力诺"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"UA","dictKeyName":"乌克兰","dictDataRemark":"{\"national_number\":\"380\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"乌克兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"US","dictKeyName":"美国","dictDataRemark":"{\"national_number\":\"1\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"美国test"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"VG","dictKeyName":"英属维京群岛","dictDataRemark":"{\"national_number\":\"1284\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"英属维京群岛"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"EE","dictKeyName":"爱沙尼亚","dictDataRemark":"{\"national_number\":\"372\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"爱沙尼亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"AL","dictKeyName":"阿尔巴尼亚","dictDataRemark":"{\"national_number\":\"355\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"阿尔巴尼亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"AT","dictKeyName":"奥地利","dictDataRemark":"{\"national_number\":\"43\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"奥地利"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"BA","dictKeyName":"波斯尼亚和黑塞哥维那","dictDataRemark":"{\"national_number\":\"387\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"波斯尼亚和黑塞哥维那"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"BE","dictKeyName":"比利时","dictDataRemark":"{\"national_number\":\"32\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"比利时"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"BG","dictKeyName":"保加利亚","dictDataRemark":"{\"national_number\":\"359\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"保加利亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"BY","dictKeyName":"白俄罗斯","dictDataRemark":"{\"national_number\":\"375\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"白俄罗斯"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"CA","dictKeyName":"加拿大","dictDataRemark":"{\"national_number\":\"1\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"加拿大"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"CH","dictKeyName":"瑞士","dictDataRemark":"{\"national_number\":\"41\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"瑞士"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"CY","dictKeyName":"塞浦路斯","dictDataRemark":"{\"national_number\":\"357\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"塞浦路斯"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"CZ","dictKeyName":"捷克共和国","dictDataRemark":"{\"national_number\":\"420\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"捷克共和国"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"DE","dictKeyName":"德国","dictDataRemark":"{\"national_number\":\"49\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"德国"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"DK","dictKeyName":"丹麦","dictDataRemark":"{\"national_number\":\"45\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"丹麦"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"AD","dictKeyName":"安道尔","dictDataRemark":"{\"national_number\":\"376\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"安道尔"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"ES","dictKeyName":"西班牙","dictDataRemark":"{\"national_number\":\"34\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"西班牙"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"FI","dictKeyName":"芬兰","dictDataRemark":"{\"national_number\":\"358\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"芬兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"FO","dictKeyName":"法罗群岛","dictDataRemark":"{\"national_number\":\"298\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"法罗群岛"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"FR","dictKeyName":"法国","dictDataRemark":"{\"national_number\":\"33\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"法国"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"GB","dictKeyName":"英国","dictDataRemark":"{\"national_number\":\"44\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"英国"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"GI","dictKeyName":"直布罗陀","dictDataRemark":"{\"national_number\":\"350\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"直布罗陀"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"GL","dictKeyName":"格陵兰","dictDataRemark":"{\"national_number\":\"299\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"格陵兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"GR","dictKeyName":"希腊","dictDataRemark":"{\"national_number\":\"30\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"希腊"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"HR","dictKeyName":"克罗地亚","dictDataRemark":"{\"national_number\":\"385\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"克罗地亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"HU","dictKeyName":"匈牙利","dictDataRemark":"{\"national_number\":\"36\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"匈牙利"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"IE","dictKeyName":"爱尔兰","dictDataRemark":"{\"national_number\":\"353\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"爱尔兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"IS","dictKeyName":"冰岛","dictDataRemark":"{\"national_number\":\"354\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"冰岛"},{"appSource":"WObird","dictType":"country_code","category":"DEV","categoryName":"中国","parentCategory":"root","dictKey":"CN","dictKeyName":"中国DEV","dictDataRemark":"{\"national_number\":\"86\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"中国_dev"}],"hostListVoList":[{"dataCenterCode":"AL","host":"http://47.107.113.31:18090/prod-api","wopetHost":null},{"dataCenterCode":"DEV","host":"http://192.168.100.3:8090/prod-api","wopetHost":null}]}}
INFO    2025-04-28 15:38:12,426d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:65 登录请求url: http://47.107.113.31:18090/prod-api/app/info/appUser/loginTest
INFO    2025-04-28 15:38:12,426d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:66 登录请求响应: {"code":500,"msg":"多区域确认登陆 1. 第一次登陆, 2,继续登陆","data":null,"paramMsg":null,"errCode":null}
INFO    2025-04-28 15:38:12,461d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:74 登录请求响应: http://47.107.113.31:18090/prod-api/token
INFO    2025-04-28 15:38:12,462d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:77 登录token: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
INFO    2025-04-28 15:38:12,462d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:88 登录初始化
INFO    2025-04-28 15:38:12,639d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:112 验证码: 7
INFO    2025-04-28 15:38:12,639d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:113 uuid: 30602f52cd4e464e90326ffd569af0eb
INFO    2025-04-28 15:38:12,915d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:134 缓存中的token:Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJsb2dpblR5cGUiOiJsb2dpbiIsImxvZ2luSWQiOiJzeXNfdXNlcjoxNjU5MzkxNjY2MjU0NzA0NjQyIiwicm5TdHIiOiJnRXRob0tQUDVDQVVTZVVqS0hlM09JblJtRXk1ZTRiVyIsInVzZXJJZCI6MTY1OTM5MTY2NjI1NDcwNDY0Mn0.GNzx2SX7_VcvTjrGdA7Qtx8R9H30D2nTtUwSryy34jo
INFO    2025-04-28 15:38:12,915d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:29 data: {'url': 'http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-28 15:38:12,926d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:171 _dependent_type: False
INFO    2025-04-28 15:38:12,926d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:172 _dependence_case_datas: None
INFO    2025-04-28 15:38:12,926d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:429 ---------------处理多业务逻辑结束---------------
INFO    2025-04-28 15:38:12,926d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:430 ---------------开始请求---------------
INFO    2025-04-28 15:38:13,056d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:436 ---------------请求结束----------------
INFO    2025-04-28 15:38:13,062d:\PytestAutoApi\logs\info-2025-04-28.log:log_decorator.py:32 
======================================================
用例标题: 正常登录
请求路径: http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login
请求方式: POST
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Content-Length': '299', 'Content-Type': 'application/json'}
请求内容: {'customId': 'uqWpSNdirt7wYZUOLwkI/I6O4A3fAH1bTThuLXlIrHxi3D6yvTXKBOIO0aNgkH8rvczDclVfAhp6cHJoqLfH1xmxQFcQxVEN95CQuFYzkQodivGZLIeeqIZdV12gO9hKdPn6o3ZO3vTJVRnMHUKWqC0aRTtjz6xvPTQ2E+9QdM0=', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}
接口响应内容: {"code":200,"msg":"操作成功","data":{"countryCode":null,"token":null,"userInfo":null,"emqConnInfo":null,"wopetLoginType":3,"wopetLoginVo":{"wopetLoginType":3,"userUid":null,"firstRegRegion":null}},"paramMsg":null,"errCode":null}
接口响应时长: 126.81 ms
Http状态码: 200
=====================================================
ERROR   2025-04-28 15:38:13,229d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:207 用例总数: 1
ERROR   2025-04-28 15:38:13,229d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:208 异常用例数: 0
INFO    2025-04-28 15:38:13,246d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:211 用例执行时长: 1.10 s
INFO    2025-04-28 15:38:13,246d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:215 用例成功率: 0.00 %
INFO    2025-04-28 15:38:17,011d:\PytestAutoApi\logs\info-2025-04-28.log:main.py:36 Allure report generated, total cases: TestMetrics(passed=0, failed=1, skipped=0, total=1, broken=0, pass_rate=0.0, time=0.15)
INFO    2025-04-28 15:40:58,380d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:40:58,380d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:40:58,380d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:40:58,380d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:40:58,380d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:40:58,380d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:40:58,380d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:40:58,380d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:40:58,386d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:40:58,386d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'DELETE', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:40:58,387d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:40:58,387d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:40:58,391d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 15:40:58,391d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 15:40:58,391d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:40:58,392d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:40:58,392d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:40:58,399d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:40:58,399d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:40:58,399d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:40:58,400d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:40:58,400d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:40:58,400d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/list', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:40:58,400d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:40:58,400d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:40:58,408d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:40:58,409d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:40:58,409d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:40:58,409d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:40:58,410d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:40:58,410d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:40:58,410d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:40:58,410d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:40:58,414d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 15:40:58,414d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-28 15:40:58,414d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:40:58,414d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:40:58,416d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:40:58,419d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 15:40:58,419d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:40:58,419d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 15:40:58,419d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 15:40:58,425d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 15:40:58,425d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 15:40:58,425d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:40:58,426d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_query_bird_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:40:58,426d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_query_bird_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:40:58,429d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'json', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 15:40:58,429d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/app/info/appUser/pet/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:40:58,429d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:40:58,429d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:40:58,431d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 15:40:58,431d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:40:58,431d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 15:40:58,431d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 15:40:58,762d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:21 初始化conftest.py
INFO    2025-04-28 15:40:58,782d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:12 TestData: [{'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-28 15:40:58,843d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-28 15:40:58,856d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:163 指定运行顺序: []
INFO    2025-04-28 15:40:58,856d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:172 运行顺序: [<Function test_login[正常登录]>]
INFO    2025-04-28 15:40:58,918d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:39 app接口登录初始化
INFO    2025-04-28 15:40:58,960d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:54 AL_HOST: http://47.107.113.31:18090/prod-api
INFO    2025-04-28 15:40:58,960d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:55 DEV_HOST: http://192.168.100.3:8090/prod-api
INFO    2025-04-28 15:40:58,960d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:56 iot_token{"code":200,"msg":"操作成功","data":{"areaListVoList":[{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"NO","dictKeyName":"挪威","dictDataRemark":"{\"national_number\":\"47\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"挪威"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"JP","dictKeyName":"日本","dictDataRemark":"{\"national_number\":\"81\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"日本"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"LI","dictKeyName":"列支敦士登","dictDataRemark":"{\"national_number\":\"423\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"列支敦士登"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"LT","dictKeyName":"立陶宛","dictDataRemark":"{\"national_number\":\"370\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"立陶宛"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"LU","dictKeyName":"卢森堡","dictDataRemark":"{\"national_number\":\"352\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"卢森堡"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"LV","dictKeyName":"拉脱维亚","dictDataRemark":"{\"national_number\":\"371\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"拉脱维亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MC","dictKeyName":"摩纳哥","dictDataRemark":"{\"national_number\":\"377\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"摩纳哥"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MD","dictKeyName":"摩尔多瓦","dictDataRemark":"{\"national_number\":\"373\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"摩尔多瓦"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"ME","dictKeyName":"蒙特内哥罗","dictDataRemark":"{\"national_number\":\"382\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"蒙特内哥罗"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MK","dictKeyName":"马其顿","dictDataRemark":"{\"national_number\":\"389\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"马其顿"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MT","dictKeyName":"马耳他","dictDataRemark":"{\"national_number\":\"356\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"马耳他"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MX","dictKeyName":"墨西哥","dictDataRemark":"{\"national_number\":\"52\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"墨西哥"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"NL","dictKeyName":"荷兰","dictDataRemark":"{\"national_number\":\"31\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"荷兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"IT","dictKeyName":"意大利","dictDataRemark":"{\"national_number\":\"39\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"意大利"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"PL","dictKeyName":"波兰","dictDataRemark":"{\"national_number\":\"48\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"波兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"PT","dictKeyName":"葡萄牙","dictDataRemark":"{\"national_number\":\"351\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"葡萄牙"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"RO","dictKeyName":"罗马尼亚","dictDataRemark":"{\"national_number\":\"40\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"罗马尼亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"RS","dictKeyName":"塞尔维亚","dictDataRemark":"{\"national_number\":\"381\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"塞尔维亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"SE","dictKeyName":"瑞典","dictDataRemark":"{\"national_number\":\"46\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"瑞典"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"SI","dictKeyName":"斯洛文尼亚","dictDataRemark":"{\"national_number\":\"386\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"斯洛文尼亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"SK","dictKeyName":"斯洛伐克","dictDataRemark":"{\"national_number\":\"421\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"斯洛伐克"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"SM","dictKeyName":"圣马力诺","dictDataRemark":"{\"national_number\":\"378\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"圣马力诺"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"UA","dictKeyName":"乌克兰","dictDataRemark":"{\"national_number\":\"380\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"乌克兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"US","dictKeyName":"美国","dictDataRemark":"{\"national_number\":\"1\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"美国test"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"VG","dictKeyName":"英属维京群岛","dictDataRemark":"{\"national_number\":\"1284\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"英属维京群岛"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"EE","dictKeyName":"爱沙尼亚","dictDataRemark":"{\"national_number\":\"372\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"爱沙尼亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"AL","dictKeyName":"阿尔巴尼亚","dictDataRemark":"{\"national_number\":\"355\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"阿尔巴尼亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"AT","dictKeyName":"奥地利","dictDataRemark":"{\"national_number\":\"43\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"奥地利"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"BA","dictKeyName":"波斯尼亚和黑塞哥维那","dictDataRemark":"{\"national_number\":\"387\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"波斯尼亚和黑塞哥维那"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"BE","dictKeyName":"比利时","dictDataRemark":"{\"national_number\":\"32\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"比利时"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"BG","dictKeyName":"保加利亚","dictDataRemark":"{\"national_number\":\"359\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"保加利亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"BY","dictKeyName":"白俄罗斯","dictDataRemark":"{\"national_number\":\"375\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"白俄罗斯"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"CA","dictKeyName":"加拿大","dictDataRemark":"{\"national_number\":\"1\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"加拿大"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"CH","dictKeyName":"瑞士","dictDataRemark":"{\"national_number\":\"41\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"瑞士"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"CY","dictKeyName":"塞浦路斯","dictDataRemark":"{\"national_number\":\"357\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"塞浦路斯"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"CZ","dictKeyName":"捷克共和国","dictDataRemark":"{\"national_number\":\"420\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"捷克共和国"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"DE","dictKeyName":"德国","dictDataRemark":"{\"national_number\":\"49\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"德国"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"DK","dictKeyName":"丹麦","dictDataRemark":"{\"national_number\":\"45\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"丹麦"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"AD","dictKeyName":"安道尔","dictDataRemark":"{\"national_number\":\"376\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"安道尔"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"ES","dictKeyName":"西班牙","dictDataRemark":"{\"national_number\":\"34\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"西班牙"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"FI","dictKeyName":"芬兰","dictDataRemark":"{\"national_number\":\"358\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"芬兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"FO","dictKeyName":"法罗群岛","dictDataRemark":"{\"national_number\":\"298\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"法罗群岛"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"FR","dictKeyName":"法国","dictDataRemark":"{\"national_number\":\"33\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"法国"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"GB","dictKeyName":"英国","dictDataRemark":"{\"national_number\":\"44\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"英国"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"GI","dictKeyName":"直布罗陀","dictDataRemark":"{\"national_number\":\"350\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"直布罗陀"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"GL","dictKeyName":"格陵兰","dictDataRemark":"{\"national_number\":\"299\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"格陵兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"GR","dictKeyName":"希腊","dictDataRemark":"{\"national_number\":\"30\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"希腊"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"HR","dictKeyName":"克罗地亚","dictDataRemark":"{\"national_number\":\"385\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"克罗地亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"HU","dictKeyName":"匈牙利","dictDataRemark":"{\"national_number\":\"36\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"匈牙利"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"IE","dictKeyName":"爱尔兰","dictDataRemark":"{\"national_number\":\"353\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"爱尔兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"IS","dictKeyName":"冰岛","dictDataRemark":"{\"national_number\":\"354\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"冰岛"},{"appSource":"WObird","dictType":"country_code","category":"DEV","categoryName":"中国","parentCategory":"root","dictKey":"CN","dictKeyName":"中国DEV","dictDataRemark":"{\"national_number\":\"86\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"中国_dev"}],"hostListVoList":[{"dataCenterCode":"AL","host":"http://47.107.113.31:18090/prod-api","wopetHost":null},{"dataCenterCode":"DEV","host":"http://192.168.100.3:8090/prod-api","wopetHost":null}]}}
INFO    2025-04-28 15:40:58,996d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:67 登录请求url: http://47.107.113.31:18090/prod-api/app/info/appUser/loginTest
INFO    2025-04-28 15:40:58,996d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:68 登录请求响应: {"code":470,"msg":"邮箱不能为空","data":null,"paramMsg":null,"errCode":10015}
INFO    2025-04-28 15:40:59,018d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:76 登录请求响应: http://47.107.113.31:18090/prod-api/token
INFO    2025-04-28 15:40:59,018d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:79 登录token: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
INFO    2025-04-28 15:40:59,018d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:90 登录初始化
INFO    2025-04-28 15:40:59,156d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:114 验证码: 0
INFO    2025-04-28 15:40:59,156d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:115 uuid: 0df70f43bb734dd4ae75b9dc3b99cb9a
INFO    2025-04-28 15:40:59,455d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:136 缓存中的token:Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJsb2dpblR5cGUiOiJsb2dpbiIsImxvZ2luSWQiOiJzeXNfdXNlcjoxNjU5MzkxNjY2MjU0NzA0NjQyIiwicm5TdHIiOiIyc1NycTloUTl5U1JQeTRvY1VmVlR4QWk5aXAxalJYQyIsInVzZXJJZCI6MTY1OTM5MTY2NjI1NDcwNDY0Mn0.uLBAf_0kzdl2Q6a3NjvR2v1G_R3iTqJi7z6aP9lYQGc
INFO    2025-04-28 15:40:59,456d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:29 data: {'url': 'http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-28 15:40:59,457d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:171 _dependent_type: False
INFO    2025-04-28 15:40:59,457d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:172 _dependence_case_datas: None
INFO    2025-04-28 15:40:59,458d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:429 ---------------处理多业务逻辑结束---------------
INFO    2025-04-28 15:40:59,458d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:430 ---------------开始请求---------------
INFO    2025-04-28 15:40:59,580d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:436 ---------------请求结束----------------
INFO    2025-04-28 15:40:59,590d:\PytestAutoApi\logs\info-2025-04-28.log:log_decorator.py:32 
======================================================
用例标题: 正常登录
请求路径: http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login
请求方式: POST
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Content-Length': '299', 'Content-Type': 'application/json'}
请求内容: {'customId': 'uqWpSNdirt7wYZUOLwkI/I6O4A3fAH1bTThuLXlIrHxi3D6yvTXKBOIO0aNgkH8rvczDclVfAhp6cHJoqLfH1xmxQFcQxVEN95CQuFYzkQodivGZLIeeqIZdV12gO9hKdPn6o3ZO3vTJVRnMHUKWqC0aRTtjz6xvPTQ2E+9QdM0=', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}
接口响应内容: {"code":200,"msg":"操作成功","data":{"countryCode":null,"token":null,"userInfo":null,"emqConnInfo":null,"wopetLoginType":3,"wopetLoginVo":{"wopetLoginType":3,"userUid":null,"firstRegRegion":null}},"paramMsg":null,"errCode":null}
接口响应时长: 120.53 ms
Http状态码: 200
=====================================================
ERROR   2025-04-28 15:40:59,723d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:209 用例总数: 1
ERROR   2025-04-28 15:40:59,724d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:210 异常用例数: 0
INFO    2025-04-28 15:40:59,724d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:213 用例执行时长: 0.95 s
INFO    2025-04-28 15:40:59,724d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:217 用例成功率: 0.00 %
INFO    2025-04-28 15:41:02,263d:\PytestAutoApi\logs\info-2025-04-28.log:main.py:36 Allure report generated, total cases: TestMetrics(passed=0, failed=1, skipped=0, total=1, broken=0, pass_rate=0.0, time=0.14)
INFO    2025-04-28 15:41:18,091d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:41:18,091d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:41:18,091d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:41:18,091d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:41:18,105d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:41:18,105d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:41:18,105d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:41:18,106d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:41:18,110d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:41:18,110d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'DELETE', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:41:18,111d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:41:18,111d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:41:18,115d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 15:41:18,115d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 15:41:18,116d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:41:18,117d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:41:18,117d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:41:18,119d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:41:18,119d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:41:18,119d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:41:18,123d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:41:18,126d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:41:18,126d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/list', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:41:18,127d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:41:18,128d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:41:18,128d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:41:18,128d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:41:18,128d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:41:18,133d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 15:41:18,134d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 15:41:18,134d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:41:18,134d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:41:18,134d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:41:18,138d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 15:41:18,138d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-28 15:41:18,138d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:41:18,139d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:41:18,139d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:41:18,142d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 15:41:18,143d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:41:18,143d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 15:41:18,143d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 15:41:18,146d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 15:41:18,147d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 15:41:18,147d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:41:18,147d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_query_bird_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:41:18,148d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_query_bird_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:41:18,150d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'json', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 15:41:18,151d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/app/info/appUser/pet/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:41:18,151d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:41:18,151d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 15:41:18,153d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 15:41:18,154d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 15:41:18,155d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 15:41:18,155d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 15:41:18,465d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:21 初始化conftest.py
INFO    2025-04-28 15:41:18,496d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:12 TestData: [{'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-28 15:41:18,560d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-28 15:41:18,560d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:163 指定运行顺序: []
INFO    2025-04-28 15:41:18,567d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:172 运行顺序: [<Function test_login[正常登录]>]
INFO    2025-04-28 15:41:18,624d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:39 app接口登录初始化
INFO    2025-04-28 15:41:18,675d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:54 AL_HOST: http://47.107.113.31:18090/prod-api
INFO    2025-04-28 15:41:18,675d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:55 DEV_HOST: http://192.168.100.3:8090/prod-api
INFO    2025-04-28 15:41:18,675d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:56 iot_token{"code":200,"msg":"操作成功","data":{"areaListVoList":[{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"NO","dictKeyName":"挪威","dictDataRemark":"{\"national_number\":\"47\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"挪威"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"JP","dictKeyName":"日本","dictDataRemark":"{\"national_number\":\"81\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"日本"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"LI","dictKeyName":"列支敦士登","dictDataRemark":"{\"national_number\":\"423\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"列支敦士登"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"LT","dictKeyName":"立陶宛","dictDataRemark":"{\"national_number\":\"370\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"立陶宛"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"LU","dictKeyName":"卢森堡","dictDataRemark":"{\"national_number\":\"352\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"卢森堡"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"LV","dictKeyName":"拉脱维亚","dictDataRemark":"{\"national_number\":\"371\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"拉脱维亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MC","dictKeyName":"摩纳哥","dictDataRemark":"{\"national_number\":\"377\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"摩纳哥"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MD","dictKeyName":"摩尔多瓦","dictDataRemark":"{\"national_number\":\"373\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"摩尔多瓦"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"ME","dictKeyName":"蒙特内哥罗","dictDataRemark":"{\"national_number\":\"382\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"蒙特内哥罗"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MK","dictKeyName":"马其顿","dictDataRemark":"{\"national_number\":\"389\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"马其顿"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MT","dictKeyName":"马耳他","dictDataRemark":"{\"national_number\":\"356\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"马耳他"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"MX","dictKeyName":"墨西哥","dictDataRemark":"{\"national_number\":\"52\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"墨西哥"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"NL","dictKeyName":"荷兰","dictDataRemark":"{\"national_number\":\"31\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"荷兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"IT","dictKeyName":"意大利","dictDataRemark":"{\"national_number\":\"39\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"意大利"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"PL","dictKeyName":"波兰","dictDataRemark":"{\"national_number\":\"48\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"波兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"PT","dictKeyName":"葡萄牙","dictDataRemark":"{\"national_number\":\"351\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"葡萄牙"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"RO","dictKeyName":"罗马尼亚","dictDataRemark":"{\"national_number\":\"40\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"罗马尼亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"RS","dictKeyName":"塞尔维亚","dictDataRemark":"{\"national_number\":\"381\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"塞尔维亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"SE","dictKeyName":"瑞典","dictDataRemark":"{\"national_number\":\"46\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"瑞典"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"SI","dictKeyName":"斯洛文尼亚","dictDataRemark":"{\"national_number\":\"386\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"斯洛文尼亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"SK","dictKeyName":"斯洛伐克","dictDataRemark":"{\"national_number\":\"421\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"斯洛伐克"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"SM","dictKeyName":"圣马力诺","dictDataRemark":"{\"national_number\":\"378\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"圣马力诺"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"UA","dictKeyName":"乌克兰","dictDataRemark":"{\"national_number\":\"380\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"乌克兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"US","dictKeyName":"美国","dictDataRemark":"{\"national_number\":\"1\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"美国test"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"VG","dictKeyName":"英属维京群岛","dictDataRemark":"{\"national_number\":\"1284\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"英属维京群岛"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"EE","dictKeyName":"爱沙尼亚","dictDataRemark":"{\"national_number\":\"372\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"爱沙尼亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"AL","dictKeyName":"阿尔巴尼亚","dictDataRemark":"{\"national_number\":\"355\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"阿尔巴尼亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"AT","dictKeyName":"奥地利","dictDataRemark":"{\"national_number\":\"43\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"奥地利"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"BA","dictKeyName":"波斯尼亚和黑塞哥维那","dictDataRemark":"{\"national_number\":\"387\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"波斯尼亚和黑塞哥维那"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"BE","dictKeyName":"比利时","dictDataRemark":"{\"national_number\":\"32\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"比利时"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"BG","dictKeyName":"保加利亚","dictDataRemark":"{\"national_number\":\"359\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"保加利亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"BY","dictKeyName":"白俄罗斯","dictDataRemark":"{\"national_number\":\"375\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"白俄罗斯"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"CA","dictKeyName":"加拿大","dictDataRemark":"{\"national_number\":\"1\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"加拿大"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"CH","dictKeyName":"瑞士","dictDataRemark":"{\"national_number\":\"41\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"瑞士"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"CY","dictKeyName":"塞浦路斯","dictDataRemark":"{\"national_number\":\"357\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"塞浦路斯"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"CZ","dictKeyName":"捷克共和国","dictDataRemark":"{\"national_number\":\"420\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"捷克共和国"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"DE","dictKeyName":"德国","dictDataRemark":"{\"national_number\":\"49\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"德国"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"DK","dictKeyName":"丹麦","dictDataRemark":"{\"national_number\":\"45\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"丹麦"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"AD","dictKeyName":"安道尔","dictDataRemark":"{\"national_number\":\"376\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"安道尔"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"ES","dictKeyName":"西班牙","dictDataRemark":"{\"national_number\":\"34\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"西班牙"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"FI","dictKeyName":"芬兰","dictDataRemark":"{\"national_number\":\"358\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"芬兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"FO","dictKeyName":"法罗群岛","dictDataRemark":"{\"national_number\":\"298\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"法罗群岛"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"FR","dictKeyName":"法国","dictDataRemark":"{\"national_number\":\"33\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"法国"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"GB","dictKeyName":"英国","dictDataRemark":"{\"national_number\":\"44\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"英国"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"GI","dictKeyName":"直布罗陀","dictDataRemark":"{\"national_number\":\"350\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"直布罗陀"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"GL","dictKeyName":"格陵兰","dictDataRemark":"{\"national_number\":\"299\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"格陵兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"GR","dictKeyName":"希腊","dictDataRemark":"{\"national_number\":\"30\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"希腊"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"HR","dictKeyName":"克罗地亚","dictDataRemark":"{\"national_number\":\"385\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"克罗地亚"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"HU","dictKeyName":"匈牙利","dictDataRemark":"{\"national_number\":\"36\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"匈牙利"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"IE","dictKeyName":"爱尔兰","dictDataRemark":"{\"national_number\":\"353\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"爱尔兰"},{"appSource":"WObird","dictType":"country_code","category":"AL","categoryName":"阿里测试","parentCategory":"root","dictKey":"IS","dictKeyName":"冰岛","dictDataRemark":"{\"national_number\":\"354\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"冰岛"},{"appSource":"WObird","dictType":"country_code","category":"DEV","categoryName":"中国","parentCategory":"root","dictKey":"CN","dictKeyName":"中国DEV","dictDataRemark":"{\"national_number\":\"86\"}","imageUrl":"","dictFlag":"0","sort":0,"language":"CN","languageValue":"中国_dev"}],"hostListVoList":[{"dataCenterCode":"AL","host":"http://47.107.113.31:18090/prod-api","wopetHost":null},{"dataCenterCode":"DEV","host":"http://192.168.100.3:8090/prod-api","wopetHost":null}]}}
INFO    2025-04-28 15:41:18,928d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:67 登录请求url: http://47.107.113.31:18090/prod-api/app/info/appUser/loginTest
INFO    2025-04-28 15:41:18,928d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:68 登录请求响应: {"code":200,"msg":"操作成功","data":{"countryCode":null,"token":"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1aWQiOiJ1dWIxOTdjNjY3MDZiZXEwcWMiLCJjdG0iOjE3NDU4MjYwODAxMTR9.xnZDhEFdhve9XiKpkA19-XlBI6A1DXO3yJaHkn8XAwk","userInfo":{"id":"1896803666129178625","userUid":"uub197c66706beq0qc","username":"834532523@qq.com","type":0,"regFrom":0,"regAppSource":"WObird","parentUserId":"1659391666254704642","countryCode":"US","phoneCode":null,"mobile":null,"email":"834532523@qq.com","headPic":"http://47.107.113.31:19000/headpic/headPic/AL/uub197c66706beq0qc.jpg?t=1745826080124","configKey":"headpic","nickName":"Djjdjdjdjj","timezoneId":"Asia/Shanghai","snsNickName":null,"tempUnit":null,"loginTime":null,"sex":null,"appLanguage":"CN","thirdPartyId":null},"emqConnInfo":{"protocol":"tcp","ip":"47.107.113.31","port":"17884","jwtToken":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDY0MzA4ODAsInVzZXJuYW1lIjoidXViMTk3YzY2NzA2YmVxMHFjIn0.eoe0Us5CixvVdfrv4pt9VOx5-nGVzajiWDTEy4o8JdQ","userUid":"uub197c66706beq0qc"},"wopetLoginType":null,"wopetLoginVo":null},"paramMsg":null,"errCode":null}
INFO    2025-04-28 15:41:18,957d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:76 登录请求响应: http://47.107.113.31:18090/prod-api/token
INFO    2025-04-28 15:41:18,958d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:79 登录token: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
INFO    2025-04-28 15:41:18,958d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:90 登录初始化
INFO    2025-04-28 15:41:19,105d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:114 验证码: 2
INFO    2025-04-28 15:41:19,106d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:115 uuid: 6d74a128dec743368f4a578ba41af59c
INFO    2025-04-28 15:41:19,349d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:136 缓存中的token:Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJsb2dpblR5cGUiOiJsb2dpbiIsImxvZ2luSWQiOiJzeXNfdXNlcjoxNjU5MzkxNjY2MjU0NzA0NjQyIiwicm5TdHIiOiJ5MWxvQ3hJanV6Z1VJajJzS0pQNE5FY0h2dExDZTh6MSIsInVzZXJJZCI6MTY1OTM5MTY2NjI1NDcwNDY0Mn0.5MTJnqpyj_Pnh9tJfPQHsPiOYRQbv0LWZKz0GGpxbcU
INFO    2025-04-28 15:41:19,351d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:29 data: {'url': 'http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-28 15:41:19,352d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:171 _dependent_type: False
INFO    2025-04-28 15:41:19,353d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:172 _dependence_case_datas: None
INFO    2025-04-28 15:41:19,353d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:429 ---------------处理多业务逻辑结束---------------
INFO    2025-04-28 15:41:19,353d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:430 ---------------开始请求---------------
INFO    2025-04-28 15:41:19,449d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:436 ---------------请求结束----------------
INFO    2025-04-28 15:41:19,457d:\PytestAutoApi\logs\info-2025-04-28.log:log_decorator.py:32 
======================================================
用例标题: 正常登录
请求路径: http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login
请求方式: POST
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Content-Length': '299', 'Content-Type': 'application/json'}
请求内容: {'customId': 'uqWpSNdirt7wYZUOLwkI/I6O4A3fAH1bTThuLXlIrHxi3D6yvTXKBOIO0aNgkH8rvczDclVfAhp6cHJoqLfH1xmxQFcQxVEN95CQuFYzkQodivGZLIeeqIZdV12gO9hKdPn6o3ZO3vTJVRnMHUKWqC0aRTtjz6xvPTQ2E+9QdM0=', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}
接口响应内容: {"code":200,"msg":"操作成功","data":{"countryCode":null,"token":null,"userInfo":null,"emqConnInfo":null,"wopetLoginType":3,"wopetLoginVo":{"wopetLoginType":3,"userUid":null,"firstRegRegion":null}},"paramMsg":null,"errCode":null}
接口响应时长: 94.65 ms
Http状态码: 200
=====================================================
ERROR   2025-04-28 15:41:19,585d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:209 用例总数: 1
ERROR   2025-04-28 15:41:19,585d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:210 异常用例数: 0
INFO    2025-04-28 15:41:19,586d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:213 用例执行时长: 1.10 s
INFO    2025-04-28 15:41:19,586d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:217 用例成功率: 0.00 %
INFO    2025-04-28 15:41:22,097d:\PytestAutoApi\logs\info-2025-04-28.log:main.py:36 Allure report generated, total cases: TestMetrics(passed=0, failed=1, skipped=0, total=1, broken=0, pass_rate=0.0, time=0.11)
INFO    2025-04-28 16:14:02,449d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 16:14:02,449d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:14:02,449d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:14:02,449d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:14:02,463d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 16:14:02,464d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:14:02,464d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 16:14:02,466d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 16:14:02,466d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 16:14:02,466d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'DELETE', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:14:02,466d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:14:02,466d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:14:02,472d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 16:14:02,473d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 16:14:02,473d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:14:02,473d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:14:02,474d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:14:02,479d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 16:14:02,481d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:14:02,481d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 16:14:02,481d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 16:14:02,481d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 16:14:02,481d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/list', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:14:02,481d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 16:14:02,481d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 16:14:02,488d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 16:14:02,489d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:14:02,489d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 16:14:02,490d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 16:14:02,491d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 16:14:02,491d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:14:02,491d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:14:02,491d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:14:02,491d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 16:14:02,491d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-28 16:14:02,491d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:14:02,491d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:14:02,497d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:14:02,499d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 16:14:02,499d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:14:02,500d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 16:14:02,501d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 16:14:02,511d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 16:14:02,511d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 16:14:02,511d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:14:02,512d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_query_bird_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:14:02,512d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_query_bird_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:14:02,516d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Authorization': '', 'Platform': 'apple'}, 'requestType': 'json', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.token', 'name': 'app_token'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 16:14:02,516d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/app/info/appUser/pet/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Authorization': '', 'Platform': 'apple'}, 'requestType': 'JSON', 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.token', 'name': 'app_token'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:14:02,517d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Authorization': '', 'Platform': 'apple'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.token', 'name': 'app_token'}], 'sleep': None}}]
INFO    2025-04-28 16:14:02,518d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Authorization': '', 'Platform': 'apple'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.token', 'name': 'app_token'}], 'sleep': None}}]
INFO    2025-04-28 16:14:02,520d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 16:14:02,521d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:14:02,521d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 16:14:02,522d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 16:14:02,910d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:21 初始化conftest.py
INFO    2025-04-28 16:14:02,932d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:12 TestData: [{'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Authorization': '', 'Platform': 'apple'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.token', 'name': 'app_token'}], 'sleep': None}]
INFO    2025-04-28 16:14:03,012d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Authorization': '', 'Platform': 'apple'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.token', 'name': 'app_token'}], 'sleep': None}]
INFO    2025-04-28 16:14:03,012d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:162 指定运行顺序: []
INFO    2025-04-28 16:14:03,012d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:171 运行顺序: [<Function test_login[正常登录]>]
INFO    2025-04-28 16:14:03,096d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:39 app接口登录初始化
INFO    2025-04-28 16:14:03,184d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:89 登录初始化
INFO    2025-04-28 16:14:03,376d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:113 验证码: 1
INFO    2025-04-28 16:14:03,377d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:114 uuid: 05895f78415949e88fbcca8c35a01d8a
INFO    2025-04-28 16:14:03,615d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:135 缓存中的token:Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJsb2dpblR5cGUiOiJsb2dpbiIsImxvZ2luSWQiOiJzeXNfdXNlcjoxNjU5MzkxNjY2MjU0NzA0NjQyIiwicm5TdHIiOiJxOVN6SXJ4MGxvMExlQzVaZ0t5UUtnZVdFOThPZXRGNiIsInVzZXJJZCI6MTY1OTM5MTY2NjI1NDcwNDY0Mn0.KXln0dyoo3X8oCW0XlZCM-sLPMavwRTxbMWM9JuAriI
INFO    2025-04-28 16:14:03,617d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:29 data: {'url': 'http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Authorization': '', 'Platform': 'apple'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.token', 'name': 'app_token'}], 'sleep': None}
INFO    2025-04-28 16:14:03,617d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:171 _dependent_type: False
INFO    2025-04-28 16:14:03,617d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:172 _dependence_case_datas: None
INFO    2025-04-28 16:14:03,617d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:429 ---------------处理多业务逻辑结束---------------
INFO    2025-04-28 16:14:03,617d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:430 ---------------开始请求---------------
INFO    2025-04-28 16:14:03,747d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:436 ---------------请求结束----------------
INFO    2025-04-28 16:14:03,756d:\PytestAutoApi\logs\info-2025-04-28.log:log_decorator.py:32 
======================================================
用例标题: 正常登录
请求路径: http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login
请求方式: POST
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Authorization': '', 'Platform': 'apple', 'Content-Length': '299', 'Content-Type': 'application/json'}
请求内容: {'customId': 'uqWpSNdirt7wYZUOLwkI/I6O4A3fAH1bTThuLXlIrHxi3D6yvTXKBOIO0aNgkH8rvczDclVfAhp6cHJoqLfH1xmxQFcQxVEN95CQuFYzkQodivGZLIeeqIZdV12gO9hKdPn6o3ZO3vTJVRnMHUKWqC0aRTtjz6xvPTQ2E+9QdM0=', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}
接口响应内容: {"code":200,"msg":"操作成功","data":{"countryCode":null,"token":null,"userInfo":null,"emqConnInfo":null,"wopetLoginType":3,"wopetLoginVo":{"wopetLoginType":3,"userUid":null,"firstRegRegion":null}},"paramMsg":null,"errCode":null}
接口响应时长: 116.24 ms
Http状态码: 200
=====================================================
ERROR   2025-04-28 16:14:03,767d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:208 用例总数: 1
ERROR   2025-04-28 16:14:03,767d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:209 异常用例数: 0
INFO    2025-04-28 16:14:03,789d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:212 用例执行时长: 0.84 s
INFO    2025-04-28 16:14:03,790d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:216 用例成功率: 100.00 %
INFO    2025-04-28 16:14:07,603d:\PytestAutoApi\logs\info-2025-04-28.log:main.py:36 Allure report generated, total cases: TestMetrics(passed=1, failed=0, skipped=0, total=1, broken=0, pass_rate=100.0, time=0.14)
INFO    2025-04-28 16:30:10,935d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 16:30:10,935d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:30:10,935d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:30:10,936d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:30:10,940d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 16:30:10,940d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:30:10,941d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 16:30:10,941d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 16:30:10,944d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 16:30:10,944d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'DELETE', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:30:10,945d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:30:10,945d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:30:10,949d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 16:30:10,949d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 16:30:10,950d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:30:10,950d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:30:10,952d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:30:10,958d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 16:30:10,958d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:30:10,959d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 16:30:10,959d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 16:30:10,963d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 16:30:10,963d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/list', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:30:10,964d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 16:30:10,964d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 16:30:10,967d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 16:30:10,967d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:30:10,967d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 16:30:10,969d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 16:30:10,970d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 16:30:10,970d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:30:10,971d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:30:10,971d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:30:10,973d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 16:30:10,973d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-28 16:30:10,973d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:30:10,974d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:30:10,974d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:30:10,977d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 16:30:10,977d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:30:10,977d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 16:30:10,977d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 16:30:10,982d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/appdevice/info/birdMoment/captureFavorites/$url_params{eventId}', 'method': 'PUT', 'detail': '收藏', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 16:30:10,982d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/appdevice/info/birdMoment/captureFavorites/$url_params{eventId}', 'detail': '收藏', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:30:10,982d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_query_bird_01': {'url': '${{host()}}/appdevice/info/birdMoment/captureFavorites/$url_params{eventId}', 'method': 'PUT', 'detail': '收藏', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:30:10,983d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_query_bird_01': {'url': '${{host()}}/appdevice/info/birdMoment/captureFavorites/$url_params{eventId}', 'method': 'PUT', 'detail': '收藏', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:30:10,986d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Authorization': '', 'Platform': 'apple'}, 'requestType': 'json', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.token', 'name': 'app_token'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 16:30:10,987d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/app/info/appUser/pet/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Authorization': '', 'Platform': 'apple'}, 'requestType': 'JSON', 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.token', 'name': 'app_token'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:30:10,987d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Authorization': '', 'Platform': 'apple'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.token', 'name': 'app_token'}], 'sleep': None}}]
INFO    2025-04-28 16:30:10,987d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Authorization': '', 'Platform': 'apple'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.token', 'name': 'app_token'}], 'sleep': None}}]
INFO    2025-04-28 16:30:10,990d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 16:30:10,990d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:30:10,991d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 16:30:10,991d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 16:30:11,306d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:21 初始化conftest.py
INFO    2025-04-28 16:30:11,338d:\PytestAutoApi\logs\info-2025-04-28.log:test_query_bird.py:12 TestData: [{'url': '${{host()}}/appdevice/info/birdMoment/captureFavorites/$url_params{eventId}', 'method': 'PUT', 'detail': '收藏', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-28 16:30:11,407d:\PytestAutoApi\logs\info-2025-04-28.log:test_query_bird.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/appdevice/info/birdMoment/captureFavorites/$url_params{eventId}', 'method': 'PUT', 'detail': '收藏', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-28 16:30:11,413d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:12 TestData: [{'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Authorization': '', 'Platform': 'apple'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.token', 'name': 'app_token'}], 'sleep': None}]
INFO    2025-04-28 16:30:11,414d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Authorization': '', 'Platform': 'apple'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.token', 'name': 'app_token'}], 'sleep': None}]
INFO    2025-04-28 16:30:11,416d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:162 指定运行顺序: []
INFO    2025-04-28 16:30:11,416d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:171 运行顺序: [<Function test_login[收藏]>, <Function test_login[正常登录]>]
INFO    2025-04-28 16:30:11,482d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:39 app接口登录初始化
INFO    2025-04-28 16:30:11,516d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:89 登录初始化
INFO    2025-04-28 16:30:11,656d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:113 验证码: 0
INFO    2025-04-28 16:30:11,657d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:114 uuid: 39b17a9ff47f4f04a3dbb84a78a6baa5
INFO    2025-04-28 16:30:11,924d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:135 缓存中的token:Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJsb2dpblR5cGUiOiJsb2dpbiIsImxvZ2luSWQiOiJzeXNfdXNlcjoxNjU5MzkxNjY2MjU0NzA0NjQyIiwicm5TdHIiOiJhV2JoTkU5NjhVM2hwd3paZjhkdGpRZ21qdHlNaDNCMyIsInVzZXJJZCI6MTY1OTM5MTY2NjI1NDcwNDY0Mn0.-ETRO7OFOXwdYvVIZkuuaW5DoHHlmsxGEAJm3K05QMk
INFO    2025-04-28 16:30:11,925d:\PytestAutoApi\logs\info-2025-04-28.log:test_query_bird.py:29 data: {'url': 'http://47.107.113.31:18090/prod-api/appdevice/info/birdMoment/captureFavorites/$url_params{eventId}', 'method': 'PUT', 'detail': '收藏', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-28 16:30:11,926d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:171 _dependent_type: False
INFO    2025-04-28 16:30:11,927d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:172 _dependence_case_datas: None
INFO    2025-04-28 16:30:11,927d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:429 ---------------处理多业务逻辑结束---------------
INFO    2025-04-28 16:30:11,927d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:430 ---------------开始请求---------------
INFO    2025-04-28 16:30:11,961d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:436 ---------------请求结束----------------
INFO    2025-04-28 16:30:12,002d:\PytestAutoApi\logs\info-2025-04-28.log:mysql_control.py:29 Connected Successfully to MySQL,conn:<pymysql.connections.Connection object at 0x0000023F4BD24E90>
INFO    2025-04-28 16:30:12,011d:\PytestAutoApi\logs\info-2025-04-28.log:mysql_control.py:55 Successfully query SQL: SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr", data: [{'app_banner_config_info_id': 1876199218766475266, 'create_by': 'test02', 'create_time': 1736155726507, 'update_by': 'test02', 'update_time': 1736155726507, 'banner_id': 'bid4s149fmba474eriqnr', 'banner_type': 'ad', 'banner_name': '2025-01-06 17:28:46', 'app_source': 'WOpet', 'parent_user_id': 1659391666254704642, 'banner_image_url': 'https://uspublic.s3.us-west-1.amazonaws.com/bannerImage/2025/01/06/gifpic_20250106092844347.gif', 'start_time': 1721232000000, 'end_time': 1723564800000, 'count_down_start_time': 1721232001000, 'count_down_end_time': 1723270303000, 'sort': 4, 'jump_page_type': 2, 'jump_page_path': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jump_page_share': 1, 'system_type_android': 1, 'android_version_id': 0, 'system_type_ios': 1, 'ios_version_id': 0, 'banner_scope': 1, 'put_on_shelves': 0, 'remark': '', 'is_delete': 1}]
INFO    2025-04-28 16:30:12,011d:\PytestAutoApi\logs\info-2025-04-28.log:mysql_control.py:37 MySQL connection closed successfully
INFO    2025-04-28 16:30:12,015d:\PytestAutoApi\logs\info-2025-04-28.log:log_decorator.py:32 
======================================================
用例标题: 收藏
请求路径: http://47.107.113.31:18090/prod-api/appdevice/info/birdMoment/captureFavorites/$url_params%7BeventId%7D
请求方式: PUT
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJsb2dpblR5cGUiOiJsb2dpbiIsImxvZ2luSWQiOiJzeXNfdXNlcjoxNjU5MzkxNjY2MjU0NzA0NjQyIiwicm5TdHIiOiJhV2JoTkU5NjhVM2hwd3paZjhkdGpRZ21qdHlNaDNCMyIsInVzZXJJZCI6MTY1OTM5MTY2NjI1NDcwNDY0Mn0.-ETRO7OFOXwdYvVIZkuuaW5DoHHlmsxGEAJm3K05QMk', 'Content-Length': '0'}
请求内容: None
接口响应内容: {"code":480,"msg":"The account is logged in on another device and has been logged out."}

接口响应时长: 31.09 ms
Http状态码: 200
=====================================================
INFO    2025-04-28 16:30:12,134d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:28 data: {'url': 'http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Authorization': '', 'Platform': 'apple'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.token', 'name': 'app_token'}], 'sleep': None}
INFO    2025-04-28 16:30:12,134d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:171 _dependent_type: False
INFO    2025-04-28 16:30:12,134d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:172 _dependence_case_datas: None
INFO    2025-04-28 16:30:12,135d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:429 ---------------处理多业务逻辑结束---------------
INFO    2025-04-28 16:30:12,135d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:430 ---------------开始请求---------------
INFO    2025-04-28 16:30:12,252d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:436 ---------------请求结束----------------
INFO    2025-04-28 16:30:12,257d:\PytestAutoApi\logs\info-2025-04-28.log:log_decorator.py:32 
======================================================
用例标题: 正常登录
请求路径: http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login
请求方式: POST
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Authorization': '', 'Platform': 'apple', 'Content-Length': '299', 'Content-Type': 'application/json'}
请求内容: {'customId': 'uqWpSNdirt7wYZUOLwkI/I6O4A3fAH1bTThuLXlIrHxi3D6yvTXKBOIO0aNgkH8rvczDclVfAhp6cHJoqLfH1xmxQFcQxVEN95CQuFYzkQodivGZLIeeqIZdV12gO9hKdPn6o3ZO3vTJVRnMHUKWqC0aRTtjz6xvPTQ2E+9QdM0=', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}
接口响应内容: {"code":200,"msg":"操作成功","data":{"countryCode":null,"token":null,"userInfo":null,"emqConnInfo":null,"wopetLoginType":3,"wopetLoginVo":{"wopetLoginType":3,"userUid":null,"firstRegRegion":null}},"paramMsg":null,"errCode":null}
接口响应时长: 116.22 ms
Http状态码: 200
=====================================================
ERROR   2025-04-28 16:30:12,276d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:208 用例总数: 2
ERROR   2025-04-28 16:30:12,276d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:209 异常用例数: 0
INFO    2025-04-28 16:30:12,276d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:212 用例执行时长: 0.96 s
INFO    2025-04-28 16:30:12,277d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:216 用例成功率: 50.00 %
INFO    2025-04-28 16:30:14,879d:\PytestAutoApi\logs\info-2025-04-28.log:main.py:36 Allure report generated, total cases: TestMetrics(passed=1, failed=1, skipped=0, total=2, broken=0, pass_rate=50.0, time=0.34)
INFO    2025-04-28 16:50:00,500d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 16:50:00,513d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:50:00,514d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:50:00,514d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:50:00,517d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 16:50:00,518d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:50:00,518d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 16:50:00,518d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 16:50:00,523d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 16:50:00,523d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'DELETE', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:50:00,524d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:50:00,524d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:50:00,528d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 16:50:00,528d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 16:50:00,528d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:50:00,529d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:50:00,529d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:50:00,534d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 16:50:00,534d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:50:00,535d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 16:50:00,535d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 16:50:00,538d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 16:50:00,538d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/list', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:50:00,538d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 16:50:00,539d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 16:50:00,543d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 16:50:00,543d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:50:00,544d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 16:50:00,544d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 16:50:00,546d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 16:50:00,547d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:50:00,547d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:50:00,547d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:50:00,550d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 16:50:00,550d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-28 16:50:00,550d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:50:00,551d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:50:00,551d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:50:00,554d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 16:50:00,554d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:50:00,554d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 16:50:00,554d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 16:50:00,582d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/appdevice/info/birdMoment/captureFavorites/$url_params{eventId}', 'method': 'PUT', 'detail': '收藏', 'headers': {'App-Source': 'WObird', 'Content-Language': 'zh_CN', 'Authorization': '$cache{token}', 'Platform': 'apple'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 16:50:00,582d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/appdevice/info/birdMoment/captureFavorites/$url_params{eventId}', 'detail': '收藏', 'headers': {'App-Source': 'WObird', 'Content-Language': 'zh_CN', 'Authorization': '$cache{token}', 'Platform': 'apple'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:50:00,583d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_query_bird_01': {'url': '${{host()}}/appdevice/info/birdMoment/captureFavorites/$url_params{eventId}', 'method': 'PUT', 'detail': '收藏', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'App-Source': 'WObird', 'Content-Language': 'zh_CN', 'Authorization': '$cache{token}', 'Platform': 'apple'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:50:00,583d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_query_bird_01': {'url': '${{host()}}/appdevice/info/birdMoment/captureFavorites/$url_params{eventId}', 'method': 'PUT', 'detail': '收藏', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'App-Source': 'WObird', 'Content-Language': 'zh_CN', 'Authorization': '$cache{token}', 'Platform': 'apple'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:50:00,591d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Authorization': '', 'Platform': 'apple'}, 'requestType': 'json', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.token', 'name': 'app_token'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 16:50:00,592d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/app/info/appUser/pet/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Authorization': '', 'Platform': 'apple'}, 'requestType': 'JSON', 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.token', 'name': 'app_token'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:50:00,592d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Authorization': '', 'Platform': 'apple'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.token', 'name': 'app_token'}], 'sleep': None}}]
INFO    2025-04-28 16:50:00,592d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Authorization': '', 'Platform': 'apple'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.token', 'name': 'app_token'}], 'sleep': None}}]
INFO    2025-04-28 16:50:00,604d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 16:50:00,604d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:50:00,605d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 16:50:00,605d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 16:50:01,065d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:21 初始化conftest.py
INFO    2025-04-28 16:50:01,136d:\PytestAutoApi\logs\info-2025-04-28.log:test_query_bird.py:12 TestData: [{'url': '${{host()}}/appdevice/info/birdMoment/captureFavorites/$url_params{eventId}', 'method': 'PUT', 'detail': '收藏', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'App-Source': 'WObird', 'Content-Language': 'zh_CN', 'Authorization': '$cache{token}', 'Platform': 'apple'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-28 16:50:01,214d:\PytestAutoApi\logs\info-2025-04-28.log:test_query_bird.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/appdevice/info/birdMoment/captureFavorites/$url_params{eventId}', 'method': 'PUT', 'detail': '收藏', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'App-Source': 'WObird', 'Content-Language': 'zh_CN', 'Authorization': '$cache{token}', 'Platform': 'apple'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-28 16:50:01,223d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:12 TestData: [{'url': '${{host()}}/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Authorization': '', 'Platform': 'apple'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.token', 'name': 'app_token'}], 'sleep': None}]
INFO    2025-04-28 16:50:01,224d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Authorization': '', 'Platform': 'apple'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.token', 'name': 'app_token'}], 'sleep': None}]
INFO    2025-04-28 16:50:01,225d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:162 指定运行顺序: []
INFO    2025-04-28 16:50:01,225d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:171 运行顺序: [<Function test_login[收藏]>, <Function test_login[正常登录]>]
INFO    2025-04-28 16:50:01,289d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:39 app接口登录初始化
INFO    2025-04-28 16:50:01,384d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:89 登录初始化
INFO    2025-04-28 16:50:01,543d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:113 验证码: 2
INFO    2025-04-28 16:50:01,543d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:114 uuid: 35d2799f096d427eb34d4901bbd72dfa
INFO    2025-04-28 16:50:01,787d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:135 缓存中的token:Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJsb2dpblR5cGUiOiJsb2dpbiIsImxvZ2luSWQiOiJzeXNfdXNlcjoxNjU5MzkxNjY2MjU0NzA0NjQyIiwicm5TdHIiOiJ4akNrTzJNQ05hY1VOSnhjUVhKYTBsc1VRbDVhNGRreSIsInVzZXJJZCI6MTY1OTM5MTY2NjI1NDcwNDY0Mn0.0z3R-lXqCa9sCdcsEqOZLOujITX7UJoxJceJ7dBxhh0
INFO    2025-04-28 16:50:01,791d:\PytestAutoApi\logs\info-2025-04-28.log:test_query_bird.py:29 data: {'url': 'http://47.107.113.31:18090/prod-api/appdevice/info/birdMoment/captureFavorites/$url_params{eventId}', 'method': 'PUT', 'detail': '收藏', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'App-Source': 'WObird', 'Content-Language': 'zh_CN', 'Authorization': '$cache{token}', 'Platform': 'apple'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-28 16:50:01,796d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:171 _dependent_type: False
INFO    2025-04-28 16:50:01,797d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:172 _dependence_case_datas: None
INFO    2025-04-28 16:50:01,797d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:429 ---------------处理多业务逻辑结束---------------
INFO    2025-04-28 16:50:01,797d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:430 ---------------开始请求---------------
INFO    2025-04-28 16:50:01,831d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:436 ---------------请求结束----------------
INFO    2025-04-28 16:50:01,874d:\PytestAutoApi\logs\info-2025-04-28.log:mysql_control.py:29 Connected Successfully to MySQL,conn:<pymysql.connections.Connection object at 0x000002A1C63F0B10>
INFO    2025-04-28 16:50:01,884d:\PytestAutoApi\logs\info-2025-04-28.log:mysql_control.py:55 Successfully query SQL: SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr", data: [{'app_banner_config_info_id': 1876199218766475266, 'create_by': 'test02', 'create_time': 1736155726507, 'update_by': 'test02', 'update_time': 1736155726507, 'banner_id': 'bid4s149fmba474eriqnr', 'banner_type': 'ad', 'banner_name': '2025-01-06 17:28:46', 'app_source': 'WOpet', 'parent_user_id': 1659391666254704642, 'banner_image_url': 'https://uspublic.s3.us-west-1.amazonaws.com/bannerImage/2025/01/06/gifpic_20250106092844347.gif', 'start_time': 1721232000000, 'end_time': 1723564800000, 'count_down_start_time': 1721232001000, 'count_down_end_time': 1723270303000, 'sort': 4, 'jump_page_type': 2, 'jump_page_path': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jump_page_share': 1, 'system_type_android': 1, 'android_version_id': 0, 'system_type_ios': 1, 'ios_version_id': 0, 'banner_scope': 1, 'put_on_shelves': 0, 'remark': '', 'is_delete': 1}]
INFO    2025-04-28 16:50:01,885d:\PytestAutoApi\logs\info-2025-04-28.log:mysql_control.py:37 MySQL connection closed successfully
INFO    2025-04-28 16:50:01,890d:\PytestAutoApi\logs\info-2025-04-28.log:log_decorator.py:32 
======================================================
用例标题: 收藏
请求路径: http://47.107.113.31:18090/prod-api/appdevice/info/birdMoment/captureFavorites/$url_params%7BeventId%7D
请求方式: PUT
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'App-Source': 'WObird', 'Content-Language': 'zh_CN', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJsb2dpblR5cGUiOiJsb2dpbiIsImxvZ2luSWQiOiJzeXNfdXNlcjoxNjU5MzkxNjY2MjU0NzA0NjQyIiwicm5TdHIiOiJ4akNrTzJNQ05hY1VOSnhjUVhKYTBsc1VRbDVhNGRreSIsInVzZXJJZCI6MTY1OTM5MTY2NjI1NDcwNDY0Mn0.0z3R-lXqCa9sCdcsEqOZLOujITX7UJoxJceJ7dBxhh0', 'Platform': 'apple', 'Content-Length': '0'}
请求内容: None
接口响应内容: {"code":480,"msg":"The account is logged in on another device and has been logged out."}

接口响应时长: 32.63 ms
Http状态码: 200
=====================================================
INFO    2025-04-28 16:50:02,021d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:28 data: {'url': 'http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Authorization': '', 'Platform': 'apple'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.token', 'name': 'app_token'}], 'sleep': None}
INFO    2025-04-28 16:50:02,022d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:171 _dependent_type: False
INFO    2025-04-28 16:50:02,022d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:172 _dependence_case_datas: None
INFO    2025-04-28 16:50:02,022d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:429 ---------------处理多业务逻辑结束---------------
INFO    2025-04-28 16:50:02,022d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:430 ---------------开始请求---------------
INFO    2025-04-28 16:50:02,135d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:436 ---------------请求结束----------------
INFO    2025-04-28 16:50:02,137d:\PytestAutoApi\logs\info-2025-04-28.log:log_decorator.py:32 
======================================================
用例标题: 正常登录
请求路径: http://47.107.113.31:18090/prod-api/app/info/appUser/pet/login
请求方式: POST
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Authorization': '', 'Platform': 'apple', 'Content-Length': '299', 'Content-Type': 'application/json'}
请求内容: {'customId': 'uqWpSNdirt7wYZUOLwkI/I6O4A3fAH1bTThuLXlIrHxi3D6yvTXKBOIO0aNgkH8rvczDclVfAhp6cHJoqLfH1xmxQFcQxVEN95CQuFYzkQodivGZLIeeqIZdV12gO9hKdPn6o3ZO3vTJVRnMHUKWqC0aRTtjz6xvPTQ2E+9QdM0=', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}
接口响应内容: {"code":200,"msg":"操作成功","data":{"countryCode":null,"token":null,"userInfo":null,"emqConnInfo":null,"wopetLoginType":3,"wopetLoginVo":{"wopetLoginType":3,"userUid":null,"firstRegRegion":null}},"paramMsg":null,"errCode":null}
接口响应时长: 112.19 ms
Http状态码: 200
=====================================================
ERROR   2025-04-28 16:50:02,149d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:208 用例总数: 2
ERROR   2025-04-28 16:50:02,149d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:209 异常用例数: 0
INFO    2025-04-28 16:50:02,166d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:212 用例执行时长: 1.05 s
INFO    2025-04-28 16:50:02,166d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:216 用例成功率: 50.00 %
INFO    2025-04-28 16:50:05,906d:\PytestAutoApi\logs\info-2025-04-28.log:main.py:36 Allure report generated, total cases: TestMetrics(passed=1, failed=1, skipped=0, total=2, broken=0, pass_rate=50.0, time=0.35)
INFO    2025-04-28 16:54:03,209d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 16:54:03,209d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:54:03,211d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:54:03,212d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:54:03,215d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 16:54:03,215d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:54:03,216d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 16:54:03,216d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 16:54:03,219d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 16:54:03,219d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'DELETE', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:54:03,219d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:54:03,220d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:54:03,223d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 16:54:03,224d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 16:54:03,224d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:54:03,224d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:54:03,225d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:54:03,228d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 16:54:03,229d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:54:03,229d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 16:54:03,230d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 16:54:03,233d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 16:54:03,233d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/list', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:54:03,233d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 16:54:03,233d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 16:54:03,237d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 16:54:03,237d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:54:03,238d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 16:54:03,238d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 16:54:03,240d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 16:54:03,240d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:54:03,241d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:54:03,241d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:54:03,243d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 16:54:03,243d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-28 16:54:03,244d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:54:03,244d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:54:03,244d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:54:03,247d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 16:54:03,247d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:54:03,247d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 16:54:03,248d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 16:54:03,251d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/appdevice/info/birdMoment/captureFavorites/$url_params{eventId}', 'method': 'PUT', 'detail': '收藏', 'headers': {'App-Source': 'WObird', 'Content-Language': 'zh_CN', 'Authorization': '$cache{token}', 'Platform': 'apple'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 16:54:03,251d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/appdevice/info/birdMoment/captureFavorites/$url_params{eventId}', 'detail': '收藏', 'headers': {'App-Source': 'WObird', 'Content-Language': 'zh_CN', 'Authorization': '$cache{token}', 'Platform': 'apple'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:54:03,252d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_query_bird_01': {'url': '${{host()}}/appdevice/info/birdMoment/captureFavorites/$url_params{eventId}', 'method': 'PUT', 'detail': '收藏', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'App-Source': 'WObird', 'Content-Language': 'zh_CN', 'Authorization': '$cache{token}', 'Platform': 'apple'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:54:03,252d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_query_bird_01': {'url': '${{host()}}/appdevice/info/birdMoment/captureFavorites/$url_params{eventId}', 'method': 'PUT', 'detail': '收藏', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'App-Source': 'WObird', 'Content-Language': 'zh_CN', 'Authorization': '$cache{token}', 'Platform': 'apple'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:54:03,262d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/app/info/appUser/loginTest', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Authorization': '', 'Platform': 'apple'}, 'requestType': 'json', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.token', 'name': 'app_token'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 16:54:03,263d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/app/info/appUser/loginTest', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Authorization': '', 'Platform': 'apple'}, 'requestType': 'JSON', 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.token', 'name': 'app_token'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:54:03,263d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/loginTest', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Authorization': '', 'Platform': 'apple'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.token', 'name': 'app_token'}], 'sleep': None}}]
INFO    2025-04-28 16:54:03,264d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/loginTest', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Authorization': '', 'Platform': 'apple'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.token', 'name': 'app_token'}], 'sleep': None}}]
INFO    2025-04-28 16:54:03,266d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 16:54:03,267d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:54:03,268d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 16:54:03,268d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 16:54:03,589d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:21 初始化conftest.py
INFO    2025-04-28 16:54:03,611d:\PytestAutoApi\logs\info-2025-04-28.log:test_query_bird.py:12 TestData: [{'url': '${{host()}}/appdevice/info/birdMoment/captureFavorites/$url_params{eventId}', 'method': 'PUT', 'detail': '收藏', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'App-Source': 'WObird', 'Content-Language': 'zh_CN', 'Authorization': '$cache{token}', 'Platform': 'apple'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-28 16:54:03,680d:\PytestAutoApi\logs\info-2025-04-28.log:test_query_bird.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/appdevice/info/birdMoment/captureFavorites/$url_params{eventId}', 'method': 'PUT', 'detail': '收藏', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'App-Source': 'WObird', 'Content-Language': 'zh_CN', 'Authorization': '$cache{token}', 'Platform': 'apple'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-28 16:54:03,683d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:12 TestData: [{'url': '${{host()}}/app/info/appUser/loginTest', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Authorization': '', 'Platform': 'apple'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.token', 'name': 'app_token'}], 'sleep': None}]
INFO    2025-04-28 16:54:03,685d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/app/info/appUser/loginTest', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Authorization': '', 'Platform': 'apple'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.token', 'name': 'app_token'}], 'sleep': None}]
INFO    2025-04-28 16:54:03,686d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:162 指定运行顺序: []
INFO    2025-04-28 16:54:03,686d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:171 运行顺序: [<Function test_login[收藏]>, <Function test_login[正常登录]>]
INFO    2025-04-28 16:54:03,750d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:39 app接口登录初始化
INFO    2025-04-28 16:54:03,781d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:89 登录初始化
INFO    2025-04-28 16:54:03,928d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:113 验证码: 36
INFO    2025-04-28 16:54:03,928d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:114 uuid: eeae0dcf2e1d4917b91b05027789faa8
INFO    2025-04-28 16:54:04,183d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:135 缓存中的token:Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJsb2dpblR5cGUiOiJsb2dpbiIsImxvZ2luSWQiOiJzeXNfdXNlcjoxNjU5MzkxNjY2MjU0NzA0NjQyIiwicm5TdHIiOiJnTTF5MlZFMGU0bG1Ucjg4MlM3R3RjTmxBeXVoRGk2MyIsInVzZXJJZCI6MTY1OTM5MTY2NjI1NDcwNDY0Mn0.24r1IdKxE8SG-0iEPC2sQQ-IaCjrw0G47QMS_-ArE28
INFO    2025-04-28 16:54:04,184d:\PytestAutoApi\logs\info-2025-04-28.log:test_query_bird.py:29 data: {'url': 'http://47.107.113.31:18090/prod-api/appdevice/info/birdMoment/captureFavorites/$url_params{eventId}', 'method': 'PUT', 'detail': '收藏', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'App-Source': 'WObird', 'Content-Language': 'zh_CN', 'Authorization': '$cache{token}', 'Platform': 'apple'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-28 16:54:04,185d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:171 _dependent_type: False
INFO    2025-04-28 16:54:04,185d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:172 _dependence_case_datas: None
INFO    2025-04-28 16:54:04,185d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:429 ---------------处理多业务逻辑结束---------------
INFO    2025-04-28 16:54:04,185d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:430 ---------------开始请求---------------
INFO    2025-04-28 16:54:04,214d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:436 ---------------请求结束----------------
INFO    2025-04-28 16:54:04,258d:\PytestAutoApi\logs\info-2025-04-28.log:mysql_control.py:29 Connected Successfully to MySQL,conn:<pymysql.connections.Connection object at 0x0000019AB004DE50>
INFO    2025-04-28 16:54:04,263d:\PytestAutoApi\logs\info-2025-04-28.log:mysql_control.py:55 Successfully query SQL: SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr", data: [{'app_banner_config_info_id': 1876199218766475266, 'create_by': 'test02', 'create_time': 1736155726507, 'update_by': 'test02', 'update_time': 1736155726507, 'banner_id': 'bid4s149fmba474eriqnr', 'banner_type': 'ad', 'banner_name': '2025-01-06 17:28:46', 'app_source': 'WOpet', 'parent_user_id': 1659391666254704642, 'banner_image_url': 'https://uspublic.s3.us-west-1.amazonaws.com/bannerImage/2025/01/06/gifpic_20250106092844347.gif', 'start_time': 1721232000000, 'end_time': 1723564800000, 'count_down_start_time': 1721232001000, 'count_down_end_time': 1723270303000, 'sort': 4, 'jump_page_type': 2, 'jump_page_path': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jump_page_share': 1, 'system_type_android': 1, 'android_version_id': 0, 'system_type_ios': 1, 'ios_version_id': 0, 'banner_scope': 1, 'put_on_shelves': 0, 'remark': '', 'is_delete': 1}]
INFO    2025-04-28 16:54:04,264d:\PytestAutoApi\logs\info-2025-04-28.log:mysql_control.py:37 MySQL connection closed successfully
INFO    2025-04-28 16:54:04,267d:\PytestAutoApi\logs\info-2025-04-28.log:log_decorator.py:32 
======================================================
用例标题: 收藏
请求路径: http://47.107.113.31:18090/prod-api/appdevice/info/birdMoment/captureFavorites/$url_params%7BeventId%7D
请求方式: PUT
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'App-Source': 'WObird', 'Content-Language': 'zh_CN', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJsb2dpblR5cGUiOiJsb2dpbiIsImxvZ2luSWQiOiJzeXNfdXNlcjoxNjU5MzkxNjY2MjU0NzA0NjQyIiwicm5TdHIiOiJnTTF5MlZFMGU0bG1Ucjg4MlM3R3RjTmxBeXVoRGk2MyIsInVzZXJJZCI6MTY1OTM5MTY2NjI1NDcwNDY0Mn0.24r1IdKxE8SG-0iEPC2sQQ-IaCjrw0G47QMS_-ArE28', 'Platform': 'apple', 'Content-Length': '0'}
请求内容: None
接口响应内容: {"code":480,"msg":"The account is logged in on another device and has been logged out."}

接口响应时长: 27.13 ms
Http状态码: 200
=====================================================
INFO    2025-04-28 16:54:04,388d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:28 data: {'url': 'http://47.107.113.31:18090/prod-api/app/info/appUser/loginTest', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Authorization': '', 'Platform': 'apple'}, 'requestType': 'JSON', 'is_run': None, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.token', 'name': 'app_token'}], 'sleep': None}
INFO    2025-04-28 16:54:04,388d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:171 _dependent_type: False
INFO    2025-04-28 16:54:04,388d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:172 _dependence_case_datas: None
INFO    2025-04-28 16:54:04,388d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:429 ---------------处理多业务逻辑结束---------------
INFO    2025-04-28 16:54:04,389d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:430 ---------------开始请求---------------
INFO    2025-04-28 16:54:04,552d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:436 ---------------请求结束----------------
ERROR   2025-04-28 16:54:04,623d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:208 用例总数: 2
ERROR   2025-04-28 16:54:04,623d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:209 异常用例数: 0
INFO    2025-04-28 16:54:04,623d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:212 用例执行时长: 1.02 s
INFO    2025-04-28 16:54:04,624d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:216 用例成功率: 0.00 %
INFO    2025-04-28 16:54:07,080d:\PytestAutoApi\logs\info-2025-04-28.log:main.py:36 Allure report generated, total cases: TestMetrics(passed=0, failed=1, skipped=0, total=2, broken=1, pass_rate=0.0, time=0.4)
INFO    2025-04-28 16:59:22,824d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 16:59:22,824d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:59:22,825d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:59:22,825d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:59:22,829d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 16:59:22,829d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:59:22,829d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 16:59:22,830d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 16:59:22,833d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 16:59:22,833d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'DELETE', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:59:22,834d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:59:22,834d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:59:22,838d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 16:59:22,839d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 16:59:22,839d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:59:22,839d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:59:22,840d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:59:22,845d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 16:59:22,846d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:59:22,847d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 16:59:22,847d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 16:59:22,850d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 16:59:22,851d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/list', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:59:22,852d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 16:59:22,852d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 16:59:22,856d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 16:59:22,857d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:59:22,857d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 16:59:22,857d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 16:59:22,860d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 16:59:22,860d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:59:22,860d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:59:22,861d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:59:22,863d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 16:59:22,863d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-28 16:59:22,863d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:59:22,864d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:59:22,864d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:59:22,867d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 16:59:22,867d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:59:22,868d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 16:59:22,868d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 16:59:22,878d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/appdevice/info/birdMoment/captureFavorites/$url_params{eventId}', 'method': 'PUT', 'detail': '收藏', 'headers': {'App-Source': 'WObird', 'Content-Language': 'zh_CN', 'Authorization': '$cache{app_token}', 'Platform': 'apple'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 16:59:22,878d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/appdevice/info/birdMoment/captureFavorites/$url_params{eventId}', 'detail': '收藏', 'headers': {'App-Source': 'WObird', 'Content-Language': 'zh_CN', 'Authorization': '$cache{app_token}', 'Platform': 'apple'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:59:22,878d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_query_bird_01': {'url': '${{host()}}/appdevice/info/birdMoment/captureFavorites/$url_params{eventId}', 'method': 'PUT', 'detail': '收藏', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'App-Source': 'WObird', 'Content-Language': 'zh_CN', 'Authorization': '$cache{app_token}', 'Platform': 'apple'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:59:22,879d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_query_bird_01': {'url': '${{host()}}/appdevice/info/birdMoment/captureFavorites/$url_params{eventId}', 'method': 'PUT', 'detail': '收藏', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'App-Source': 'WObird', 'Content-Language': 'zh_CN', 'Authorization': '$cache{app_token}', 'Platform': 'apple'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 16:59:22,882d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/app/info/appUser/loginTest', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Authorization': '', 'Platform': 'apple'}, 'requestType': 'json', 'is_run': False, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.token', 'name': 'app_token'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 16:59:22,882d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': False, 'url': '${{host()}}/app/info/appUser/loginTest', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Authorization': '', 'Platform': 'apple'}, 'requestType': 'JSON', 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.token', 'name': 'app_token'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:59:22,883d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/loginTest', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Authorization': '', 'Platform': 'apple'}, 'requestType': 'JSON', 'is_run': False, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.token', 'name': 'app_token'}], 'sleep': None}}]
INFO    2025-04-28 16:59:22,883d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/loginTest', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Authorization': '', 'Platform': 'apple'}, 'requestType': 'JSON', 'is_run': False, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.token', 'name': 'app_token'}], 'sleep': None}}]
INFO    2025-04-28 16:59:22,886d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 16:59:22,886d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 16:59:22,886d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 16:59:22,887d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 16:59:23,236d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:21 初始化conftest.py
INFO    2025-04-28 16:59:23,260d:\PytestAutoApi\logs\info-2025-04-28.log:test_query_bird.py:12 TestData: [{'url': '${{host()}}/appdevice/info/birdMoment/captureFavorites/$url_params{eventId}', 'method': 'PUT', 'detail': '收藏', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'App-Source': 'WObird', 'Content-Language': 'zh_CN', 'Authorization': '$cache{app_token}', 'Platform': 'apple'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-28 16:59:23,329d:\PytestAutoApi\logs\info-2025-04-28.log:test_query_bird.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/appdevice/info/birdMoment/captureFavorites/$url_params{eventId}', 'method': 'PUT', 'detail': '收藏', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'App-Source': 'WObird', 'Content-Language': 'zh_CN', 'Authorization': '$cache{app_token}', 'Platform': 'apple'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-28 16:59:23,333d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:12 TestData: [{'url': '${{host()}}/app/info/appUser/loginTest', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Authorization': '', 'Platform': 'apple'}, 'requestType': 'JSON', 'is_run': False, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.token', 'name': 'app_token'}], 'sleep': None}]
INFO    2025-04-28 16:59:23,334d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/app/info/appUser/loginTest', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Authorization': '', 'Platform': 'apple'}, 'requestType': 'JSON', 'is_run': False, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.token', 'name': 'app_token'}], 'sleep': None}]
INFO    2025-04-28 16:59:23,335d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:149 指定运行顺序: []
INFO    2025-04-28 16:59:23,335d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:158 运行顺序: [<Function test_login[收藏]>, <Function test_login[正常登录]>]
INFO    2025-04-28 16:59:23,400d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:39 app接口登录初始化
INFO    2025-04-28 16:59:23,440d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:54 AL_HOST: http://47.107.113.31:18090/prod-api
INFO    2025-04-28 16:59:23,440d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:55 DEV_HOST: http://192.168.100.3:8090/prod-api
INFO    2025-04-28 16:59:23,672d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:76 登录初始化
INFO    2025-04-28 16:59:23,821d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:100 验证码: 11
INFO    2025-04-28 16:59:23,822d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:101 uuid: 465ddfc253cf49f5b0cc6dedf413f5d8
INFO    2025-04-28 16:59:24,065d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:122 缓存中的token:Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJsb2dpblR5cGUiOiJsb2dpbiIsImxvZ2luSWQiOiJzeXNfdXNlcjoxNjU5MzkxNjY2MjU0NzA0NjQyIiwicm5TdHIiOiJZbVBEVFdxeU5yYzdnNlpkNEZkeXd3V2lJMFQ5ZFBpSCIsInVzZXJJZCI6MTY1OTM5MTY2NjI1NDcwNDY0Mn0.z15OnZK5ya18ZMiGiJ_RaZB1_ULENSP6dX20lkcRs6Y
INFO    2025-04-28 16:59:24,066d:\PytestAutoApi\logs\info-2025-04-28.log:test_query_bird.py:29 data: {'url': 'http://47.107.113.31:18090/prod-api/appdevice/info/birdMoment/captureFavorites/$url_params{eventId}', 'method': 'PUT', 'detail': '收藏', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'App-Source': 'WObird', 'Content-Language': 'zh_CN', 'Authorization': '$cache{app_token}', 'Platform': 'apple'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-28 16:59:24,067d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:171 _dependent_type: False
INFO    2025-04-28 16:59:24,067d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:172 _dependence_case_datas: None
INFO    2025-04-28 16:59:24,067d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:429 ---------------处理多业务逻辑结束---------------
INFO    2025-04-28 16:59:24,068d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:430 ---------------开始请求---------------
INFO    2025-04-28 16:59:24,203d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:436 ---------------请求结束----------------
INFO    2025-04-28 16:59:24,242d:\PytestAutoApi\logs\info-2025-04-28.log:mysql_control.py:29 Connected Successfully to MySQL,conn:<pymysql.connections.Connection object at 0x000001D7F2CA7990>
INFO    2025-04-28 16:59:24,250d:\PytestAutoApi\logs\info-2025-04-28.log:mysql_control.py:55 Successfully query SQL: SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr", data: [{'app_banner_config_info_id': 1876199218766475266, 'create_by': 'test02', 'create_time': 1736155726507, 'update_by': 'test02', 'update_time': 1736155726507, 'banner_id': 'bid4s149fmba474eriqnr', 'banner_type': 'ad', 'banner_name': '2025-01-06 17:28:46', 'app_source': 'WOpet', 'parent_user_id': 1659391666254704642, 'banner_image_url': 'https://uspublic.s3.us-west-1.amazonaws.com/bannerImage/2025/01/06/gifpic_20250106092844347.gif', 'start_time': 1721232000000, 'end_time': 1723564800000, 'count_down_start_time': 1721232001000, 'count_down_end_time': 1723270303000, 'sort': 4, 'jump_page_type': 2, 'jump_page_path': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jump_page_share': 1, 'system_type_android': 1, 'android_version_id': 0, 'system_type_ios': 1, 'ios_version_id': 0, 'banner_scope': 1, 'put_on_shelves': 0, 'remark': '', 'is_delete': 1}]
INFO    2025-04-28 16:59:24,251d:\PytestAutoApi\logs\info-2025-04-28.log:mysql_control.py:37 MySQL connection closed successfully
INFO    2025-04-28 16:59:24,255d:\PytestAutoApi\logs\info-2025-04-28.log:log_decorator.py:32 
======================================================
用例标题: 收藏
请求路径: http://47.107.113.31:18090/prod-api/appdevice/info/birdMoment/captureFavorites/$url_params%7BeventId%7D
请求方式: PUT
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'App-Source': 'WObird', 'Content-Language': 'zh_CN', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1aWQiOiJ1dWIxOTdjNjY3MDZiZXEwcWMiLCJjdG0iOjE3NDU4MzA3NjUwMTh9.-kmDJqyKegtjIbuVb6nUgDtv9EoVHzOO3enNmAQW55U', 'Platform': 'apple', 'Content-Length': '0'}
请求内容: None
接口响应内容: {"code":200,"msg":"操作成功","data":null,"paramMsg":null,"errCode":null}
接口响应时长: 133.11 ms
Http状态码: 200
=====================================================
ERROR   2025-04-28 16:59:24,381d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:195 用例总数: 2
ERROR   2025-04-28 16:59:24,381d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:196 异常用例数: 0
INFO    2025-04-28 16:59:24,382d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:199 用例执行时长: 1.13 s
INFO    2025-04-28 16:59:24,382d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:203 用例成功率: 0.00 %
INFO    2025-04-28 16:59:26,905d:\PytestAutoApi\logs\info-2025-04-28.log:main.py:36 Allure report generated, total cases: TestMetrics(passed=0, failed=0, skipped=1, total=2, broken=1, pass_rate=50.0, time=0.3)
INFO    2025-04-28 17:02:21,783d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 17:02:21,783d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 17:02:21,783d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 17:02:21,784d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 17:02:21,787d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 17:02:21,788d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 17:02:21,788d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 17:02:21,788d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 17:02:21,791d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 17:02:21,792d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'DELETE', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 17:02:21,792d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 17:02:21,792d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 17:02:21,797d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 17:02:21,798d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 17:02:21,798d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 17:02:21,799d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 17:02:21,800d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 17:02:21,805d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 17:02:21,805d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 17:02:21,806d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 17:02:21,807d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 17:02:21,809d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 17:02:21,810d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/list', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 17:02:21,810d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 17:02:21,810d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 17:02:21,813d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 17:02:21,814d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 17:02:21,814d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 17:02:21,814d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 17:02:21,817d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 17:02:21,817d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 17:02:21,817d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 17:02:21,818d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 17:02:21,820d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 17:02:21,820d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-28 17:02:21,820d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 17:02:21,821d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 17:02:21,821d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 17:02:21,824d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 17:02:21,825d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 17:02:21,825d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 17:02:21,825d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 17:02:21,829d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/appdevice/info/birdMoment/captureFavorites/$url_params{eventId}', 'method': 'PUT', 'detail': '收藏', 'headers': {'App-Source': 'WObird', 'Content-Language': 'zh_CN', 'Authorization': '$cache{app_token}', 'Platform': 'apple'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 17:02:21,829d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/appdevice/info/birdMoment/captureFavorites/$url_params{eventId}', 'detail': '收藏', 'headers': {'App-Source': 'WObird', 'Content-Language': 'zh_CN', 'Authorization': '$cache{app_token}', 'Platform': 'apple'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 17:02:21,829d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_query_bird_01': {'url': '${{host()}}/appdevice/info/birdMoment/captureFavorites/$url_params{eventId}', 'method': 'PUT', 'detail': '收藏', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'App-Source': 'WObird', 'Content-Language': 'zh_CN', 'Authorization': '$cache{app_token}', 'Platform': 'apple'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 17:02:21,830d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_query_bird_01': {'url': '${{host()}}/appdevice/info/birdMoment/captureFavorites/$url_params{eventId}', 'method': 'PUT', 'detail': '收藏', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'App-Source': 'WObird', 'Content-Language': 'zh_CN', 'Authorization': '$cache{app_token}', 'Platform': 'apple'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 17:02:21,833d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/app/info/appUser/loginTest', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Authorization': '', 'Platform': 'apple'}, 'requestType': 'json', 'is_run': False, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.token', 'name': 'app_token'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 17:02:21,833d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': False, 'url': '${{host()}}/app/info/appUser/loginTest', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Authorization': '', 'Platform': 'apple'}, 'requestType': 'JSON', 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.token', 'name': 'app_token'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 17:02:21,833d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/loginTest', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Authorization': '', 'Platform': 'apple'}, 'requestType': 'JSON', 'is_run': False, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.token', 'name': 'app_token'}], 'sleep': None}}]
INFO    2025-04-28 17:02:21,833d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_login_01': {'url': '${{host()}}/app/info/appUser/loginTest', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Authorization': '', 'Platform': 'apple'}, 'requestType': 'JSON', 'is_run': False, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.token', 'name': 'app_token'}], 'sleep': None}}]
INFO    2025-04-28 17:02:21,836d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 17:02:21,836d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 17:02:21,837d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 17:02:21,837d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 17:02:22,149d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:21 初始化conftest.py
INFO    2025-04-28 17:02:22,172d:\PytestAutoApi\logs\info-2025-04-28.log:test_query_bird.py:12 TestData: [{'url': '${{host()}}/appdevice/info/birdMoment/captureFavorites/$url_params{eventId}', 'method': 'PUT', 'detail': '收藏', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'App-Source': 'WObird', 'Content-Language': 'zh_CN', 'Authorization': '$cache{app_token}', 'Platform': 'apple'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-28 17:02:22,238d:\PytestAutoApi\logs\info-2025-04-28.log:test_query_bird.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/appdevice/info/birdMoment/captureFavorites/$url_params{eventId}', 'method': 'PUT', 'detail': '收藏', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'App-Source': 'WObird', 'Content-Language': 'zh_CN', 'Authorization': '$cache{app_token}', 'Platform': 'apple'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-28 17:02:22,242d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:12 TestData: [{'url': '${{host()}}/app/info/appUser/loginTest', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Authorization': '', 'Platform': 'apple'}, 'requestType': 'JSON', 'is_run': False, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.token', 'name': 'app_token'}], 'sleep': None}]
INFO    2025-04-28 17:02:22,244d:\PytestAutoApi\logs\info-2025-04-28.log:test_login.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/app/info/appUser/loginTest', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WObird', 'Authorization': '', 'Platform': 'apple'}, 'requestType': 'JSON', 'is_run': False, 'data': {'customId': '$cache{customId}', 'email': '834532523@qq.com', 'password': 'w1234567', 'loginConfirm': 1, 'timezoneId': '', 'countryCode': 'US'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.token', 'name': 'app_token'}], 'sleep': None}]
INFO    2025-04-28 17:02:22,245d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:149 指定运行顺序: []
INFO    2025-04-28 17:02:22,245d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:158 运行顺序: [<Function test_login[收藏]>, <Function test_login[正常登录]>]
INFO    2025-04-28 17:02:22,309d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:39 app接口登录初始化
INFO    2025-04-28 17:02:22,354d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:54 AL_HOST: http://47.107.113.31:18090/prod-api
INFO    2025-04-28 17:02:22,354d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:55 DEV_HOST: http://192.168.100.3:8090/prod-api
INFO    2025-04-28 17:02:22,648d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:76 登录初始化
INFO    2025-04-28 17:02:22,790d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:100 验证码: 20
INFO    2025-04-28 17:02:22,791d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:101 uuid: ddb57103f6794e04b3794d0c05babe88
INFO    2025-04-28 17:02:23,085d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:122 缓存中的token:Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJsb2dpblR5cGUiOiJsb2dpbiIsImxvZ2luSWQiOiJzeXNfdXNlcjoxNjU5MzkxNjY2MjU0NzA0NjQyIiwicm5TdHIiOiJFV1U3aWJSeDhvdkhsdGNpbks5UnoyaFhXM25lWExXeiIsInVzZXJJZCI6MTY1OTM5MTY2NjI1NDcwNDY0Mn0.Aa9fist2DJZ4qN6eV9o4w4AqlhZ2WUVb79tKG0h6u4k
INFO    2025-04-28 17:02:23,086d:\PytestAutoApi\logs\info-2025-04-28.log:test_query_bird.py:29 data: {'url': 'http://47.107.113.31:18090/prod-api/appdevice/info/birdMoment/captureFavorites/$url_params{eventId}', 'method': 'PUT', 'detail': '收藏', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'App-Source': 'WObird', 'Content-Language': 'zh_CN', 'Authorization': '$cache{app_token}', 'Platform': 'apple'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-28 17:02:23,087d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:171 _dependent_type: False
INFO    2025-04-28 17:02:23,087d:\PytestAutoApi\logs\info-2025-04-28.log:dependent_case.py:172 _dependence_case_datas: None
INFO    2025-04-28 17:02:23,087d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:429 ---------------处理多业务逻辑结束---------------
INFO    2025-04-28 17:02:23,087d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:430 ---------------开始请求---------------
INFO    2025-04-28 17:02:23,173d:\PytestAutoApi\logs\info-2025-04-28.log:request_control.py:436 ---------------请求结束----------------
INFO    2025-04-28 17:02:23,214d:\PytestAutoApi\logs\info-2025-04-28.log:mysql_control.py:29 Connected Successfully to MySQL,conn:<pymysql.connections.Connection object at 0x0000026413785790>
INFO    2025-04-28 17:02:23,222d:\PytestAutoApi\logs\info-2025-04-28.log:mysql_control.py:55 Successfully query SQL: SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr", data: [{'app_banner_config_info_id': 1876199218766475266, 'create_by': 'test02', 'create_time': 1736155726507, 'update_by': 'test02', 'update_time': 1736155726507, 'banner_id': 'bid4s149fmba474eriqnr', 'banner_type': 'ad', 'banner_name': '2025-01-06 17:28:46', 'app_source': 'WOpet', 'parent_user_id': 1659391666254704642, 'banner_image_url': 'https://uspublic.s3.us-west-1.amazonaws.com/bannerImage/2025/01/06/gifpic_20250106092844347.gif', 'start_time': 1721232000000, 'end_time': 1723564800000, 'count_down_start_time': 1721232001000, 'count_down_end_time': 1723270303000, 'sort': 4, 'jump_page_type': 2, 'jump_page_path': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jump_page_share': 1, 'system_type_android': 1, 'android_version_id': 0, 'system_type_ios': 1, 'ios_version_id': 0, 'banner_scope': 1, 'put_on_shelves': 0, 'remark': '', 'is_delete': 1}]
INFO    2025-04-28 17:02:23,222d:\PytestAutoApi\logs\info-2025-04-28.log:mysql_control.py:37 MySQL connection closed successfully
INFO    2025-04-28 17:02:23,226d:\PytestAutoApi\logs\info-2025-04-28.log:log_decorator.py:32 
======================================================
用例标题: 收藏
请求路径: http://47.107.113.31:18090/prod-api/appdevice/info/birdMoment/captureFavorites/$url_params%7BeventId%7D
请求方式: PUT
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'App-Source': 'WObird', 'Content-Language': 'zh_CN', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1aWQiOiJ1dWIxOTdjNjY3MDZiZXEwcWMiLCJjdG0iOjE3NDU4MzA5NDQwMDB9.dYhT2jrJQiekhiwSFRe5c4cVD466EC-yZGh6h0BCXh0', 'Platform': 'apple', 'Content-Length': '0'}
请求内容: None
接口响应内容: {"code":200,"msg":"操作成功","data":null,"paramMsg":null,"errCode":null}
接口响应时长: 84.97 ms
Http状态码: 200
=====================================================
ERROR   2025-04-28 17:02:23,237d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:195 用例总数: 2
ERROR   2025-04-28 17:02:23,238d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:196 异常用例数: 0
INFO    2025-04-28 17:02:23,238d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:199 用例执行时长: 1.08 s
INFO    2025-04-28 17:02:23,238d:\PytestAutoApi\logs\info-2025-04-28.log:conftest.py:203 用例成功率: 50.00 %
INFO    2025-04-28 17:02:25,783d:\PytestAutoApi\logs\info-2025-04-28.log:main.py:36 Allure report generated, total cases: TestMetrics(passed=1, failed=0, skipped=1, total=2, broken=0, pass_rate=100.0, time=0.14)
INFO    2025-04-28 17:53:58,167d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 17:53:58,174d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '添加banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 17:53:58,174d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 17:53:58,174d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_add_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'POST', 'detail': '添加banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '$cache{upload_img_01_url}', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1723270303000, 'sort': 4, 'jumpPageType': 2, 'jumpPagePath': 'https://www.baidu.com/s?word=%E5%A5%A5%E8%BF%90%E4%BC%9A&rsv_dl=ay24_pd_gkpc', 'jumpPageShare': 1, 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 17:53:58,174d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 17:53:58,174d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'detail': '取消上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 17:53:58,174d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 17:53:58,174d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_cancel_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/cancel/{bannerId}', 'method': 'PUT', 'detail': '取消上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 17:53:58,187d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 17:53:58,187d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'DELETE', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'detail': '删除banner接口', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 17:53:58,187d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 17:53:58,189d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_delete_01': {'url': '${{host()}}/system/bannerConfigInfo/{bannerId}', 'method': 'DELETE', 'detail': '删除banner接口', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 17:53:58,193d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 17:53:58,193d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}]
INFO    2025-04-28 17:53:58,194d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'detail': '获取banner详细信息', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 17:53:58,194d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 17:53:58,194d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_detail_01': {'url': '${{host()}}/system/bannerConfigInfo/$url_params{banner_id}', 'method': 'GET', 'detail': '获取banner详细信息', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}, 'banner_id': {'jsonpath': '$.data.bannerId', 'type': '==', 'value': '$.banner_id', 'AssertType': 'SQL'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'id': '', 'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'set_cache': None, 'replace_key': '$.data.paramData.bannerName'}]}], 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 17:53:58,200d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 17:53:58,200d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo', 'detail': '编辑banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 17:53:58,201d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 17:53:58,201d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_edit_01': {'url': '${{host()}}/system/bannerConfigInfo', 'method': 'PUT', 'detail': '编辑banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'createBy': '', 'createTime': '', 'updateBy': '', 'updateTime': '', 'params': {'property1': {}, 'property2': {}}, 'appBannerConfigInfoId': '', 'bannerId': '', 'bannerType': 'ad', 'bannerName': 'edit_test', 'appSource': 'WOpet', 'parentUserId': '', 'bannerImageUrl': '', 'startTime': 1721232000000, 'endTime': 1723564800000, 'countDownStartTime': 1721232001000, 'countDownEndTime': 1722787201000, 'sort': 3, 'jumpPageType': 3, 'jumpPagePath': '', 'jumpPageShare': '', 'systemTypeAndroid': 1, 'androidVersionId': 0, 'systemTypeIos': 1, 'iosVersionId': 0, 'bannerScope': 1, 'putOnShelves': '', 'remark': '', 'bannerCountryCodeList': ['ALL'], 'bannerPetConfig': {'petTypeList': [], 'petWeightMin': '', 'petWeightMax': '', 'petQuantityMin': '', 'petQuantityMax': ''}, 'bannerProductConfig': {'whetherIncludeProduct': '', 'productIdList': []}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 17:53:58,205d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'json', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 17:53:58,205d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/list', 'detail': '获取banner列表', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 17:53:58,206d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 17:53:58,206d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_list_01': {'url': '${{host()}}/system/bannerConfigInfo/list', 'method': 'POST', 'detail': '获取banner列表', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'JSON', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 17:53:58,210d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 17:53:58,211d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'detail': '上架banner', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 17:53:58,211d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 17:53:58,211d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'banner_publish_01': {'url': '${{host()}}/system/bannerConfigInfo/publish/{bannerId}', 'method': 'PUT', 'detail': '上架banner', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '查询成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': 10, 'pageNum': 1, 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'appSource': '', 'bannerName': '', 'bannerType': '', 'putOnShelves': '', 'bannerScope': ''}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.rows[0].bannerId', 'name': 'banner_list_02_bannerId'}], 'sleep': None}}]
INFO    2025-04-28 17:53:58,213d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-28 17:53:58,214d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 17:53:58,214d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 17:53:58,214d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 17:53:58,216d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-28 17:53:58,217d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-28 17:53:58,218d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 17:53:58,218d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 17:53:58,219d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 17:53:58,221d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'file', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'sql': None}
INFO    2025-04-28 17:53:58,221d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': True, 'url': '${{host()}}/product/upload/common/uploadPublic', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 17:53:58,221d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 17:53:58,222d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'upload_img_01': {'url': '${{host()}}/product/upload/common/uploadPublic', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '上传图片成功'}}, 'headers': {'Content-Language': 'zh_CN', 'Authorization': '$cache{token}'}, 'requestType': 'FILE', 'is_run': True, 'data': {'file': {'multipartFile': 'gifpic.gif'}, 'data': {'fileBusType': 'bannerImage', 'fileMd5Str': 'd41d8cd98f00b204e9800998ecf8427e'}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': [{'type': 'response', 'jsonpath': '$.data.url', 'name': 'upload_img_01_url'}], 'sleep': None}}]
INFO    2025-04-28 17:53:58,223d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/appdevice/info/birdMoment/captureFavorites/$url_params{eventId}', 'method': 'PUT', 'detail': '收藏', 'headers': {'App-Source': 'WObird', 'Content-Language': 'zh_CN', 'Authorization': '$cache{app_token}', 'Platform': 'apple'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"']}
INFO    2025-04-28 17:53:58,230d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'PUT', 'is_run': None, 'url': '${{host()}}/appdevice/info/birdMoment/captureFavorites/$url_params{eventId}', 'detail': '收藏', 'headers': {'App-Source': 'WObird', 'Content-Language': 'zh_CN', 'Authorization': '$cache{app_token}', 'Platform': 'apple'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 17:53:58,230d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_query_bird_01': {'url': '${{host()}}/appdevice/info/birdMoment/captureFavorites/$url_params{eventId}', 'method': 'PUT', 'detail': '收藏', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'App-Source': 'WObird', 'Content-Language': 'zh_CN', 'Authorization': '$cache{app_token}', 'Platform': 'apple'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 17:53:58,230d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_query_bird_01': {'url': '${{host()}}/appdevice/info/birdMoment/captureFavorites/$url_params{eventId}', 'method': 'PUT', 'detail': '收藏', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'App-Source': 'WObird', 'Content-Language': 'zh_CN', 'Authorization': '$cache{app_token}', 'Platform': 'apple'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'setup_sql': ['SELECT * FROM `iot-cloud`.app_banner_config_info abci WHERE abci.banner_id = "bid4s149fmba474eriqnr"'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 17:53:58,241d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/appdevice/info/birdMoment/queryBirdCapturePage', 'method': 'POST', 'detail': '收藏', 'headers': {'App-Source': 'WObird', 'Content-Language': 'zh_CN', 'Authorization': '$cache{app_token}', 'Platform': 'apple'}, 'requestType': 'None', 'is_run': None, 'data': {'pageQuery': {'pageSize': '5,', 'pageNum': '1,', 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'isMark': True, 'etypes': ['penson', 'bird', 'pet']}}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$url_params{banner_id}'}, {'dependent_type': 'sqlData', 'jsonpath': '$.banner_id', 'replace_key': '$.data.paramData.bannerName'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'sql': None, 'setup_sql': None}
INFO    2025-04-28 17:53:58,241d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/appdevice/info/birdMoment/queryBirdCapturePage', 'detail': '收藏', 'headers': {'App-Source': 'WObird', 'Content-Language': 'zh_CN', 'Authorization': '$cache{app_token}', 'Platform': 'apple'}, 'requestType': 'NONE', 'data': {'pageQuery': {'pageSize': '5,', 'pageNum': '1,', 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'isMark': True, 'etypes': ['penson', 'bird', 'pet']}}, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-28 17:53:58,241d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'wobirdy_query_bird_01': {'url': '${{host()}}/appdevice/info/birdMoment/queryBirdCapturePage', 'method': 'POST', 'detail': '收藏', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'App-Source': 'WObird', 'Content-Language': 'zh_CN', 'Authorization': '$cache{app_token}', 'Platform': 'apple'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': '5,', 'pageNum': '1,', 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'isMark': True, 'etypes': ['penson', 'bird', 'pet']}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 17:53:58,241d:\PytestAutoApi\logs\info-2025-04-28.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'wobirdy_query_bird_01': {'url': '${{host()}}/appdevice/info/birdMoment/queryBirdCapturePage', 'method': 'POST', 'detail': '收藏', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None, 'message': '登录失败'}, 'username': {'jsonpath': '$.msg', 'type': 'contains', 'value': '操作成功', 'AssertType': None}}, 'headers': {'App-Source': 'WObird', 'Content-Language': 'zh_CN', 'Authorization': '$cache{app_token}', 'Platform': 'apple'}, 'requestType': 'NONE', 'is_run': None, 'data': {'pageQuery': {'pageSize': '5,', 'pageNum': '1,', 'orderByColumn': '', 'isAsc': ''}, 'paramData': {'isMark': True, 'etypes': ['penson', 'bird', 'pet']}}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-28 17:54:02,301d:\PytestAutoApi\logs\info-2025-04-28.log:main.py:36 Allure report generated, total cases: TestMetrics(passed=1, failed=0, skipped=1, total=2, broken=0, pass_rate=100.0, time=0.14)
