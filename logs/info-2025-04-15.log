INFO    2025-04-15 08:54:28,783d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:32 测试用例{'case_common': {'allureEpic': '开发平台接口', 'allureFeature': '登录模块', 'allureStory': '获取验证码'}, 'code_01': {'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}}
INFO    2025-04-15 08:54:28,783d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:252 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-15 08:54:28,785d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:62 测试用例列表[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 08:54:28,792d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:32 测试用例{'case_common': {'allureEpic': '开发平台接口', 'allureFeature': '登录模块', 'allureStory': '登录'}, 'login_01': {'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependence_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}}
INFO    2025-04-15 08:54:28,792d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:252 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependence_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-15 08:54:28,793d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:62 测试用例列表[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': None}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 08:54:30,638d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:19 开始执行测试用例
INFO    2025-04-15 08:54:30,807d:\PytestAutoApi\logs\info-2025-04-15.log:test_get_code.py:13 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 08:54:30,819d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:13 TestData: [{'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': None}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 08:54:30,820d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:15 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': None}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 08:54:30,821d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:106 指定运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 08:54:30,821d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:115 运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 08:54:30,884d:\PytestAutoApi\logs\info-2025-04-15.log:test_get_code.py:24 data: {'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 08:54:30,918d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code":200,"msg":"操作成功","data":{"img":"iVBORw0KGgoAAAANSUhEUgAAAKAAAAA8CAYAAADha7EVAAAE9klEQVR42u3dy28TRxwHcPMn9MCBC9eqB46VACG1XHoqJSgB0iqhKpEAFQQScAjh0QaSNgWph1YttAgEFY9Y4S2eBxReQiE8pCREkAfgJsRNjEmQKQ5WVf1gV9poE2dmZ2Zn7fHu9/CVHO/u2Ik/+nlmdnYTy+VyhIQ3n3d+LZxivL8YPqRwoyvEcQCITAJkWlsAGBF8pdQuAAKfEe0DIPAV9XUAEAC1vc6M9DpuABAAA3kdHjCv/QIFGJ+7mBsAKu0+oCg8XqWMBQlP136IeaNgFXiBfwWrggLE0poH1IXPE2DnF+VaIwIxamiy42+p7VGSmq/30PYjbVT+4yWjz4ToxGccwCgg7BlM0+V7z6gxfpdqfrlKC7eeoU+2nJ4UU88F68ZnJMAwIRwZzVBrxwD9fqGDNh+4RZ/tOJeHbbqY+vsAYIlFBBsAGggwLAjDBDAIfNIAvZDU3Y7Z0TWiDhvApU2XaOfxdrsPCIAeAC1IsgDdxwJgjip3X6GG5na6cj9ByXRGuDqaCnDnWEteADCEX88mvU8HGqsC+oUY4wFSBagDoU6As76tmRQAzNF/NR94xoLlPLYAsvZzIBYcYFBVUHf1A8B8eCKVT7Qf6AbrG6Abjh+AfhACYHEroLvyucOqgl5wWTn0aZN/gLJV8OaiOZNSiL4fAMr3+1RHwiIALXhOtABkwXG3xQLnfj6ogQcA+senA6GDTvkruKtsKXWVV1J3ZTX1rN9ITxuaaOC3fZS+doOyIyN5q1qctqaDNxWv1z4AaAZAEYTTtTEVnhJAr/Ru2ETDJ0/TiXllNiovgG6wAFh8gDL9N6/FqO62WPiYC1JZo2DRPFz2FR3d89EEMAuX14poACwtgF4QnbZ4+KSnYWTTs3YD/fv3gBAuACwcwJW7qgoaHtiYzBTK22zW7uuNtt2h4ZZT9OT7BrtfyEPYXfUNZXr7hAYhABhOgLwr42J+5/CyqRQN7j/IR7hiJb1JvRCahgHAcFdAqdUwMqtbXnV00v2KxUyEid0/F+3DBsASBSgK0dk+1n6PWwlfJxKBgAo6GISotcUagChfFedAmxr3Pla/kAVw6PARAAzBPKBoG9oBiuTljVtMgP11OwAwQgBFEE4AnJmslQpzUPJylD0/uLwKAEv4XLDKsZ4AvUCxwjuOBbBryTIMQiIG0Auh9grIBVheCYARHQULnwv2faV/KsWdDwTA6E7DCK2G8Zt06zUmwGc//ASAmAfkrwf0m/7abUyAw2fPAyAATl8B5/T96Ttr4vXcFTLjY68A0PBByIzETe7P2q8LdvBM3dC3uZZGzl+0p1VEGnpxtdUe5bIA/hM/gVNxACheAR04HWUVdGzTKqr7YwtVn2ukj7v3Tuyz4MGvtKqlnprfb+edguvf+l1R/6gAWAIAg7ovzJPt9TSeyUQSoOq9YYqJkwfw7P+z82IsQGvOL3k8bkS1AUB1gF7Y/GJkArQWkQ7u22/P3ckux7cuVHqTTBpzewkAVEMoi0oFodA0jLXWb+ivo/S0vtE+n2sNNqyV0A8rvqTHq9faV8c9P3iIRm+32aumTbsPCwDKR7WiyR6H/xOCaMOncjwAIgCIhAefbDsAiAAgEi58Mu0BIAKACAAiCAAiABiKzJwfywuAAWDB4MluQzANowWfzv3CljUfdgnFguM8BkDN+KKIUAWTg0cVokwVfQcMTB5xommI9gAAAABJRU5ErkJggg==","captchaEnabled":true,"uuid":"fe4f2743dc544f43a6660be4d7d56571"},"paramMsg":null,"errCode":null}
INFO    2025-04-15 08:54:30,919d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 获取验证码和uuid
INFO    2025-04-15 08:54:30,921d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 获取验证码和uuid
请求路径: http://47.107.113.31:18090/prod-api/code
请求方式: GET
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}
请求内容: None
接口响应内容: {"code":200,"msg":"操作成功","data":{"img":"iVBORw0KGgoAAAANSUhEUgAAAKAAAAA8CAYAAADha7EVAAAE9klEQVR42u3dy28TRxwHcPMn9MCBC9eqB46VACG1XHoqJSgB0iqhKpEAFQQScAjh0QaSNgWph1YttAgEFY9Y4S2eBxReQiE8pCREkAfgJsRNjEmQKQ5WVf1gV9poE2dmZ2Zn7fHu9/CVHO/u2Ik/+nlmdnYTy+VyhIQ3n3d+LZxivL8YPqRwoyvEcQCITAJkWlsAGBF8pdQuAAKfEe0DIPAV9XUAEAC1vc6M9DpuABAAA3kdHjCv/QIFGJ+7mBsAKu0+oCg8XqWMBQlP136IeaNgFXiBfwWrggLE0poH1IXPE2DnF+VaIwIxamiy42+p7VGSmq/30PYjbVT+4yWjz4ToxGccwCgg7BlM0+V7z6gxfpdqfrlKC7eeoU+2nJ4UU88F68ZnJMAwIRwZzVBrxwD9fqGDNh+4RZ/tOJeHbbqY+vsAYIlFBBsAGggwLAjDBDAIfNIAvZDU3Y7Z0TWiDhvApU2XaOfxdrsPCIAeAC1IsgDdxwJgjip3X6GG5na6cj9ByXRGuDqaCnDnWEteADCEX88mvU8HGqsC+oUY4wFSBagDoU6As76tmRQAzNF/NR94xoLlPLYAsvZzIBYcYFBVUHf1A8B8eCKVT7Qf6AbrG6Abjh+AfhACYHEroLvyucOqgl5wWTn0aZN/gLJV8OaiOZNSiL4fAMr3+1RHwiIALXhOtABkwXG3xQLnfj6ogQcA+senA6GDTvkruKtsKXWVV1J3ZTX1rN9ITxuaaOC3fZS+doOyIyN5q1qctqaDNxWv1z4AaAZAEYTTtTEVnhJAr/Ru2ETDJ0/TiXllNiovgG6wAFh8gDL9N6/FqO62WPiYC1JZo2DRPFz2FR3d89EEMAuX14poACwtgF4QnbZ4+KSnYWTTs3YD/fv3gBAuACwcwJW7qgoaHtiYzBTK22zW7uuNtt2h4ZZT9OT7BrtfyEPYXfUNZXr7hAYhABhOgLwr42J+5/CyqRQN7j/IR7hiJb1JvRCahgHAcFdAqdUwMqtbXnV00v2KxUyEid0/F+3DBsASBSgK0dk+1n6PWwlfJxKBgAo6GISotcUagChfFedAmxr3Pla/kAVw6PARAAzBPKBoG9oBiuTljVtMgP11OwAwQgBFEE4AnJmslQpzUPJylD0/uLwKAEv4XLDKsZ4AvUCxwjuOBbBryTIMQiIG0Auh9grIBVheCYARHQULnwv2faV/KsWdDwTA6E7DCK2G8Zt06zUmwGc//ASAmAfkrwf0m/7abUyAw2fPAyAATl8B5/T96Ttr4vXcFTLjY68A0PBByIzETe7P2q8LdvBM3dC3uZZGzl+0p1VEGnpxtdUe5bIA/hM/gVNxACheAR04HWUVdGzTKqr7YwtVn2ukj7v3Tuyz4MGvtKqlnprfb+edguvf+l1R/6gAWAIAg7ovzJPt9TSeyUQSoOq9YYqJkwfw7P+z82IsQGvOL3k8bkS1AUB1gF7Y/GJkArQWkQ7u22/P3ckux7cuVHqTTBpzewkAVEMoi0oFodA0jLXWb+ivo/S0vtE+n2sNNqyV0A8rvqTHq9faV8c9P3iIRm+32aumTbsPCwDKR7WiyR6H/xOCaMOncjwAIgCIhAefbDsAiAAgEi58Mu0BIAKACAAiCAAiABiKzJwfywuAAWDB4MluQzANowWfzv3CljUfdgnFguM8BkDN+KKIUAWTg0cVokwVfQcMTB5xommI9gAAAABJRU5ErkJggg==","captchaEnabled":true,"uuid":"fe4f2743dc544f43a6660be4d7d56571"},"paramMsg":null,"errCode":null}
接口响应时长: 28.63 ms
Http状态码: 200
=====================================================
INFO    2025-04-15 08:54:30,928d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:30 data: {'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': None}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 08:54:30,931d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:172 ********开始获取依赖数据: code_01********
INFO    2025-04-15 08:54:30,956d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"491ed7316abd4c5bbea5142e42d5f2e4"},"paramMsg":null,"errCode":null}
INFO    2025-04-15 08:54:30,958d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 获取验证码和uuid
INFO    2025-04-15 08:54:30,963d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 获取验证码和uuid
请求路径: http://47.107.113.31:18090/prod-api/code
请求方式: GET
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}
请求内容: None
接口响应内容: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"491ed7316abd4c5bbea5142e42d5f2e4"},"paramMsg":null,"errCode":null}
接口响应时长: 23.03 ms
Http状态码: 200
=====================================================
INFO    2025-04-15 08:54:30,989d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
INFO    2025-04-15 08:54:30,992d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 正常登录
INFO    2025-04-15 08:54:30,993d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 正常登录
请求路径: http://47.107.113.31:18090/prod-api/user/login
请求方式: POST
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam', 'Content-Length': '114', 'Content-Type': 'application/json'}
请求内容: {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}
接口响应内容: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
接口响应时长: 20.56 ms
Http状态码: 200
=====================================================
ERROR   2025-04-15 08:54:30,998d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:152 用例总数: 2
ERROR   2025-04-15 08:54:30,999d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:153 异常用例数: 0
INFO    2025-04-15 08:54:31,000d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:156 用例执行时长: 0.34 s
INFO    2025-04-15 08:54:31,000d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:160 用例成功率: 100.00 %
INFO    2025-04-15 08:54:38,237d:\PytestAutoApi\logs\info-2025-04-15.log:main.py:35 Allure report generated, total cases: TestMetrics(passed=2, failed=0, skipped=0, total=2, broken=0, pass_rate=100.0, time=0.11)
INFO    2025-04-15 08:59:35,742d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:32 测试用例{'case_common': {'allureEpic': '开发平台接口', 'allureFeature': '登录模块', 'allureStory': '获取验证码'}, 'code_01': {'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}}
INFO    2025-04-15 08:59:35,742d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:252 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-15 08:59:35,742d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:62 测试用例列表[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 08:59:35,742d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:32 测试用例{'case_common': {'allureEpic': '开发平台接口', 'allureFeature': '登录模块', 'allureStory': '登录'}, 'login_01': {'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependence_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}}
INFO    2025-04-15 08:59:35,742d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:252 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependence_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-15 08:59:35,742d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:256 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependence_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-15 08:59:35,742d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:62 测试用例列表[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': None}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 08:59:36,478d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:19 开始执行测试用例
INFO    2025-04-15 08:59:36,563d:\PytestAutoApi\logs\info-2025-04-15.log:test_get_code.py:13 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 08:59:36,567d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:13 TestData: [{'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': None}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 08:59:36,569d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:15 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': None}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 08:59:36,571d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:106 指定运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 08:59:36,571d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:115 运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 08:59:36,642d:\PytestAutoApi\logs\info-2025-04-15.log:test_get_code.py:24 data: {'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 08:59:36,708d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"9130d2bf01b440949219a6f64a18dc29"},"paramMsg":null,"errCode":null}
INFO    2025-04-15 08:59:36,709d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 获取验证码和uuid
INFO    2025-04-15 08:59:36,713d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 获取验证码和uuid
请求路径: http://47.107.113.31:18090/prod-api/code
请求方式: GET
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}
请求内容: None
接口响应内容: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"9130d2bf01b440949219a6f64a18dc29"},"paramMsg":null,"errCode":null}
接口响应时长: 59.24 ms
Http状态码: 200
=====================================================
INFO    2025-04-15 08:59:36,720d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:30 data: {'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': None}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 08:59:36,720d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:172 ********开始获取依赖数据: code_01********
INFO    2025-04-15 08:59:36,752d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"ee0300997b2e49e5851a083f8a1f1f3f"},"paramMsg":null,"errCode":null}
INFO    2025-04-15 08:59:36,752d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 获取验证码和uuid
INFO    2025-04-15 08:59:36,753d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 获取验证码和uuid
请求路径: http://47.107.113.31:18090/prod-api/code
请求方式: GET
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}
请求内容: None
接口响应内容: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"ee0300997b2e49e5851a083f8a1f1f3f"},"paramMsg":null,"errCode":null}
接口响应时长: 29.18 ms
Http状态码: 200
=====================================================
INFO    2025-04-15 08:59:36,775d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
INFO    2025-04-15 08:59:36,778d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 正常登录
INFO    2025-04-15 08:59:36,781d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 正常登录
请求路径: http://47.107.113.31:18090/prod-api/user/login
请求方式: POST
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam', 'Content-Length': '114', 'Content-Type': 'application/json'}
请求内容: {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}
接口响应内容: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
接口响应时长: 18.77 ms
Http状态码: 200
=====================================================
ERROR   2025-04-15 08:59:36,790d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:152 用例总数: 2
ERROR   2025-04-15 08:59:36,790d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:153 异常用例数: 0
INFO    2025-04-15 08:59:36,794d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:156 用例执行时长: 0.30 s
INFO    2025-04-15 08:59:36,794d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:160 用例成功率: 100.00 %
INFO    2025-04-15 08:59:39,275d:\PytestAutoApi\logs\info-2025-04-15.log:main.py:35 Allure report generated, total cases: TestMetrics(passed=2, failed=0, skipped=0, total=2, broken=0, pass_rate=100.0, time=0.14)
INFO    2025-04-15 09:01:43,371d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:32 测试用例{'case_common': {'allureEpic': '开发平台接口', 'allureFeature': '登录模块', 'allureStory': '获取验证码'}, 'code_01': {'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}}
INFO    2025-04-15 09:01:43,371d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:252 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-15 09:01:43,371d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:62 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 09:01:43,376d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:32 测试用例{'case_common': {'allureEpic': '开发平台接口', 'allureFeature': '登录模块', 'allureStory': '登录'}, 'login_01': {'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependence_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}}
INFO    2025-04-15 09:01:43,376d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:252 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependence_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-15 09:01:43,376d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:256 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependence_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-15 09:01:43,376d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:62 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': None}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 09:01:44,083d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:19 开始执行测试用例
INFO    2025-04-15 09:01:44,221d:\PytestAutoApi\logs\info-2025-04-15.log:test_get_code.py:13 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 09:01:44,224d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:13 TestData: [{'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': None}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 09:01:44,225d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:15 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': None}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 09:01:44,226d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:106 指定运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 09:01:44,227d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:115 运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 09:01:44,288d:\PytestAutoApi\logs\info-2025-04-15.log:test_get_code.py:24 data: {'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 09:01:44,325d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"9e0d6634f4cf493c9dea62b85c40d003"},"paramMsg":null,"errCode":null}
INFO    2025-04-15 09:01:44,325d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 获取验证码和uuid
INFO    2025-04-15 09:01:44,328d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 获取验证码和uuid
请求路径: http://47.107.113.31:18090/prod-api/code
请求方式: GET
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}
请求内容: None
接口响应内容: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"9e0d6634f4cf493c9dea62b85c40d003"},"paramMsg":null,"errCode":null}
接口响应时长: 32.73 ms
Http状态码: 200
=====================================================
INFO    2025-04-15 09:01:44,333d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:30 data: {'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': None}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 09:01:44,334d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:172 ********开始获取依赖数据: code_01********
INFO    2025-04-15 09:01:44,366d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"9ec7dd05b9d544b0a839aabe0be30fff"},"paramMsg":null,"errCode":null}
INFO    2025-04-15 09:01:44,366d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 获取验证码和uuid
INFO    2025-04-15 09:01:44,368d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 获取验证码和uuid
请求路径: http://47.107.113.31:18090/prod-api/code
请求方式: GET
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}
请求内容: None
接口响应内容: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"9ec7dd05b9d544b0a839aabe0be30fff"},"paramMsg":null,"errCode":null}
接口响应时长: 28.05 ms
Http状态码: 200
=====================================================
INFO    2025-04-15 09:01:44,385d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
INFO    2025-04-15 09:01:44,385d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 正常登录
INFO    2025-04-15 09:01:44,386d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 正常登录
请求路径: http://47.107.113.31:18090/prod-api/user/login
请求方式: POST
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam', 'Content-Length': '114', 'Content-Type': 'application/json'}
请求内容: {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}
接口响应内容: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
接口响应时长: 14.3 ms
Http状态码: 200
=====================================================
ERROR   2025-04-15 09:01:44,390d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:152 用例总数: 2
ERROR   2025-04-15 09:01:44,390d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:153 异常用例数: 0
INFO    2025-04-15 09:01:44,390d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:156 用例执行时长: 0.28 s
INFO    2025-04-15 09:01:44,391d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:160 用例成功率: 100.00 %
INFO    2025-04-15 09:01:47,025d:\PytestAutoApi\logs\info-2025-04-15.log:main.py:35 Allure report generated, total cases: TestMetrics(passed=2, failed=0, skipped=0, total=2, broken=0, pass_rate=100.0, time=0.1)
INFO    2025-04-15 09:03:42,440d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:32 测试用例{'case_common': {'allureEpic': '开发平台接口', 'allureFeature': '登录模块', 'allureStory': '获取验证码'}, 'code_01': {'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}}
INFO    2025-04-15 09:03:42,440d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:254 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-15 09:03:42,440d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:62 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 09:03:42,445d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:32 测试用例{'case_common': {'allureEpic': '开发平台接口', 'allureFeature': '登录模块', 'allureStory': '登录'}, 'login_01': {'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependence_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}}
INFO    2025-04-15 09:03:42,445d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:254 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependence_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-15 09:03:42,445d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:268 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependence_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-15 09:03:42,445d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:62 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': None}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 09:03:43,146d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:19 开始执行测试用例
INFO    2025-04-15 09:03:43,237d:\PytestAutoApi\logs\info-2025-04-15.log:test_get_code.py:13 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 09:03:43,242d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:13 TestData: [{'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': None}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 09:03:43,243d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:15 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': None}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 09:03:43,244d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:106 指定运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 09:03:43,245d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:115 运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 09:03:43,301d:\PytestAutoApi\logs\info-2025-04-15.log:test_get_code.py:24 data: {'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 09:03:43,353d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"3391c5c622334df3a98f9d44f5c0872f"},"paramMsg":null,"errCode":null}
INFO    2025-04-15 09:03:43,355d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 获取验证码和uuid
INFO    2025-04-15 09:03:43,359d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 获取验证码和uuid
请求路径: http://47.107.113.31:18090/prod-api/code
请求方式: GET
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}
请求内容: None
接口响应内容: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"3391c5c622334df3a98f9d44f5c0872f"},"paramMsg":null,"errCode":null}
接口响应时长: 47.7 ms
Http状态码: 200
=====================================================
INFO    2025-04-15 09:03:43,375d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:30 data: {'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': None}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 09:03:43,376d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:172 ********开始获取依赖数据: code_01********
INFO    2025-04-15 09:03:43,429d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"41c4d44da6ef4dac811c2a5fc54d8129"},"paramMsg":null,"errCode":null}
INFO    2025-04-15 09:03:43,429d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 获取验证码和uuid
INFO    2025-04-15 09:03:43,431d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 获取验证码和uuid
请求路径: http://47.107.113.31:18090/prod-api/code
请求方式: GET
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}
请求内容: None
接口响应内容: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"41c4d44da6ef4dac811c2a5fc54d8129"},"paramMsg":null,"errCode":null}
接口响应时长: 49.1 ms
Http状态码: 200
=====================================================
INFO    2025-04-15 09:03:43,467d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
INFO    2025-04-15 09:03:43,470d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 正常登录
INFO    2025-04-15 09:03:43,472d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 正常登录
请求路径: http://47.107.113.31:18090/prod-api/user/login
请求方式: POST
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam', 'Content-Length': '114', 'Content-Type': 'application/json'}
请求内容: {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}
接口响应内容: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
接口响应时长: 33.89 ms
Http状态码: 200
=====================================================
ERROR   2025-04-15 09:03:43,480d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:152 用例总数: 2
ERROR   2025-04-15 09:03:43,480d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:153 异常用例数: 0
INFO    2025-04-15 09:03:43,481d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:156 用例执行时长: 0.32 s
INFO    2025-04-15 09:03:43,482d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:160 用例成功率: 100.00 %
INFO    2025-04-15 09:03:45,844d:\PytestAutoApi\logs\info-2025-04-15.log:main.py:35 Allure report generated, total cases: TestMetrics(passed=2, failed=0, skipped=0, total=2, broken=0, pass_rate=100.0, time=0.17)
INFO    2025-04-15 09:14:29,058d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-15 09:14:29,058d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 09:14:29,058d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 09:14:29,058d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependence_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-15 09:14:29,058d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependence_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-15 09:14:29,058d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependence_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 09:14:29,058d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': None}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 09:14:29,789d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:19 开始执行测试用例
INFO    2025-04-15 09:14:29,874d:\PytestAutoApi\logs\info-2025-04-15.log:test_get_code.py:13 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 09:14:29,877d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:13 TestData: [{'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': None}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 09:14:29,878d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:15 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': None}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 09:14:29,880d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:106 指定运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 09:14:29,880d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:115 运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 09:14:29,942d:\PytestAutoApi\logs\info-2025-04-15.log:test_get_code.py:24 data: {'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 09:14:29,971d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code":200,"msg":"操作成功","data":{"img":"iVBORw0KGgoAAAANSUhEUgAAAKAAAAA8CAYAAADha7EVAAAINklEQVR42u3ceWwUVRwHcBIDIYaIISYa4z8SDUHkbCOCRwCDHIoNARIRNB5IQlBCA3g0hjQIGIJEQBQRCFcQKC205SpH7U0LLbRQKF1KofSgrbSUHrSdN3/83N/g4nZ47+3M7tvZ2Z33xzclbee1gQ/v/L3ppSgKyMiEKr3kX4KMBCgjAcrISIAyEqCMjAQoE/LsjP1YiwQoYzrpi4YxIwHKBB2diO+TAGVM4RP9nAQow03l/kwtiMjzZ+8EitB2AJvvdsDhXZWwbG4BzBh1GqKfSobhfQ/ByCcPwWtPJ8PsMekQ9/l5SEu8DZ0PuiWS/9Kg3IdSUgun1WuQSi7DdnIW/lBzYLM7v6vZ2p+3kTzta3+TcnCRBuhUun3C89WDmcFIa8c2ABvvtMPKRRc0bEOeSDSUMc+kwsblpdDS/MCh6Fogk7hgp1oAm9Qs09mi5kIWuQ6tSgcVntlh1whEfXu2AHgmuVrDZBSePhMHHoOi3AbHAfQHHS1b1Ty4QRqpePyZ9/EQ2g7gno3lfsPzDg7RCFkC9D8VboSiFh4shLYCmLLnJhfU2m9KoKSgEbq6Hs5V6mvaIWFrBbw/JI35zLnMescB/M09xztEiqGA3NTmdk1KG3R5ze/uu4dYF6mHFHLJZ0/oPRwHApCF0DYAb5a3aAsMGqS3nz8CV4ubmI3h4gMXIrRnx71wBO42tDsC4EH1IlxSaqBd6TT8TBm5w0V4llQK6wX1CG21CPlqei6z9yvMNtaLLYyhtxG/oEiujDnBhQsL4H61SOgeoAehrbZhbpTdY+JbNCPPcKN1t9u0YVffxtA+SVoPK7HRU6s0MwHidk3Eb0RvXnmVCRD398w0/MO8Qmo7qxdftPwftvrZJT1iV4DdnAUM7hmKPorjrYpDAnDBtBwmwIbaNlMNI1haO28+lyoB+rGC3kHyhRcj2A4gb8/P9GasG2ygc0mnAcSVLgvgSXI1aEd6tgHIO+0w2zBu0bDa2rGuXAKkBI/sWACrlabIB4iLBBaajvYu042z2lr6Ub4ESMk+tZCK75RaFtSiBtsAxKICFhqzG8m458dq69MJGRKgft6mllPxJZOSHpvXEQ1w/pRsJppta8z9L1wweyy3WEEC/L9a5rAbmR4enqLkkAptZRzssi7eQsRSgFjBwkIzdXCaqYYnDPyR2daofocdCRB7skY3uOukQTuewxOTx+CRLDhOrmgwraortM2lpKqK+9x54O4NLkONfhYzmVugMLTPAccANFpwgBvNX9yKg7cK34FRuVHcBPo75ecNsDSmjuKWzy/kwEmCEwlV3AaxKMFXhYwESA8Ou0mkGDLPZUIH5xw5UIxWA0w5VmEcIBaRThl0ggsIV7HZaXWPVsZtrZ3axvMn4zIMlWgN6/uXBGigKDWfVHKroz0Yw6EHZCGklmPhmfDr/fcFVAfIwziy3y4J0GD2que1Mi6RCG0PEJMa9x188OpJv/C9NyJW6xVZXx//4iqhoIIdkSCxRxtfNEWrD8wjNyBBveATId4ZuUfahSK0avHhgWcaYN7aWG2I/XbSL8z6QH3efek4HNl7C1av6A2tLWyAU4cvcSxAGhZc8foqSk1Ui4UBtHLlGxBAz0ecFx7YUgGLZ53VkHmO7HA7BW/IYRFqxtHaRxXSCBDPe1kAP5ww29EAWWBw34+HsJJSmm9nfMIAmv2hCJBX1r9w7mhHAVzY0K9HeHCS3D0dC+AJcsVvfDkJgy1LyAFipkV9zdyCsfrecKgWIXpwtM/rt1TwAhJzLtia5dc2jOda5qrON5iJqB4QE91/GxXg5Fe+d0Q9IA2er+9BUNF5o5kANyjp2vcYvXCuhxdWq+BAAKan1jCH31Bc0bQaoBF8vO9lAdysK8unvZJD/0YEWu8W8QBnRp8Rcp4cjgDN4KM9gzfpWADxtR5m2mUNrbY+CQkUIO9Cu9l7JU4EeFmpYQI8TlmEhANAv96M4A9APJ5jVVXjVc1QVVxYBdAffN7P4kV1vPvBAogV04His+r5gN6MgG+6+mnmGu2NWEYBYqUM7Sqm5x0x+JIjpwDEO7yFpMrnEZp3Yv8ZBBvqM5n48EVH3RYCCilA7+qX6S9vh03xpdriobqy9dFmM350XW6GvZtcEDPsFHPYxVtweLYcypozqwF6w9mjntOqnfHNB3jvt1P3ag6sDfz5Yib8qqZzN6GrlLuWArIFwECDVTVWXkS/ndubmlACFJEyUgfxKzK0SIAGEz1nF4wr3gjjXRt6JJjwQtkDes//RMHb6Z4P6ns+KxBahY8J8FpJEyyduN5nXeBj6ZMIUTG7uS8wEg2RB48F0BfYQAHWKy2QQVxaFYu/8HAOSasFdARA79Vv0rI4bWsFi1CnjzilFSDg3BAXHKMHpMC8SVkQNWs3jF2/VVu0GP3BIiAaRcTqAUUiZK2A65R7UEyqtYvlePnoT9WNsvth9TO+bgMLT7Hm7ygphfjWLw3d/w0mQivxCdmGCRSRv8+LwiOqHTNbMCxARtswA9CDyhesYJ8JBwWgqKHUbDuih08R7YnAIwKxEWRWFiMEDaDoBYXR9kTjE9VuOAC0Y8IKYLDwiWhfAgzCW/KtGH7NtBnJAM0e4zkO4OCKgz0SjF8mnAEaRSQBmgDoDU8PJRgQeQCDjc+qXlACNAGQBkyPxCqEkQKQhceJ8z8uQBYsGhCRCMMZoL+9oFN7vzmz1tEB8kCxgIhC6ASAekRO6/0QHobZA0qAimW9oNN6Pw885hDsCxJvoSACYSQANHMrzigos+VY4YAvrACGwzaMP/eCebg8n4+UYZf2+X8BiNtPsRVgUpYAAAAASUVORK5CYII=","captchaEnabled":true,"uuid":"b32d699b8021468dbd0cb9c04d21b0d5"},"paramMsg":null,"errCode":null}
INFO    2025-04-15 09:14:29,972d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 获取验证码和uuid
INFO    2025-04-15 09:14:29,975d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 获取验证码和uuid
请求路径: http://47.107.113.31:18090/prod-api/code
请求方式: GET
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}
请求内容: None
接口响应内容: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"b32d699b8021468dbd0cb9c04d21b0d5"},"paramMsg":null,"errCode":null}
接口响应时长: 26.77 ms
Http状态码: 200
=====================================================
INFO    2025-04-15 09:14:29,981d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:30 data: {'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': None}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 09:14:29,982d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:172 ********开始获取依赖数据: code_01********
INFO    2025-04-15 09:14:30,018d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"56f0067a8697409083f27c6278a1a49f"},"paramMsg":null,"errCode":null}
INFO    2025-04-15 09:14:30,018d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 获取验证码和uuid
INFO    2025-04-15 09:14:30,021d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 获取验证码和uuid
请求路径: http://47.107.113.31:18090/prod-api/code
请求方式: GET
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}
请求内容: None
接口响应内容: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"56f0067a8697409083f27c6278a1a49f"},"paramMsg":null,"errCode":null}
接口响应时长: 29.8 ms
Http状态码: 200
=====================================================
INFO    2025-04-15 09:14:30,045d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
INFO    2025-04-15 09:14:30,045d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 正常登录
INFO    2025-04-15 09:14:30,047d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 正常登录
请求路径: http://47.107.113.31:18090/prod-api/user/login
请求方式: POST
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam', 'Content-Length': '114', 'Content-Type': 'application/json'}
请求内容: {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}
接口响应内容: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
接口响应时长: 20.81 ms
Http状态码: 200
=====================================================
ERROR   2025-04-15 09:14:30,049d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:152 用例总数: 2
ERROR   2025-04-15 09:14:30,051d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:153 异常用例数: 0
INFO    2025-04-15 09:14:30,051d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:156 用例执行时长: 0.25 s
INFO    2025-04-15 09:14:30,052d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:160 用例成功率: 100.00 %
INFO    2025-04-15 09:14:32,650d:\PytestAutoApi\logs\info-2025-04-15.log:main.py:35 Allure report generated, total cases: TestMetrics(passed=2, failed=0, skipped=0, total=2, broken=0, pass_rate=100.0, time=0.11)
INFO    2025-04-15 09:17:03,058d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:256 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-15 09:17:03,058d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 09:17:03,058d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:60 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 09:17:03,058d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:64 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 09:17:03,062d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:256 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependence_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-15 09:17:03,062d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:270 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependence_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-15 09:17:03,062d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependence_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 09:17:03,062d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:60 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': None}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 09:17:03,063d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:64 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': None}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 09:17:03,785d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:19 开始执行测试用例
INFO    2025-04-15 09:17:03,875d:\PytestAutoApi\logs\info-2025-04-15.log:test_get_code.py:13 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 09:17:03,880d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:13 TestData: [{'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': None}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 09:17:03,881d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:15 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': None}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 09:17:03,883d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:106 指定运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 09:17:03,883d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:115 运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 09:17:03,951d:\PytestAutoApi\logs\info-2025-04-15.log:test_get_code.py:24 data: {'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 09:17:03,984d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"5e4d4b057cf243509f6c35169be93711"},"paramMsg":null,"errCode":null}
INFO    2025-04-15 09:17:03,984d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 获取验证码和uuid
INFO    2025-04-15 09:17:03,988d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 获取验证码和uuid
请求路径: http://47.107.113.31:18090/prod-api/code
请求方式: GET
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}
请求内容: None
接口响应内容: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"5e4d4b057cf243509f6c35169be93711"},"paramMsg":null,"errCode":null}
接口响应时长: 28.94 ms
Http状态码: 200
=====================================================
INFO    2025-04-15 09:17:03,993d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:30 data: {'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': None}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 09:17:03,994d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:172 ********开始获取依赖数据: code_01********
INFO    2025-04-15 09:17:04,030d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"eb07606783af484f903cdcd073cc4c4a"},"paramMsg":null,"errCode":null}
INFO    2025-04-15 09:17:04,030d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 获取验证码和uuid
INFO    2025-04-15 09:17:04,032d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 获取验证码和uuid
请求路径: http://47.107.113.31:18090/prod-api/code
请求方式: GET
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}
请求内容: None
接口响应内容: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"eb07606783af484f903cdcd073cc4c4a"},"paramMsg":null,"errCode":null}
接口响应时长: 30.77 ms
Http状态码: 200
=====================================================
INFO    2025-04-15 09:17:04,056d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
INFO    2025-04-15 09:17:04,058d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 正常登录
INFO    2025-04-15 09:17:04,060d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 正常登录
请求路径: http://47.107.113.31:18090/prod-api/user/login
请求方式: POST
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam', 'Content-Length': '114', 'Content-Type': 'application/json'}
请求内容: {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}
接口响应内容: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
接口响应时长: 22.63 ms
Http状态码: 200
=====================================================
ERROR   2025-04-15 09:17:04,067d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:152 用例总数: 2
ERROR   2025-04-15 09:17:04,068d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:153 异常用例数: 0
INFO    2025-04-15 09:17:04,068d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:156 用例执行时长: 0.27 s
INFO    2025-04-15 09:17:04,069d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:160 用例成功率: 100.00 %
INFO    2025-04-15 09:17:06,634d:\PytestAutoApi\logs\info-2025-04-15.log:main.py:35 Allure report generated, total cases: TestMetrics(passed=2, failed=0, skipped=0, total=2, broken=0, pass_rate=100.0, time=0.11)
INFO    2025-04-15 09:25:01,944d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:256 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-15 09:25:01,944d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 09:25:01,944d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:60 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 09:25:01,944d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:64 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 09:25:01,957d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:256 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependence_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-15 09:25:01,957d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:270 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependence_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-15 09:25:01,957d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependence_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 09:25:01,957d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:60 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': None}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 09:25:01,958d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:64 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': None}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 09:25:02,682d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:19 开始执行测试用例
INFO    2025-04-15 09:25:02,779d:\PytestAutoApi\logs\info-2025-04-15.log:test_get_code.py:13 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 09:25:02,782d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:13 TestData: [{'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': None}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 09:25:02,784d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:15 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': None}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 09:25:02,785d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:106 指定运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 09:25:02,785d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:115 运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 09:25:02,849d:\PytestAutoApi\logs\info-2025-04-15.log:test_get_code.py:24 data: {'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 09:25:02,881d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"07001e70e8bc4f45b6e67804b12e3828"},"paramMsg":null,"errCode":null}
INFO    2025-04-15 09:25:02,882d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 获取验证码和uuid
INFO    2025-04-15 09:25:02,886d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 获取验证码和uuid
请求路径: http://47.107.113.31:18090/prod-api/code
请求方式: GET
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}
请求内容: None
接口响应内容: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"07001e70e8bc4f45b6e67804b12e3828"},"paramMsg":null,"errCode":null}
接口响应时长: 27.65 ms
Http状态码: 200
=====================================================
INFO    2025-04-15 09:25:02,893d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:30 data: {'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': None}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 09:25:02,894d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:172 ********开始获取依赖数据: code_01********
INFO    2025-04-15 09:25:02,930d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"2d86f799c372456ea83fcdbef1a59182"},"paramMsg":null,"errCode":null}
INFO    2025-04-15 09:25:02,930d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 获取验证码和uuid
INFO    2025-04-15 09:25:02,932d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 获取验证码和uuid
请求路径: http://47.107.113.31:18090/prod-api/code
请求方式: GET
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}
请求内容: None
接口响应内容: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"2d86f799c372456ea83fcdbef1a59182"},"paramMsg":null,"errCode":null}
接口响应时长: 32.03 ms
Http状态码: 200
=====================================================
INFO    2025-04-15 09:25:02,957d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
INFO    2025-04-15 09:25:02,957d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 正常登录
INFO    2025-04-15 09:25:02,960d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 正常登录
请求路径: http://47.107.113.31:18090/prod-api/user/login
请求方式: POST
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam', 'Content-Length': '114', 'Content-Type': 'application/json'}
请求内容: {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}
接口响应内容: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
接口响应时长: 20.97 ms
Http状态码: 200
=====================================================
ERROR   2025-04-15 09:25:02,968d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:152 用例总数: 2
ERROR   2025-04-15 09:25:02,969d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:153 异常用例数: 0
INFO    2025-04-15 09:25:02,973d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:156 用例执行时长: 0.28 s
INFO    2025-04-15 09:25:02,973d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:160 用例成功率: 100.00 %
INFO    2025-04-15 09:25:05,497d:\PytestAutoApi\logs\info-2025-04-15.log:main.py:35 Allure report generated, total cases: TestMetrics(passed=2, failed=0, skipped=0, total=2, broken=0, pass_rate=100.0, time=0.11)
INFO    2025-04-15 09:28:48,412d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:258 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-15 09:28:48,412d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 09:28:48,412d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:58 测试用例列表(CASE_ID)==========url='${{host()}}/code' method='GET' detail='获取验证码和uuid' assert_data={'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}} headers={'Content-Language': 'zh_CN', 'App-Source': 'WOcam'} requestType='NONE' is_run=None data=None dependence_case=False dependence_case_data=None sql=None setup_sql=None status_code=None teardown_sql=None teardown=None current_request_set_cache=None sleep=None
INFO    2025-04-15 09:28:48,412d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:62 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 09:28:48,412d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:66 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 09:28:48,412d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:258 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependence_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-15 09:28:48,412d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:272 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependence_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-15 09:28:48,412d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependence_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 09:28:48,412d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:58 测试用例列表(CASE_ID)==========url='${{host()}}/user/login' method='POST' detail='正常登录' assert_data={'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}} headers={'Content-Language': 'zh_CN', 'App-Source': 'WOcam'} requestType='JSON' is_run=None data={'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'} dependence_case=True dependence_case_data=[DependentCaseData(case_id='code_01', dependent_data=None)] sql=None setup_sql=None status_code=None teardown_sql=None teardown=None current_request_set_cache=None sleep=None
INFO    2025-04-15 09:28:48,412d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:62 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': None}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 09:28:48,412d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:66 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': None}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 09:28:49,131d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:19 开始执行测试用例
INFO    2025-04-15 09:28:49,221d:\PytestAutoApi\logs\info-2025-04-15.log:test_get_code.py:13 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 09:28:49,225d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:13 TestData: [{'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': None}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 09:28:49,227d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:15 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': None}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 09:28:49,229d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:106 指定运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 09:28:49,229d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:115 运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 09:28:49,292d:\PytestAutoApi\logs\info-2025-04-15.log:test_get_code.py:24 data: {'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 09:28:49,322d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"a162d979608c47eb8be5f57a7755dc52"},"paramMsg":null,"errCode":null}
INFO    2025-04-15 09:28:49,323d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 获取验证码和uuid
INFO    2025-04-15 09:28:49,326d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 获取验证码和uuid
请求路径: http://47.107.113.31:18090/prod-api/code
请求方式: GET
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}
请求内容: None
接口响应内容: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"a162d979608c47eb8be5f57a7755dc52"},"paramMsg":null,"errCode":null}
接口响应时长: 24.06 ms
Http状态码: 200
=====================================================
INFO    2025-04-15 09:28:49,332d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:30 data: {'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': None}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 09:28:49,332d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:172 ********开始获取依赖数据: code_01********
INFO    2025-04-15 09:28:49,361d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code":200,"msg":"操作成功","data":{"img":"iVBORw0KGgoAAAANSUhEUgAAAKAAAAA8CAYAAADha7EVAAAFoElEQVR42u3cR2gVQRgH8AgKHjxJEBQ8iHjQg4KIB29eBA+KDQ+KBUUFxQYWEBuxYCRqbAliAQsi2LCLGrFEjcaGxkY0Gk15EpOnxpT3XuKaCUzcMrM7uzuzO7P7Hf6QbHlJ9Mc3O7PfblYqldIgkLCSBf8IEAAIAYAQCACEAEAIBABCIpNR3dd3BQBCAofntA0AQoQBZNkOACGB4SPtB4CQQPGZj6MC7DFvotDAf9b/NLaktH2V7VrOp7/EAEAAKDSnatqo+AAgABSa4np7fCoBZMWnPx4Ahpjy32lHfAAQAApJfXNay/vcLhRg/7ZGS5QByCNVP+q0fstnWfAtOl4oJYodl4e6itef09ya0g5+Y8PnFSANm0iE0gGcWpBrwTc6d4208II67+J343Xf9s/8AOor3dj8IY7HRBbgqZK7Fnz9V8zprIpRA+jm3NKGjAXY218ZrgD1+OwQRhYgQtbXNPT2XDBZu/f+dSjABk29agjrEJy9qqQzvIbgysa0tqXCiKuoLtO5jwdAWuULCqE0AKfs32apfnnXzoVW4VgBmoMB8vgdks0pLf+L8brvRHVb136/APWYWAHyRigFwGPFRRZ84/JzQh1iZQB4tMp43be7A+PP5lSkAHJdiPaSyrrvWp+lMwz40Cy4puGHcgD18PwivFVnvMbb2jEMf/uTNhwDADkEVTpz9bv88onnz7tQnDRERYBvCBOM58mM5Tg/AM2I3AAMaxjmDvDIvRsWfAuPFfrCx7JNZoCJprSWa1piuZTIEI/lBZCGTaYqyL0dCw292UumG/ANXD1fq//9ixs+PwjDAIg6XPabOlwOV7VrLa0p6QBmryqzRKmG1LE7N1iq3/VXz7hWP9UAnq41TjrQbbdkS5p6fBgAMTZSBfQLMbCW/MKiKxZ8c4/s8fWZqgN8YOpw2dQR1Hhgd06QAGfeHhBohD2UVJGo0XovnmbAh2bBfme9KgP8SOhwQSCdzgsKIKpqQQMU9ljmmLx1luq39+YlLheyKk5CGlqsHS5oKGY5NwiAeEiNBEDS0Dt84zKusymVlmFaO3LI1OFS8LW9czICADkDJM16UW6WvQhlYVl0WACaO1zQ8gtahmH9m3gtRNMA0iYUbpdgeMyQfQMcv2ezBR+aCYd1Z0MGgKy9fTwSa4AnH94hdjg/qygHgDEAyBuhK4CJZD2xw3nSvq2h3tsFgP8x0db7SNu93gEJDSC6tUaqfiXl76R+/iKISYgMAGmoSAD93n7jhZAZYOmnD0R8MrbYxx2gHheGEuZCNBeAI3KWEwGeLS0GgBzCqyUfQ8MIzQDRduUAkp7vwM94qPAIZBwBYmz4Xq++MioHcMjaRUSAa84cjSxA3h3RQQE0IyRd/ykF8PzTh9SHy9F1IQBUDyCPBDYJIXU5434/Vd5CAAAVBYgaStHjlCSAsw7tkhbcgUeDDfEKMKjrPwBIa6p8fJ86/J54cFtaeLwqYJARDXDCypGe0qv6OTHoc/XfCwGI3uFCAxjWQ+Z2+HgPwaoCRHAwOi+VSg9Lj9Gu+nnFmOW21R6nsalJCXwkgE7HqwxQD0XfhOoGHm3/0MRsps9zA9EWoLnbWcbXq7FgIlVA2RDyroD6qsUCkAamdsPFriCAbioqC0LlX1LuFZKMVVBEMEQEx+46j7YPwcMQvUw+nBBmxRFf3BDawbEDgtHpv/d6TRk5gLzwxBmhU3UyA/Sz9EL7WQAQADLhw+eTtgNAAOgJoRuA+DwAKABOHBHihWQngOY3JABAAWDiBpDl9Ru0fV4ARm4SAgDFQGR9OZEbhJFchgGA/KOH4gSMFWBkF6IBoDiEKH4Bmm/FFXUroAYAAkAiMLv7uSSApGYEjAwqIACk5sbuPEsQMPw1qRVLD5QElQVeJABeH/YUAPqE51ThSMfRhmA38HD+Aeusrs4g14WNAAAAAElFTkSuQmCC","captchaEnabled":true,"uuid":"ca66742a417a449eb3125bed37d23e47"},"paramMsg":null,"errCode":null}
INFO    2025-04-15 09:28:49,361d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 获取验证码和uuid
INFO    2025-04-15 09:28:49,362d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 获取验证码和uuid
请求路径: http://47.107.113.31:18090/prod-api/code
请求方式: GET
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}
请求内容: None
接口响应内容: {"code":200,"msg":"操作成功","data":{"img":"iVBORw0KGgoAAAANSUhEUgAAAKAAAAA8CAYAAADha7EVAAAFoElEQVR42u3cR2gVQRgH8AgKHjxJEBQ8iHjQg4KIB29eBA+KDQ+KBUUFxQYWEBuxYCRqbAliAQsi2LCLGrFEjcaGxkY0Gk15EpOnxpT3XuKaCUzcMrM7uzuzO7P7Hf6QbHlJ9Mc3O7PfblYqldIgkLCSBf8IEAAIAYAQCACEAEAIBABCIpNR3dd3BQBCAofntA0AQoQBZNkOACGB4SPtB4CQQPGZj6MC7DFvotDAf9b/NLaktH2V7VrOp7/EAEAAKDSnatqo+AAgABSa4np7fCoBZMWnPx4Ahpjy32lHfAAQAApJfXNay/vcLhRg/7ZGS5QByCNVP+q0fstnWfAtOl4oJYodl4e6itef09ya0g5+Y8PnFSANm0iE0gGcWpBrwTc6d4208II67+J343Xf9s/8AOor3dj8IY7HRBbgqZK7Fnz9V8zprIpRA+jm3NKGjAXY218ZrgD1+OwQRhYgQtbXNPT2XDBZu/f+dSjABk29agjrEJy9qqQzvIbgysa0tqXCiKuoLtO5jwdAWuULCqE0AKfs32apfnnXzoVW4VgBmoMB8vgdks0pLf+L8brvRHVb136/APWYWAHyRigFwGPFRRZ84/JzQh1iZQB4tMp43be7A+PP5lSkAHJdiPaSyrrvWp+lMwz40Cy4puGHcgD18PwivFVnvMbb2jEMf/uTNhwDADkEVTpz9bv88onnz7tQnDRERYBvCBOM58mM5Tg/AM2I3AAMaxjmDvDIvRsWfAuPFfrCx7JNZoCJprSWa1piuZTIEI/lBZCGTaYqyL0dCw292UumG/ANXD1fq//9ixs+PwjDAIg6XPabOlwOV7VrLa0p6QBmryqzRKmG1LE7N1iq3/VXz7hWP9UAnq41TjrQbbdkS5p6fBgAMTZSBfQLMbCW/MKiKxZ8c4/s8fWZqgN8YOpw2dQR1Hhgd06QAGfeHhBohD2UVJGo0XovnmbAh2bBfme9KgP8SOhwQSCdzgsKIKpqQQMU9ljmmLx1luq39+YlLheyKk5CGlqsHS5oKGY5NwiAeEiNBEDS0Dt84zKusymVlmFaO3LI1OFS8LW9czICADkDJM16UW6WvQhlYVl0WACaO1zQ8gtahmH9m3gtRNMA0iYUbpdgeMyQfQMcv2ezBR+aCYd1Z0MGgKy9fTwSa4AnH94hdjg/qygHgDEAyBuhK4CJZD2xw3nSvq2h3tsFgP8x0db7SNu93gEJDSC6tUaqfiXl76R+/iKISYgMAGmoSAD93n7jhZAZYOmnD0R8MrbYxx2gHheGEuZCNBeAI3KWEwGeLS0GgBzCqyUfQ8MIzQDRduUAkp7vwM94qPAIZBwBYmz4Xq++MioHcMjaRUSAa84cjSxA3h3RQQE0IyRd/ykF8PzTh9SHy9F1IQBUDyCPBDYJIXU5434/Vd5CAAAVBYgaStHjlCSAsw7tkhbcgUeDDfEKMKjrPwBIa6p8fJ86/J54cFtaeLwqYJARDXDCypGe0qv6OTHoc/XfCwGI3uFCAxjWQ+Z2+HgPwaoCRHAwOi+VSg9Lj9Gu+nnFmOW21R6nsalJCXwkgE7HqwxQD0XfhOoGHm3/0MRsps9zA9EWoLnbWcbXq7FgIlVA2RDyroD6qsUCkAamdsPFriCAbioqC0LlX1LuFZKMVVBEMEQEx+46j7YPwcMQvUw+nBBmxRFf3BDawbEDgtHpv/d6TRk5gLzwxBmhU3UyA/Sz9EL7WQAQADLhw+eTtgNAAOgJoRuA+DwAKABOHBHihWQngOY3JABAAWDiBpDl9Ru0fV4ARm4SAgDFQGR9OZEbhJFchgGA/KOH4gSMFWBkF6IBoDiEKH4Bmm/FFXUroAYAAkAiMLv7uSSApGYEjAwqIACk5sbuPEsQMPw1qRVLD5QElQVeJABeH/YUAPqE51ThSMfRhmA38HD+Aeusrs4g14WNAAAAAElFTkSuQmCC","captchaEnabled":true,"uuid":"ca66742a417a449eb3125bed37d23e47"},"paramMsg":null,"errCode":null}
接口响应时长: 25.21 ms
Http状态码: 200
=====================================================
INFO    2025-04-15 09:28:49,385d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
INFO    2025-04-15 09:28:49,386d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 正常登录
INFO    2025-04-15 09:28:49,388d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 正常登录
请求路径: http://47.107.113.31:18090/prod-api/user/login
请求方式: POST
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam', 'Content-Length': '114', 'Content-Type': 'application/json'}
请求内容: {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}
接口响应内容: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
接口响应时长: 18.6 ms
Http状态码: 200
=====================================================
ERROR   2025-04-15 09:28:49,392d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:152 用例总数: 2
ERROR   2025-04-15 09:28:49,392d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:153 异常用例数: 0
INFO    2025-04-15 09:28:49,393d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:156 用例执行时长: 0.24 s
INFO    2025-04-15 09:28:49,393d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:160 用例成功率: 100.00 %
INFO    2025-04-15 09:28:52,015d:\PytestAutoApi\logs\info-2025-04-15.log:main.py:35 Allure report generated, total cases: TestMetrics(passed=2, failed=0, skipped=0, total=2, broken=0, pass_rate=100.0, time=0.1)
INFO    2025-04-15 10:14:23,521d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:258 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-15 10:14:23,522d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependent_data': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 10:14:23,522d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:58 测试用例列表(CASE_ID)==========url='${{host()}}/code' method='GET' detail='获取验证码和uuid' assert_data={'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}} headers={'Content-Language': 'zh_CN', 'App-Source': 'WOcam'} requestType='NONE' is_run=None data=None dependence_case=False dependence_case_data=None sql=None setup_sql=None status_code=None teardown_sql=None teardown=None current_request_set_cache=None sleep=None
INFO    2025-04-15 10:14:23,522d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:62 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 10:14:23,522d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:66 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 10:14:23,534d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:258 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependence_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-15 10:14:23,534d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:272 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependence_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-15 10:14:23,534d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependent_data': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependence_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 10:14:23,534d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:58 测试用例列表(CASE_ID)==========url='${{host()}}/user/login' method='POST' detail='正常登录' assert_data={'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}} headers={'Content-Language': 'zh_CN', 'App-Source': 'WOcam'} requestType='JSON' is_run=None data={'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'} dependence_case=False dependence_case_data=[DependentCaseData(case_id='code_01', dependent_data=None)] sql=None setup_sql=None status_code=None teardown_sql=None teardown=None current_request_set_cache=None sleep=None
INFO    2025-04-15 10:14:23,535d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:62 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': None}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 10:14:23,535d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:66 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': None}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 10:14:24,250d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:19 开始执行测试用例
INFO    2025-04-15 10:14:24,349d:\PytestAutoApi\logs\info-2025-04-15.log:test_get_code.py:13 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 10:14:24,354d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:13 TestData: [{'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': None}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 10:14:24,355d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:15 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': None}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 10:14:24,357d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:106 指定运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 10:14:24,357d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:115 运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 10:14:24,418d:\PytestAutoApi\logs\info-2025-04-15.log:test_get_code.py:24 data: {'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 10:14:24,452d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"eb1aced26ba84aae891b16c83ddd5f52"},"paramMsg":null,"errCode":null}
INFO    2025-04-15 10:14:24,453d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 获取验证码和uuid
INFO    2025-04-15 10:14:24,455d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 获取验证码和uuid
请求路径: http://47.107.113.31:18090/prod-api/code
请求方式: GET
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}
请求内容: None
接口响应内容: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"eb1aced26ba84aae891b16c83ddd5f52"},"paramMsg":null,"errCode":null}
接口响应时长: 30.9 ms
Http状态码: 200
=====================================================
INFO    2025-04-15 10:14:24,462d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:30 data: {'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': None}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 10:14:24,486d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
INFO    2025-04-15 10:14:24,486d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 正常登录
INFO    2025-04-15 10:14:24,486d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 正常登录
请求路径: http://47.107.113.31:18090/prod-api/user/login
请求方式: POST
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam', 'Content-Length': '114', 'Content-Type': 'application/json'}
请求内容: {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}
接口响应内容: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
接口响应时长: 20.8 ms
Http状态码: 200
=====================================================
ERROR   2025-04-15 10:14:24,492d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:152 用例总数: 2
ERROR   2025-04-15 10:14:24,492d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:153 异常用例数: 0
INFO    2025-04-15 10:14:24,493d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:156 用例执行时长: 0.22 s
INFO    2025-04-15 10:14:24,493d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:160 用例成功率: 100.00 %
INFO    2025-04-15 10:14:28,619d:\PytestAutoApi\logs\info-2025-04-15.log:main.py:35 Allure report generated, total cases: TestMetrics(passed=2, failed=0, skipped=0, total=2, broken=0, pass_rate=100.0, time=0.07)
INFO    2025-04-15 10:16:19,081d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:258 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-15 10:16:19,082d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependent_data': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 10:16:19,082d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:58 测试用例列表(CASE_ID)==========url='${{host()}}/code' method='GET' detail='获取验证码和uuid' assert_data={'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}} headers={'Content-Language': 'zh_CN', 'App-Source': 'WOcam'} requestType='NONE' is_run=None data=None dependence_case=False dependence_case_data=None sql=None setup_sql=None status_code=None teardown_sql=None teardown=None current_request_set_cache=None sleep=None
INFO    2025-04-15 10:16:19,082d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:62 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 10:16:19,082d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:66 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 10:16:19,082d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:258 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-15 10:16:19,082d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:272 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-15 10:16:19,082d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependent_data': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 10:16:31,296d:\PytestAutoApi\logs\info-2025-04-15.log:main.py:35 Allure report generated, total cases: TestMetrics(passed=2, failed=0, skipped=0, total=2, broken=0, pass_rate=100.0, time=0.07)
INFO    2025-04-15 10:16:52,319d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-15 10:16:52,319d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependent_data': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 10:16:52,319d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 10:16:52,319d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 10:16:52,319d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-15 10:16:52,319d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-15 10:16:52,319d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependent_data': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 10:16:56,589d:\PytestAutoApi\logs\info-2025-04-15.log:main.py:35 Allure report generated, total cases: TestMetrics(passed=2, failed=0, skipped=0, total=2, broken=0, pass_rate=100.0, time=0.07)
INFO    2025-04-15 10:42:51,749d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-15 10:42:51,750d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependent_data': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 10:42:51,750d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 10:42:51,750d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 10:42:51,753d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-15 10:42:51,753d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-15 10:42:51,753d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependent_data': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 10:42:51,753d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 10:42:51,754d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 10:42:52,473d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:19 开始执行测试用例
INFO    2025-04-15 10:42:52,563d:\PytestAutoApi\logs\info-2025-04-15.log:test_get_code.py:13 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 10:42:52,566d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:13 TestData: [{'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 10:42:52,568d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:15 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 10:42:52,570d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:106 指定运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 10:42:52,571d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:115 运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 10:42:52,636d:\PytestAutoApi\logs\info-2025-04-15.log:test_get_code.py:24 data: {'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 10:42:52,671d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"aa4abe726b0e491986116d527a685b44"},"paramMsg":null,"errCode":null}
INFO    2025-04-15 10:42:52,671d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 获取验证码和uuid
INFO    2025-04-15 10:42:52,674d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 获取验证码和uuid
请求路径: http://47.107.113.31:18090/prod-api/code
请求方式: GET
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}
请求内容: None
接口响应内容: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"aa4abe726b0e491986116d527a685b44"},"paramMsg":null,"errCode":null}
接口响应时长: 30.19 ms
Http状态码: 200
=====================================================
INFO    2025-04-15 10:42:52,680d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:30 data: {'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 10:42:52,699d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
INFO    2025-04-15 10:42:52,700d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 正常登录
INFO    2025-04-15 10:42:52,702d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 正常登录
请求路径: http://47.107.113.31:18090/prod-api/user/login
请求方式: POST
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam', 'Content-Length': '114', 'Content-Type': 'application/json'}
请求内容: {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}
接口响应内容: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
接口响应时长: 17.03 ms
Http状态码: 200
=====================================================
ERROR   2025-04-15 10:42:52,705d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:152 用例总数: 2
ERROR   2025-04-15 10:42:52,706d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:153 异常用例数: 0
INFO    2025-04-15 10:42:52,706d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:156 用例执行时长: 0.21 s
INFO    2025-04-15 10:42:52,706d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:160 用例成功率: 100.00 %
INFO    2025-04-15 10:42:55,330d:\PytestAutoApi\logs\info-2025-04-15.log:main.py:35 Allure report generated, total cases: TestMetrics(passed=2, failed=0, skipped=0, total=2, broken=0, pass_rate=100.0, time=0.07)
INFO    2025-04-15 10:48:50,430d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-15 10:48:50,430d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependent_data': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 10:48:50,430d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 10:48:50,430d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 10:48:50,430d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-15 10:48:50,430d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-15 10:48:50,430d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependent_data': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 10:48:50,430d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 10:48:50,430d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 10:48:51,150d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:19 开始执行测试用例
INFO    2025-04-15 10:48:51,252d:\PytestAutoApi\logs\info-2025-04-15.log:test_get_code.py:13 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 10:48:51,264d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 10:48:51,266d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:106 指定运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 10:48:51,266d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:115 运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 10:48:51,347d:\PytestAutoApi\logs\info-2025-04-15.log:test_get_code.py:24 data: {'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 10:48:51,373d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"a0e0d61050344b26adc34de5d4fae6b5"},"paramMsg":null,"errCode":null}
INFO    2025-04-15 10:48:51,374d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 获取验证码和uuid
INFO    2025-04-15 10:48:51,377d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 获取验证码和uuid
请求路径: http://47.107.113.31:18090/prod-api/code
请求方式: GET
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}
请求内容: None
接口响应内容: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"a0e0d61050344b26adc34de5d4fae6b5"},"paramMsg":null,"errCode":null}
接口响应时长: 22.73 ms
Http状态码: 200
=====================================================
INFO    2025-04-15 10:48:51,383d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:29 data: {'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 10:48:51,403d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
INFO    2025-04-15 10:48:51,404d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 正常登录
INFO    2025-04-15 10:48:51,406d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 正常登录
请求路径: http://47.107.113.31:18090/prod-api/user/login
请求方式: POST
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam', 'Content-Length': '114', 'Content-Type': 'application/json'}
请求内容: {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}
接口响应内容: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
接口响应时长: 17.27 ms
Http状态码: 200
=====================================================
ERROR   2025-04-15 10:48:51,416d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:152 用例总数: 2
ERROR   2025-04-15 10:48:51,417d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:153 异常用例数: 0
INFO    2025-04-15 10:48:51,418d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:156 用例执行时长: 0.25 s
INFO    2025-04-15 10:48:51,418d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:160 用例成功率: 100.00 %
INFO    2025-04-15 10:48:54,138d:\PytestAutoApi\logs\info-2025-04-15.log:main.py:35 Allure report generated, total cases: TestMetrics(passed=2, failed=0, skipped=0, total=2, broken=0, pass_rate=100.0, time=0.07)
INFO    2025-04-15 10:51:48,211d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-15 10:51:48,211d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependent_data': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 10:51:48,211d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 10:51:48,211d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 10:51:48,211d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-15 10:51:48,211d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-15 10:51:48,211d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependent_data': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 10:51:48,211d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 10:51:48,211d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 10:51:48,940d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:19 开始执行测试用例
INFO    2025-04-15 10:51:49,033d:\PytestAutoApi\logs\info-2025-04-15.log:test_get_code.py:13 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 10:51:49,038d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 10:51:49,039d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:106 指定运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 10:51:49,040d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:115 运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 10:51:49,107d:\PytestAutoApi\logs\info-2025-04-15.log:test_get_code.py:24 data: {'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 10:51:49,146d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"841cf1a891f246e5bbfd805903a2d581"},"paramMsg":null,"errCode":null}
INFO    2025-04-15 10:51:49,149d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 获取验证码和uuid
INFO    2025-04-15 10:51:49,154d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 获取验证码和uuid
请求路径: http://47.107.113.31:18090/prod-api/code
请求方式: GET
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}
请求内容: None
接口响应内容: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"841cf1a891f246e5bbfd805903a2d581"},"paramMsg":null,"errCode":null}
接口响应时长: 22.43 ms
Http状态码: 200
=====================================================
INFO    2025-04-15 10:51:49,167d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:29 data: {'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 10:51:49,185d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
INFO    2025-04-15 10:51:49,186d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 正常登录
INFO    2025-04-15 10:51:49,188d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 正常登录
请求路径: http://47.107.113.31:18090/prod-api/user/login
请求方式: POST
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam', 'Content-Length': '114', 'Content-Type': 'application/json'}
请求内容: {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}
接口响应内容: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
接口响应时长: 15.46 ms
Http状态码: 200
=====================================================
ERROR   2025-04-15 10:51:49,191d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:152 用例总数: 2
ERROR   2025-04-15 10:51:49,191d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:153 异常用例数: 0
INFO    2025-04-15 10:51:49,192d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:156 用例执行时长: 0.23 s
INFO    2025-04-15 10:51:49,192d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:160 用例成功率: 100.00 %
INFO    2025-04-15 10:51:51,909d:\PytestAutoApi\logs\info-2025-04-15.log:main.py:35 Allure report generated, total cases: TestMetrics(passed=2, failed=0, skipped=0, total=2, broken=0, pass_rate=100.0, time=0.08)
INFO    2025-04-15 10:53:07,367d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-15 10:53:07,367d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependent_data': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 10:53:07,367d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 10:53:07,367d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 10:53:07,367d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-15 10:53:07,367d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-15 10:53:07,367d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependent_data': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 10:53:07,367d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 10:53:07,367d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 10:53:08,061d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:19 开始执行测试用例
INFO    2025-04-15 10:53:08,156d:\PytestAutoApi\logs\info-2025-04-15.log:test_get_code.py:13 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 10:53:08,161d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 10:53:08,164d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:106 指定运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 10:53:08,164d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:115 运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 10:53:08,229d:\PytestAutoApi\logs\info-2025-04-15.log:test_get_code.py:24 data: {'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 10:53:08,271d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"cb13316e6a634283b69a20829b885bd6"},"paramMsg":null,"errCode":null}
INFO    2025-04-15 10:53:08,273d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 获取验证码和uuid
INFO    2025-04-15 10:53:08,277d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 获取验证码和uuid
请求路径: http://47.107.113.31:18090/prod-api/code
请求方式: GET
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}
请求内容: None
接口响应内容: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"cb13316e6a634283b69a20829b885bd6"},"paramMsg":null,"errCode":null}
接口响应时长: 36.84 ms
Http状态码: 200
=====================================================
INFO    2025-04-15 10:53:08,286d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:29 data: {'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 10:53:08,313d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
INFO    2025-04-15 10:53:08,313d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 正常登录
INFO    2025-04-15 10:53:08,315d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 正常登录
请求路径: http://47.107.113.31:18090/prod-api/user/login
请求方式: POST
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam', 'Content-Length': '114', 'Content-Type': 'application/json'}
请求内容: {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}
接口响应内容: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
接口响应时长: 22.86 ms
Http状态码: 200
=====================================================
ERROR   2025-04-15 10:53:08,318d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:152 用例总数: 2
ERROR   2025-04-15 10:53:08,318d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:153 异常用例数: 0
INFO    2025-04-15 10:53:08,318d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:156 用例执行时长: 0.24 s
INFO    2025-04-15 10:53:08,318d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:160 用例成功率: 100.00 %
INFO    2025-04-15 10:53:11,483d:\PytestAutoApi\logs\info-2025-04-15.log:main.py:35 Allure report generated, total cases: TestMetrics(passed=2, failed=0, skipped=0, total=2, broken=0, pass_rate=100.0, time=0.09)
INFO    2025-04-15 11:08:07,176d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-15 11:08:07,178d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependent_data': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 11:08:07,178d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 11:08:07,178d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 11:08:07,178d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-15 11:08:07,178d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-15 11:08:07,178d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependent_data': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 11:08:07,178d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 11:08:07,178d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 11:08:07,887d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:19 开始执行测试用例
INFO    2025-04-15 11:08:07,990d:\PytestAutoApi\logs\info-2025-04-15.log:test_get_code.py:13 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 11:08:07,996d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 11:08:07,997d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:106 指定运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 11:08:07,997d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:115 运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 11:08:08,051d:\PytestAutoApi\logs\info-2025-04-15.log:test_get_code.py:24 data: {'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 11:08:08,085d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code":200,"msg":"操作成功","data":{"img":"iVBORw0KGgoAAAANSUhEUgAAAKAAAAA8CAYAAADha7EVAAAFeElEQVR42u3dy28bRRwH8Bw4cULckDjAjccfwI0eoUgcKyT+AdSWR9W4tIi0hbZSSUGkpGorqDgEVUghEiC1TlspJEgF2+uUxE7jmJDWieukSWq7Lnb8yOmHZoWj3fXO7CMzu7O7v8NXsmPP5OGPxjOzv4n7tre3AYPxK334R8AgQAwCxGAQIAYBBiEvjT/FDL6wCFAoON7PxyBAJiRZ+sFECKAIMFFB+OrEXgQoK5QoIESAkgMJM8IuvqAgZAJMvpfkGjc43nr7adOECWCzXofJL87C9Vi/aRCgRwC1MKyg7RaiDAhvHHleTTz2DhUfAvQBoBNYbhH6CbALj9z+Z/I3Jr5IARx55c2dIEBx+Lq31//OW+Ij0YINLcAuOu19BChm1COpl8tw6+QJWwBpfUQOoJOOE9mMGrcwRM4B/cCnvd9uteD2+fO28Jm9BbMQBhKgER9tDuglQD9Wwa9dPsAMD3wkmZ9GdcBuHR9wPAekIUSA/+Mzuy3rRrRdYG4gGqEUEokeYGtz2egCpOHzE6CXl+LcjGx2IRqRlAsFGD92VIdrYTyuPuZmFWyGEAFyAuhFMYLbt1W77bVAGo+rMHH6lA5W8rtvdx53uw1jRIgAOQIUWY61W3xW/RhhJC5f0qGaOHMGGrUaAgwCQN4FqbzwsfrTwsjFr+v39T45BpViUfd8BBgggCLfNnn124Wxmsn0gFpRlJ72YQP4+f5+NVwBpvanQDmoQPpQGjKnMpC/mIelq0uwkdqAZrkpPUBR+Mz6JzBqDx/CzYFPdZgyY2OmbcMEUAvPCqEjgFbJns5C6WYJWv+2XO8DhgXgeOwFmBoc1EH648IwdNptoQBlwmcHIVeA3SgfKpD8/g4kMtEFGI/t0282nzwBjWqV2hYBCqiGmf1sFupr9Ujg036fpakpHaD4x0fUwgNWO54ArfLr3k1Pw0LIvBJi/Hqn3VHneuXZMpRulCA3nFPnhSyE0/3T8GT5SWQA7hv6oAcQAWnVjtdGdKgBmlbzVppwf/Q+G2FsGrYqW6EH2KhUYPToYR2eOz+M2GobaYC0ahgnv1Q1X4X0R2kqwsUri9xe6HdfXuSe3f5MnU4Hbg9/o4Pz+7lz6mJEBEC3+PwCSEPIDSBJJVthjoT1Uj20AI0VLmT7hWzD2IXiJUCvFh92nsOsiHYTMi+kAVz+eTm0AO3W9vGIbPjcAnx28g3+xzI305tUgHe/uosAOUTGS2pOARJ8Qs4FN2tNKkAyRwzrQgQBSjICsvYPUwdSCBABiv/PCNQrJAeV0O4HBgmglKtgbm/BlSZzP9Cq/V/PDfZEdoQ8+vNyxAs1wI3kBhVg/lLeEp2bx/1ESPopHn/dVhCgBwDnv5ynAlydWDXF5aR/vxFqQTltzwKJADlk/c91ZoUMKdPigYk3QjuQjGh4jKDaPoO26BC+CJk7Owdrk2vqtootfIl1dZVLA/gg/sAWoj1XRzxHaAXRCI/3HJL0jwApK1lS7TL/9bwKiFTBtOot3YKDzPnIBjPrEhxpLwKPqAUK78Ppsi1C/EBoWYwg6j9j5YZy0G60AwOQNvKJDgLkDJDs+RWvFYXCQYAhBkiKSO/9eE/du3Najk8OKm1tbnmCRiRCBOhBSb7dWr+VX1Zg4cKCej2XLDbUE3LvKzAzMKOejiuMFeDRzCO1atpLMGEZBRGgRwkaQC8QejnSSncsEwE637OTuU+ZENo6mI4A3V8JcYpnN23DGl8+JyQoq2A3qNxeC0aACBCDABEgAgwIQsSHAH1DiPj45ZmhQ47jO8BrNcVVeGBCfHzR+dFemhHQz4poRCdHv9J9XKsXZ0KiiE/W79OHL1C08D1+cc9OZECIACME0IhOBEKnAP8DkZ/C+hX1dX4AAAAASUVORK5CYII=","captchaEnabled":true,"uuid":"3528ddcce47c4ba6927da145eac19a3e"},"paramMsg":null,"errCode":null}
INFO    2025-04-15 11:08:08,085d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 获取验证码和uuid
INFO    2025-04-15 11:08:08,089d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 获取验证码和uuid
请求路径: http://47.107.113.31:18090/prod-api/code
请求方式: GET
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}
请求内容: None
接口响应内容: {"code":200,"msg":"操作成功","data":{"img":"iVBORw0KGgoAAAANSUhEUgAAAKAAAAA8CAYAAADha7EVAAAFeElEQVR42u3dy28bRRwH8Bw4cULckDjAjccfwI0eoUgcKyT+AdSWR9W4tIi0hbZSSUGkpGorqDgEVUghEiC1TlspJEgF2+uUxE7jmJDWieukSWq7Lnb8yOmHZoWj3fXO7CMzu7O7v8NXsmPP5OGPxjOzv4n7tre3AYPxK334R8AgQAwCxGAQIAYBBiEvjT/FDL6wCFAoON7PxyBAJiRZ+sFECKAIMFFB+OrEXgQoK5QoIESAkgMJM8IuvqAgZAJMvpfkGjc43nr7adOECWCzXofJL87C9Vi/aRCgRwC1MKyg7RaiDAhvHHleTTz2DhUfAvQBoBNYbhH6CbALj9z+Z/I3Jr5IARx55c2dIEBx+Lq31//OW+Ij0YINLcAuOu19BChm1COpl8tw6+QJWwBpfUQOoJOOE9mMGrcwRM4B/cCnvd9uteD2+fO28Jm9BbMQBhKgER9tDuglQD9Wwa9dPsAMD3wkmZ9GdcBuHR9wPAekIUSA/+Mzuy3rRrRdYG4gGqEUEokeYGtz2egCpOHzE6CXl+LcjGx2IRqRlAsFGD92VIdrYTyuPuZmFWyGEAFyAuhFMYLbt1W77bVAGo+rMHH6lA5W8rtvdx53uw1jRIgAOQIUWY61W3xW/RhhJC5f0qGaOHMGGrUaAgwCQN4FqbzwsfrTwsjFr+v39T45BpViUfd8BBgggCLfNnn124Wxmsn0gFpRlJ72YQP4+f5+NVwBpvanQDmoQPpQGjKnMpC/mIelq0uwkdqAZrkpPUBR+Mz6JzBqDx/CzYFPdZgyY2OmbcMEUAvPCqEjgFbJns5C6WYJWv+2XO8DhgXgeOwFmBoc1EH648IwdNptoQBlwmcHIVeA3SgfKpD8/g4kMtEFGI/t0282nzwBjWqV2hYBCqiGmf1sFupr9Ujg036fpakpHaD4x0fUwgNWO54ArfLr3k1Pw0LIvBJi/Hqn3VHneuXZMpRulCA3nFPnhSyE0/3T8GT5SWQA7hv6oAcQAWnVjtdGdKgBmlbzVppwf/Q+G2FsGrYqW6EH2KhUYPToYR2eOz+M2GobaYC0ahgnv1Q1X4X0R2kqwsUri9xe6HdfXuSe3f5MnU4Hbg9/o4Pz+7lz6mJEBEC3+PwCSEPIDSBJJVthjoT1Uj20AI0VLmT7hWzD2IXiJUCvFh92nsOsiHYTMi+kAVz+eTm0AO3W9vGIbPjcAnx28g3+xzI305tUgHe/uosAOUTGS2pOARJ8Qs4FN2tNKkAyRwzrQgQBSjICsvYPUwdSCBABiv/PCNQrJAeV0O4HBgmglKtgbm/BlSZzP9Cq/V/PDfZEdoQ8+vNyxAs1wI3kBhVg/lLeEp2bx/1ESPopHn/dVhCgBwDnv5ynAlydWDXF5aR/vxFqQTltzwKJADlk/c91ZoUMKdPigYk3QjuQjGh4jKDaPoO26BC+CJk7Owdrk2vqtootfIl1dZVLA/gg/sAWoj1XRzxHaAXRCI/3HJL0jwApK1lS7TL/9bwKiFTBtOot3YKDzPnIBjPrEhxpLwKPqAUK78Ppsi1C/EBoWYwg6j9j5YZy0G60AwOQNvKJDgLkDJDs+RWvFYXCQYAhBkiKSO/9eE/du3Najk8OKm1tbnmCRiRCBOhBSb7dWr+VX1Zg4cKCej2XLDbUE3LvKzAzMKOejiuMFeDRzCO1atpLMGEZBRGgRwkaQC8QejnSSncsEwE637OTuU+ZENo6mI4A3V8JcYpnN23DGl8+JyQoq2A3qNxeC0aACBCDABEgAgwIQsSHAH1DiPj45ZmhQ47jO8BrNcVVeGBCfHzR+dFemhHQz4poRCdHv9J9XKsXZ0KiiE/W79OHL1C08D1+cc9OZECIACME0IhOBEKnAP8DkZ/C+hX1dX4AAAAASUVORK5CYII=","captchaEnabled":true,"uuid":"3528ddcce47c4ba6927da145eac19a3e"},"paramMsg":null,"errCode":null}
接口响应时长: 28.95 ms
Http状态码: 200
=====================================================
INFO    2025-04-15 11:08:08,101d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:29 data: {'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 11:08:08,117d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
INFO    2025-04-15 11:08:08,117d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 正常登录
INFO    2025-04-15 11:08:08,118d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 正常登录
请求路径: http://47.107.113.31:18090/prod-api/user/login
请求方式: POST
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam', 'Content-Length': '114', 'Content-Type': 'application/json'}
请求内容: {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}
接口响应内容: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
接口响应时长: 13.68 ms
Http状态码: 200
=====================================================
ERROR   2025-04-15 11:08:08,121d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:152 用例总数: 2
ERROR   2025-04-15 11:08:08,122d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:153 异常用例数: 0
INFO    2025-04-15 11:08:08,122d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:156 用例执行时长: 0.21 s
INFO    2025-04-15 11:08:08,122d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:160 用例成功率: 100.00 %
INFO    2025-04-15 11:08:10,464d:\PytestAutoApi\logs\info-2025-04-15.log:main.py:35 Allure report generated, total cases: TestMetrics(passed=2, failed=0, skipped=0, total=2, broken=0, pass_rate=100.0, time=0.07)
INFO    2025-04-15 11:10:22,864d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-15 11:10:22,864d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependent_data': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 11:10:22,864d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 11:10:22,864d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 11:10:22,864d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-15 11:10:22,864d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-15 11:10:22,880d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependent_data': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 11:10:22,880d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 11:10:22,880d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 11:10:23,578d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:19 开始执行测试用例
INFO    2025-04-15 11:10:23,669d:\PytestAutoApi\logs\info-2025-04-15.log:test_get_code.py:13 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 11:10:23,673d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 11:10:23,674d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:106 指定运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 11:10:23,676d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:115 运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 11:10:23,739d:\PytestAutoApi\logs\info-2025-04-15.log:test_get_code.py:24 data: {'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 11:10:23,751d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:164 _dependence_case_datas: None
INFO    2025-04-15 11:10:23,784d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"0cfd9f2123f149f59baa614b5fb86901"},"paramMsg":null,"errCode":null}
INFO    2025-04-15 11:10:23,785d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 获取验证码和uuid
INFO    2025-04-15 11:10:23,787d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 获取验证码和uuid
请求路径: http://47.107.113.31:18090/prod-api/code
请求方式: GET
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}
请求内容: None
接口响应内容: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"0cfd9f2123f149f59baa614b5fb86901"},"paramMsg":null,"errCode":null}
接口响应时长: 29.29 ms
Http状态码: 200
=====================================================
INFO    2025-04-15 11:10:23,796d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:29 data: {'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 11:10:23,796d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:164 _dependence_case_datas: [DependentCaseData(case_id='code_01', dependent_data=[DependentData(dependent_type='response', jsonpath='$.data.uuid', set_cache='code_01_uuid', replace_key=None), DependentData(dependent_type='response', jsonpath='$.data.code', set_cache='code_01_code', replace_key=None)])]
INFO    2025-04-15 11:10:23,817d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
INFO    2025-04-15 11:10:23,818d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 正常登录
INFO    2025-04-15 11:10:23,819d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 正常登录
请求路径: http://47.107.113.31:18090/prod-api/user/login
请求方式: POST
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam', 'Content-Length': '114', 'Content-Type': 'application/json'}
请求内容: {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}
接口响应内容: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
接口响应时长: 18.93 ms
Http状态码: 200
=====================================================
ERROR   2025-04-15 11:10:23,823d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:152 用例总数: 2
ERROR   2025-04-15 11:10:23,823d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:153 异常用例数: 0
INFO    2025-04-15 11:10:23,824d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:156 用例执行时长: 0.22 s
INFO    2025-04-15 11:10:23,824d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:160 用例成功率: 100.00 %
INFO    2025-04-15 11:10:26,242d:\PytestAutoApi\logs\info-2025-04-15.log:main.py:35 Allure report generated, total cases: TestMetrics(passed=2, failed=0, skipped=0, total=2, broken=0, pass_rate=100.0, time=0.08)
INFO    2025-04-15 11:10:58,176d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-15 11:10:58,176d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependent_data': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 11:10:58,176d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 11:10:58,176d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 11:10:58,176d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-15 11:10:58,176d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-15 11:10:58,176d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependent_data': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 11:10:58,176d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 11:10:58,176d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 11:10:58,884d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:19 开始执行测试用例
INFO    2025-04-15 11:10:58,986d:\PytestAutoApi\logs\info-2025-04-15.log:test_get_code.py:13 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 11:10:58,990d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 11:10:58,992d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:106 指定运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 11:10:58,993d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:115 运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 11:10:59,049d:\PytestAutoApi\logs\info-2025-04-15.log:test_get_code.py:24 data: {'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 11:10:59,061d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:164 _dependent_type: False
INFO    2025-04-15 11:10:59,061d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:165 _dependence_case_datas: None
INFO    2025-04-15 11:10:59,093d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"db83cb41de7844a48b6deb8231e33bed"},"paramMsg":null,"errCode":null}
INFO    2025-04-15 11:10:59,094d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 获取验证码和uuid
INFO    2025-04-15 11:10:59,098d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 获取验证码和uuid
请求路径: http://47.107.113.31:18090/prod-api/code
请求方式: GET
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}
请求内容: None
接口响应内容: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"db83cb41de7844a48b6deb8231e33bed"},"paramMsg":null,"errCode":null}
接口响应时长: 28.97 ms
Http状态码: 200
=====================================================
INFO    2025-04-15 11:10:59,104d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:29 data: {'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': False, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 11:10:59,105d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:164 _dependent_type: False
INFO    2025-04-15 11:10:59,105d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:165 _dependence_case_datas: [DependentCaseData(case_id='code_01', dependent_data=[DependentData(dependent_type='response', jsonpath='$.data.uuid', set_cache='code_01_uuid', replace_key=None), DependentData(dependent_type='response', jsonpath='$.data.code', set_cache='code_01_code', replace_key=None)])]
INFO    2025-04-15 11:10:59,126d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
INFO    2025-04-15 11:10:59,126d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 正常登录
INFO    2025-04-15 11:10:59,127d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 正常登录
请求路径: http://47.107.113.31:18090/prod-api/user/login
请求方式: POST
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam', 'Content-Length': '114', 'Content-Type': 'application/json'}
请求内容: {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}
接口响应内容: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
接口响应时长: 19.17 ms
Http状态码: 200
=====================================================
ERROR   2025-04-15 11:10:59,130d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:152 用例总数: 2
ERROR   2025-04-15 11:10:59,131d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:153 异常用例数: 0
INFO    2025-04-15 11:10:59,131d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:156 用例执行时长: 0.22 s
INFO    2025-04-15 11:10:59,131d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:160 用例成功率: 100.00 %
INFO    2025-04-15 11:11:01,539d:\PytestAutoApi\logs\info-2025-04-15.log:main.py:35 Allure report generated, total cases: TestMetrics(passed=2, failed=0, skipped=0, total=2, broken=0, pass_rate=100.0, time=0.08)
INFO    2025-04-15 11:14:08,427d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-15 11:14:08,427d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 11:14:08,427d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 11:14:08,427d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 11:14:08,431d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-15 11:14:08,431d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-15 11:14:08,431d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 11:14:08,431d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 11:14:08,431d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 11:14:09,141d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:19 开始执行测试用例
INFO    2025-04-15 11:14:09,232d:\PytestAutoApi\logs\info-2025-04-15.log:test_get_code.py:13 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 11:14:09,237d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 11:14:09,238d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:106 指定运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 11:14:09,239d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:115 运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 11:14:09,298d:\PytestAutoApi\logs\info-2025-04-15.log:test_get_code.py:24 data: {'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 11:14:09,299d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:164 _dependent_type: False
INFO    2025-04-15 11:14:09,299d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:165 _dependence_case_datas: None
INFO    2025-04-15 11:14:09,325d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code":200,"msg":"操作成功","data":{"img":"iVBORw0KGgoAAAANSUhEUgAAAKAAAAA8CAYAAADha7EVAAAFMUlEQVR42u3cWWgTQRgH8AoFxRdF8XrxoBQVBemDB4qiCCKCF4qKFwiK9EFErS9SUfRNBBHfFC9Qi7T1RpEa2qq1rZaa1rS21R4xmqRXoiZp0qe1E0nazcxuZpM9Zma/hz+lTXbbJj9m8s18uznDw8MSBGJVcuBFgABAhvJ3+WF4HQCgtQABIQCEAED9M/V7j2GBNxMAWgoQEAJACEdpvL8pGe4BjnfkJgNvLh/41L7nCmAqOkDIFz6rEeboiQ8Q8onPSoSKAN9PcxoaADGa4NCgtOX9fGlJxThizMBnFUIAyECOf96miA8AAkBDc7vrkio+AAgADUttb0VafHoA1IrKTIQA0KL8DHVLa6umcw/w6468eJisgsPeiFS34AuGr6PILZU41yRjN3zhaEjaW7eMCh/LAMfCyxShoeuArYe6MHyO9WUYOrtBPO86IgO2umoKANSas3NGQ9oJ8ZX3Y/iqF1THR0Wlc9oBYZn7OgbM4XsMALXCU3sMIauf75Lhq5nZJD0qOah6btEBOgdqpaWOCTJc1zqK44/xBpAELhOEOVrx0TyvfGYnNvq9KD5HdayoCP2hn9KGt7NlsAobNiYfVwP4fOsuxdgGIC0+b0kfhu/Lnu/UsEQFePjTehmqje/mSn1hLxVAtfPSQLQNwLBnpOrNl1e9qAqO+CO2Bni1/YwM1DLHRMkVaJA9J9spWA0i9wBpRz800qWOfn2vA5pgiQawwluOgXrquYM9T6/PgCSEpdMeJmNEAcIEwF/3ejF8D2a5NcMSCWDn71ZpVeVkGaaLLYVENHoWIakIETwES1iAaOqtzZNPvR8LWqTzc6K2BYg6XLbWLJRBOlC/UhqKRUwFmECXgJUOIZcAm3d+w0a/fkcAOy4dLpFGv9PO3TJEaNvNF/YoYtF7GSZx3rHg0o2CWrfgmChCPDf9GL72Yz3E59sF4N2uyzJABW9y440HalCMAEjChpDtuxszNYYBDHWPTL3zmuVVb/7/qlcJLGnbTaStuLo+BwYIgUw3UpkFEIVLgCSEzdvxqffHdR9V0SJiM4I35MY6XNBUTIPFiM+AwgEcu91GmnpfzWijXrLJJi9PvNM92f5N0VhU2l+/QgZne82ieDECAHVuRkBVb+V0vM1qoDJoykjDIsDUDhe0/IKWYWiPN2IdUAkgzXIM0/2Arr34gjOqhM2a6lgESNvbp0dod0LMAGj6ZZm+0n5ih3PQ+RcAWgBQbQtOOICR3iFih3PLgU4m/plIwT3LfreZAGm7YYQD2HHKTRz9Ap/+ZH7DooNX0gYAZv6ZMBUbS/g0AQw2/iHia9rckRU2I48DgGSAXFbBjevaiAD9zwaoEel6qzdGIRoBONtzJxAmvpoNcE/dDcVQASRd34FSv9hlCT6zzi0SwLHtWNyNgA0rWokAOy94mBilRBgNjb4zArcL0b3PBxUvLkefC1kZnVgAWOCfTAxrALkqQkhdzol+P9ZAWIUwHTQahACQkKFANH45JQlgW2E3AKTERYMUAJIuJXwyoDj9eh/22x4gLT6aYwAgaeG5yK0IcPBDkCkQLI9+ADBDgKRW+0RioRgz1akVVXAm+NSOBYCk+9eldDtnens10dYBs8GndA4AyOEoZWXVy8I5AKBOzQe87QcDQI4BGt0RwwM+QMgYQJ4CAAEgAASAABAACgTw5K1JsgBAAGgqPpqfAUAAaAo+1hECQIsAuo+WxGMGPpYRAkCTAabC0wOiFliiIgR8FADVoGWDEAACQMsAZgKKNYQAUL/8Ay1LbsEJLvSUAAAAAElFTkSuQmCC","captchaEnabled":true,"uuid":"e0d7c5c293434282845eba6fe01d6df3"},"paramMsg":null,"errCode":null}
INFO    2025-04-15 11:14:09,327d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 获取验证码和uuid
INFO    2025-04-15 11:14:09,331d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 获取验证码和uuid
请求路径: http://47.107.113.31:18090/prod-api/code
请求方式: GET
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}
请求内容: None
接口响应内容: {"code":200,"msg":"操作成功","data":{"img":"iVBORw0KGgoAAAANSUhEUgAAAKAAAAA8CAYAAADha7EVAAAFMUlEQVR42u3cWWgTQRgH8AoFxRdF8XrxoBQVBemDB4qiCCKCF4qKFwiK9EFErS9SUfRNBBHfFC9Qi7T1RpEa2qq1rZaa1rS21R4xmqRXoiZp0qe1E0nazcxuZpM9Zma/hz+lTXbbJj9m8s18uznDw8MSBGJVcuBFgABAhvJ3+WF4HQCgtQABIQCEAED9M/V7j2GBNxMAWgoQEAJACEdpvL8pGe4BjnfkJgNvLh/41L7nCmAqOkDIFz6rEeboiQ8Q8onPSoSKAN9PcxoaADGa4NCgtOX9fGlJxThizMBnFUIAyECOf96miA8AAkBDc7vrkio+AAgADUttb0VafHoA1IrKTIQA0KL8DHVLa6umcw/w6468eJisgsPeiFS34AuGr6PILZU41yRjN3zhaEjaW7eMCh/LAMfCyxShoeuArYe6MHyO9WUYOrtBPO86IgO2umoKANSas3NGQ9oJ8ZX3Y/iqF1THR0Wlc9oBYZn7OgbM4XsMALXCU3sMIauf75Lhq5nZJD0qOah6btEBOgdqpaWOCTJc1zqK44/xBpAELhOEOVrx0TyvfGYnNvq9KD5HdayoCP2hn9KGt7NlsAobNiYfVwP4fOsuxdgGIC0+b0kfhu/Lnu/UsEQFePjTehmqje/mSn1hLxVAtfPSQLQNwLBnpOrNl1e9qAqO+CO2Bni1/YwM1DLHRMkVaJA9J9spWA0i9wBpRz800qWOfn2vA5pgiQawwluOgXrquYM9T6/PgCSEpdMeJmNEAcIEwF/3ejF8D2a5NcMSCWDn71ZpVeVkGaaLLYVENHoWIakIETwES1iAaOqtzZNPvR8LWqTzc6K2BYg6XLbWLJRBOlC/UhqKRUwFmECXgJUOIZcAm3d+w0a/fkcAOy4dLpFGv9PO3TJEaNvNF/YoYtF7GSZx3rHg0o2CWrfgmChCPDf9GL72Yz3E59sF4N2uyzJABW9y440HalCMAEjChpDtuxszNYYBDHWPTL3zmuVVb/7/qlcJLGnbTaStuLo+BwYIgUw3UpkFEIVLgCSEzdvxqffHdR9V0SJiM4I35MY6XNBUTIPFiM+AwgEcu91GmnpfzWijXrLJJi9PvNM92f5N0VhU2l+/QgZne82ieDECAHVuRkBVb+V0vM1qoDJoykjDIsDUDhe0/IKWYWiPN2IdUAkgzXIM0/2Arr34gjOqhM2a6lgESNvbp0dod0LMAGj6ZZm+0n5ih3PQ+RcAWgBQbQtOOICR3iFih3PLgU4m/plIwT3LfreZAGm7YYQD2HHKTRz9Ap/+ZH7DooNX0gYAZv6ZMBUbS/g0AQw2/iHia9rckRU2I48DgGSAXFbBjevaiAD9zwaoEel6qzdGIRoBONtzJxAmvpoNcE/dDcVQASRd34FSv9hlCT6zzi0SwLHtWNyNgA0rWokAOy94mBilRBgNjb4zArcL0b3PBxUvLkefC1kZnVgAWOCfTAxrALkqQkhdzol+P9ZAWIUwHTQahACQkKFANH45JQlgW2E3AKTERYMUAJIuJXwyoDj9eh/22x4gLT6aYwAgaeG5yK0IcPBDkCkQLI9+ADBDgKRW+0RioRgz1akVVXAm+NSOBYCk+9eldDtnens10dYBs8GndA4AyOEoZWXVy8I5AKBOzQe87QcDQI4BGt0RwwM+QMgYQJ4CAAEgAASAABAACgTw5K1JsgBAAGgqPpqfAUAAaAo+1hECQIsAuo+WxGMGPpYRAkCTAabC0wOiFliiIgR8FADVoGWDEAACQMsAZgKKNYQAUL/8Ay1LbsEJLvSUAAAAAElFTkSuQmCC","captchaEnabled":true,"uuid":"e0d7c5c293434282845eba6fe01d6df3"},"paramMsg":null,"errCode":null}
接口响应时长: 23.34 ms
Http状态码: 200
=====================================================
INFO    2025-04-15 11:14:09,333d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:29 data: {'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 11:14:09,337d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:164 _dependent_type: True
INFO    2025-04-15 11:14:09,337d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:165 _dependence_case_datas: [DependentCaseData(case_id='code_01', dependent_data=[DependentData(dependent_type='response', jsonpath='$.data.uuid', set_cache='code_01_uuid', replace_key=None), DependentData(dependent_type='response', jsonpath='$.data.code', set_cache='code_01_code', replace_key=None)])]
INFO    2025-04-15 11:14:09,337d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:173 ********开始获取依赖数据: code_01********
INFO    2025-04-15 11:14:09,338d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:183 ********获取依赖数据成功: code_01********
INFO    2025-04-15 11:14:09,339d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:186 依赖数据: {'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 11:14:09,340d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:164 _dependent_type: False
INFO    2025-04-15 11:14:09,342d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:165 _dependence_case_datas: None
INFO    2025-04-15 11:14:09,373d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"1da516dfb5e3416c891d890a75f56bd0"},"paramMsg":null,"errCode":null}
INFO    2025-04-15 11:14:09,374d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 获取验证码和uuid
INFO    2025-04-15 11:14:09,375d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 获取验证码和uuid
请求路径: http://47.107.113.31:18090/prod-api/code
请求方式: GET
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}
请求内容: None
接口响应内容: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"1da516dfb5e3416c891d890a75f56bd0"},"paramMsg":null,"errCode":null}
接口响应时长: 29.79 ms
Http状态码: 200
=====================================================
INFO    2025-04-15 11:14:09,377d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:188 依赖响应数据: url='http://47.107.113.31:18090/prod-api/code' is_run=None detail='获取验证码和uuid' response_data='{"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"1da516dfb5e3416c891d890a75f56bd0"},"paramMsg":null,"errCode":null}' request_body=None method='GET' sql_data={'sql': None} yaml_data=TestCase(url='http://47.107.113.31:18090/prod-api/code', method='GET', detail='获取验证码和uuid', assert_data={'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, headers={'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, requestType='NONE', is_run=None, data=None, dependence_case=False, dependence_case_data=None, sql=None, setup_sql=None, status_code=None, teardown_sql=None, teardown=None, current_request_set_cache=None, sleep=None) headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'} cookie={} assert_data={'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}} res_time=29.79 status_code=200 teardown=None teardown_sql=None body=None
ERROR   2025-04-15 11:14:09,531d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:152 用例总数: 2
ERROR   2025-04-15 11:14:09,531d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:153 异常用例数: 0
INFO    2025-04-15 11:14:09,532d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:156 用例执行时长: 0.37 s
INFO    2025-04-15 11:14:09,532d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:160 用例成功率: 50.00 %
INFO    2025-04-15 11:14:12,057d:\PytestAutoApi\logs\info-2025-04-15.log:main.py:35 Allure report generated, total cases: TestMetrics(passed=1, failed=0, skipped=0, total=2, broken=1, pass_rate=50.0, time=0.1)
INFO    2025-04-15 11:19:25,444d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-15 11:19:25,444d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 11:19:25,444d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 11:19:25,444d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 11:19:25,444d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-15 11:19:25,444d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-15 11:19:25,444d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 11:19:25,444d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 11:19:25,444d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 11:19:26,200d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:19 开始执行测试用例
INFO    2025-04-15 11:19:26,295d:\PytestAutoApi\logs\info-2025-04-15.log:test_get_code.py:13 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 11:19:26,301d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 11:19:26,304d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:106 指定运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 11:19:26,304d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:115 运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 11:19:26,359d:\PytestAutoApi\logs\info-2025-04-15.log:test_get_code.py:24 data: {'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 11:19:26,375d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:166 _dependent_type: False
INFO    2025-04-15 11:19:26,376d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:167 _dependence_case_datas: None
INFO    2025-04-15 11:19:26,413d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"89c9c7a55d6b4da59344c641b6d45797"},"paramMsg":null,"errCode":null}
INFO    2025-04-15 11:19:26,414d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 获取验证码和uuid
INFO    2025-04-15 11:19:26,418d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 获取验证码和uuid
请求路径: http://47.107.113.31:18090/prod-api/code
请求方式: GET
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}
请求内容: None
接口响应内容: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"89c9c7a55d6b4da59344c641b6d45797"},"paramMsg":null,"errCode":null}
接口响应时长: 34.17 ms
Http状态码: 200
=====================================================
INFO    2025-04-15 11:19:26,422d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:29 data: {'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.code', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 11:19:26,423d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:166 _dependent_type: True
INFO    2025-04-15 11:19:26,423d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:167 _dependence_case_datas: [DependentCaseData(case_id='code_01', dependent_data=[DependentData(dependent_type='response', jsonpath='$.data.uuid', set_cache='code_01_uuid', replace_key=None), DependentData(dependent_type='response', jsonpath='$.data.code', set_cache='code_01_code', replace_key=None)])]
INFO    2025-04-15 11:19:26,423d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:175 ********开始获取依赖数据: code_01********
INFO    2025-04-15 11:19:26,426d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:185 ********获取依赖数据成功: code_01********
INFO    2025-04-15 11:19:26,426d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:188 依赖数据: {'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 11:19:26,426d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:166 _dependent_type: False
INFO    2025-04-15 11:19:26,426d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:167 _dependence_case_datas: None
INFO    2025-04-15 11:19:26,450d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"d65f3d0fbc5944699c4128fde79ebc79"},"paramMsg":null,"errCode":null}
INFO    2025-04-15 11:19:26,450d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 获取验证码和uuid
INFO    2025-04-15 11:19:26,452d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 获取验证码和uuid
请求路径: http://47.107.113.31:18090/prod-api/code
请求方式: GET
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}
请求内容: None
接口响应内容: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"d65f3d0fbc5944699c4128fde79ebc79"},"paramMsg":null,"errCode":null}
接口响应时长: 21.83 ms
Http状态码: 200
=====================================================
INFO    2025-04-15 11:19:26,453d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:190 依赖响应数据: url='http://47.107.113.31:18090/prod-api/code' is_run=None detail='获取验证码和uuid' response_data='{"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"d65f3d0fbc5944699c4128fde79ebc79"},"paramMsg":null,"errCode":null}' request_body=None method='GET' sql_data={'sql': None} yaml_data=TestCase(url='http://47.107.113.31:18090/prod-api/code', method='GET', detail='获取验证码和uuid', assert_data={'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, headers={'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, requestType='NONE', is_run=None, data=None, dependence_case=False, dependence_case_data=None, sql=None, setup_sql=None, status_code=None, teardown_sql=None, teardown=None, current_request_set_cache=None, sleep=None) headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'} cookie={} assert_data={'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}} res_time=21.83 status_code=200 teardown=None teardown_sql=None body=None
INFO    2025-04-15 11:19:26,453d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:38 获取obj达式{'code': 200, 'msg': '操作成功', 'data': {'img': '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', 'captchaEnabled': True, 'uuid': 'd65f3d0fbc5944699c4128fde79ebc79'}, 'paramMsg': None, 'errCode': None}对应的值
INFO    2025-04-15 11:19:26,454d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:39 获取jsonpath表达式$.data.uuid对应的值
INFO    2025-04-15 11:19:26,454d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:38 获取obj达式{'code': 200, 'msg': '操作成功', 'data': {'img': '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', 'captchaEnabled': True, 'uuid': 'd65f3d0fbc5944699c4128fde79ebc79'}, 'paramMsg': None, 'errCode': None}对应的值
INFO    2025-04-15 11:19:26,455d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:39 获取jsonpath表达式$.data.code对应的值
ERROR   2025-04-15 11:19:26,576d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:152 用例总数: 2
ERROR   2025-04-15 11:19:26,576d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:153 异常用例数: 0
INFO    2025-04-15 11:19:26,576d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:156 用例执行时长: 0.36 s
INFO    2025-04-15 11:19:26,577d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:160 用例成功率: 50.00 %
INFO    2025-04-15 11:19:29,098d:\PytestAutoApi\logs\info-2025-04-15.log:main.py:35 Allure report generated, total cases: TestMetrics(passed=1, failed=0, skipped=0, total=2, broken=1, pass_rate=50.0, time=0.1)
INFO    2025-04-15 11:21:41,790d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-15 11:21:41,790d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 11:21:41,791d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 11:21:41,791d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 11:21:41,799d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.code', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-15 11:21:41,799d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.code', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-15 11:21:41,799d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.code', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 11:21:41,800d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.code', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 11:21:41,800d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.code', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 11:21:42,514d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:19 开始执行测试用例
INFO    2025-04-15 11:21:42,604d:\PytestAutoApi\logs\info-2025-04-15.log:test_get_code.py:13 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 11:21:42,610d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.code', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 11:21:42,612d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:106 指定运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 11:21:42,612d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:115 运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 11:21:42,681d:\PytestAutoApi\logs\info-2025-04-15.log:test_get_code.py:24 data: {'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 11:21:42,682d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:166 _dependent_type: False
INFO    2025-04-15 11:21:42,682d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:167 _dependence_case_datas: None
INFO    2025-04-15 11:21:42,727d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code":200,"msg":"操作成功","data":{"img":"iVBORw0KGgoAAAANSUhEUgAAAKAAAAA8CAYAAADha7EVAAAIdklEQVR42u3c2W9UVRgA8CYmvhlNfDJGH3zxib/AuMQY35FA0KiUNYCyBNEINDUSUDS4IIIstY2lwaLW0hYqFGhLpchW2k73he60dPZ98eWz3yG3Todzzpy7zMyd0/PwhaS9906m/HLu+ZZ7CxKJBKhQkasoUH8EFQqgCgVwsceyDY9bFurvqQDqBpcv11YAJcEn8+cpgGoFVCugAqj2gAqgpNF76Gn1d1AAFUAFcBHjUwhzALAt0gEl/nL43HsA3ndthJWu1bDCWQhvu9bCatdm+ML3DVQEzkBPpE8BZIRnNggD7dNw89I9uPJ7L9SVdkDtz+1QW9IO58o6oKVmAG5fGYGRnlnwe8MKIEZ9qAE2uLbBMud7wrHDs5uAVQAfBoJq/KMXzp64qysuVXZD141J8DqDiw+gK+aGIs8+XfBSA1dM7Xor3/iVGzICdM+teEbg0WJRAUR8H7o/NoVPixVlxULA8gGlHoATQy5ye7UCXz4BrBv+VziYAHGfR8O0yb0DGkJXCFA8Lp6Iw0hslOz9cE/IQtgd6TX0ZewGURTg2ICTi+nvugEY7XdC0B+ZPycei5NbLcJ1XJ+A5ur+vAGYjMr0CtgRcVARfeTZA/64n3mxwegwLBtdQz33O/8RU1/QLghFAM5O+UhSQYNXX94J02Ne4c8LBiIw5JiB5j/7bA3P0lvwt74fDa1iiKQu9Bf13EL3ZtNf1g4I0wGMRWPQcLqbic/nDkmzfzMDjwuQlfHi7TYdDlwhqftAZ6ElXzrXCNMB7Lk1xbzt3h/1KnwiAJc7V1ERheNhIRS0c7FWaNWX14vw4sbCBZEpgJFwjNT1aPhuNAxLlb1mFCCuVjREWA9MByIQD1DPLfbslx7gQMc0c/VbevGAAigKcLtnFxURdj9GY+NcEI3hq9Rzq0PnpAfYVNVHxYd1wJeaP5WuhpexPWBZoIJZTkGE1yM3mSB2eoqo5+DKKANAFr5QIMpc/Tpbx6UEuKXgORKWZ8H3Y9PMfaAWP/iPgTvmWYCiNlRPPbYp3JIzfNkCOD7gYgLEup7MAGnFZ9OdkMpgVdoOB65s54IXyPG4KtKOOen/xfAXnH3sqQVhNAO2GiAt2v8eYwJ0zTxc/TWEmA23NY+SWzYZRihpJx0TLNP8c2EY+u9OQ8AXziuARrsh3F4wTreItNpYLbvD/uOm4KWufLSfZxPgB3ummHHi+x4mwK1Fk+SYtXVH4fTRTqG2W83JdrjTNEoK0fkI0JJhhGgiSjoYRvq/y3/aaxhfulacXoTZAFhxxMEFeJwDlBekczLuXZwA55dTRneDFdiyw32k3uEC7TYrcrwehNm4BbPqfxgttQOmhhDw2lYWsSue3JnVMAWwPeqAje7tuldAHEzAfWRq98TKkSxRhNkAyOr9PoKxpn8uKXFDNBJ72LqLxWFm3Ad3Gke45+Gwqs8TWlwAS/2nmBMxrGJ1anziKYbZuNMyTHYFKIJvU80J7jUmh91cyK3nBxcHQNz77fceZN5evXEvTMam4KDvsBDCda4tMBabsBSfnnOzARCTBh6+oa4ZoVLMUOcM9zpaRi01wK99h6iQ1ru2kjnAJz5rno9nj1TBm33bhBBqM4RmAaaCynRYsQdMLsOki8tn2AlLx7VxuZOQ88GLTETPH68k6FLPwX0er3uiBa6qsgKsL3dwC9F6AOJDS6xrXT3bLy/AYDxEiss0PK/e2p32Yq3hG2TqhYeQ9sScDABb6weZaHBKRg/AB5M+bkYsLUBeuQVxCXUE5rJmXhsvtThtRWHZDgDxUcp0z3KIAsTMmFeglhYgK/HgzQLqHWbAYVerEhDRa2QjCRnkJA96AfKyamzZSQvwXdd6Jhw9F8WRLdZ1ls6skhIgZqcsNDgpYxXA+lMOebNg3q0zktDXk+QVqJMTGVkAkkTklMOSJAT7vyyAOKwgLUDeY5V63nKAWTHvFiwrQHyUkoYGhwr0AESwLIB9bfflBUgbJtXiqL9E+AuyHuvEwOI1HqMhlAkgvsuFVpDG7kbQFxEGyMqo8dpWvC/GtgB5yQPenkUfLl9fU8y8zp3I/5toRCgTQFIFaBljttFEAOLkC2v1wxca2X1GcEmsmoShJAQnWDBJYOHBN2D1RvmF0GP+Uu6UTPKxMgIMB6NwoYK+F9xXWUVKLLxEBsevWMMIdh9STYYnivCRTsiSan5/F1fCY4FS6Ix0zU+6YG8Yx+4RGG96OrUfbMVt2C694NRCMuudMNhmG+5+MJ8Zx+MJcE77yXMjvEEEfNVHvuDTg/ARgIgCgVnxUqJkfLTbt6wAMaZGPFB18rYlLyXCQYZ8wyeKsICFArsi77jWmca327sXpuMPqB8uM0BtJSwvu2YYHvaXEbKd8b2yKkaQ4b+WAiQb4jk4uBryyjOswIy6OXyN++GyA8R4rbGIvGDyt5KbwvDw9o0POYVs/DyIhi8ZGQ2h9rtY28SCEAI4/8qJRARawq0E417vV/Ov58X9IA6m4kqJ+z8sseCjmV++flXoC2xf82JGww4Atcz35aZdZB+HNUF87RomFbjnw9IKDhjgE3K3Lt8jr2zThhfsHtrqlwpSZBXUEAoB1BuHXugSOs5sQdqKDDpbAGV8LlgEIEJj3YbxdzkDSPscPaDyAZ+RIQSZAGqrHG8fWCCKIxsARWFpxww/8xY3ZPxPzxeAyfs83QDNIkwHMN21WQ+gaz8XBaYwZq8Ew1r98hIg69UcZjApiJkDyMNnGKAZhDyARq9pFR6FMPNFaMsAGgXDAphrfAphHgI0AocG0C74FMLMIxTd/wkD1ACJIkoFaDd8CmEeAtQDUQOoB22ucCiE1gLUc/s1BDAVIi0QoNlaogKYnwj1rH6mAMoCQwG0FqFI98P2ALONQiHM3Uj+fzq4+CY/UH6sAAAAAElFTkSuQmCC","captchaEnabled":true,"uuid":"9b53dccacb8946e7bb6df4974c9324c7"},"paramMsg":null,"errCode":null}
INFO    2025-04-15 11:21:42,729d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 获取验证码和uuid
INFO    2025-04-15 11:21:42,732d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 获取验证码和uuid
请求路径: http://47.107.113.31:18090/prod-api/code
请求方式: GET
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}
请求内容: None
接口响应内容: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"9b53dccacb8946e7bb6df4974c9324c7"},"paramMsg":null,"errCode":null}
接口响应时长: 41.44 ms
Http状态码: 200
=====================================================
INFO    2025-04-15 11:21:42,739d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:29 data: {'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.code', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 11:21:42,739d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:166 _dependent_type: True
INFO    2025-04-15 11:21:42,740d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:167 _dependence_case_datas: [DependentCaseData(case_id='code_01', dependent_data=[DependentData(dependent_type='response', jsonpath='$.data.uuid', set_cache='code_01_uuid', replace_key=None), DependentData(dependent_type='response', jsonpath='$.code', set_cache='code_01_code', replace_key=None)])]
INFO    2025-04-15 11:21:42,740d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:175 ********开始获取依赖数据: code_01********
INFO    2025-04-15 11:21:42,741d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:185 ********获取依赖数据成功: code_01********
INFO    2025-04-15 11:21:42,742d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:188 依赖数据: {'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 11:21:42,742d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:166 _dependent_type: False
INFO    2025-04-15 11:21:42,743d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:167 _dependence_case_datas: None
INFO    2025-04-15 11:21:42,790d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"0dc4afc6430f4527be9656b6713243a6"},"paramMsg":null,"errCode":null}
INFO    2025-04-15 11:21:42,790d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 获取验证码和uuid
INFO    2025-04-15 11:21:42,792d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 获取验证码和uuid
请求路径: http://47.107.113.31:18090/prod-api/code
请求方式: GET
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}
请求内容: None
接口响应内容: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"0dc4afc6430f4527be9656b6713243a6"},"paramMsg":null,"errCode":null}
接口响应时长: 45.36 ms
Http状态码: 200
=====================================================
INFO    2025-04-15 11:21:42,793d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:190 依赖响应数据: url='http://47.107.113.31:18090/prod-api/code' is_run=None detail='获取验证码和uuid' response_data='{"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"0dc4afc6430f4527be9656b6713243a6"},"paramMsg":null,"errCode":null}' request_body=None method='GET' sql_data={'sql': None} yaml_data=TestCase(url='http://47.107.113.31:18090/prod-api/code', method='GET', detail='获取验证码和uuid', assert_data={'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, headers={'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, requestType='NONE', is_run=None, data=None, dependence_case=False, dependence_case_data=None, sql=None, setup_sql=None, status_code=None, teardown_sql=None, teardown=None, current_request_set_cache=None, sleep=None) headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'} cookie={} assert_data={'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}} res_time=45.36 status_code=200 teardown=None teardown_sql=None body=None
INFO    2025-04-15 11:21:42,794d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:38 获取obj达式{'code': 200, 'msg': '操作成功', 'data': {'img': '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', 'captchaEnabled': True, 'uuid': '0dc4afc6430f4527be9656b6713243a6'}, 'paramMsg': None, 'errCode': None}对应的值
INFO    2025-04-15 11:21:42,795d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:39 获取jsonpath表达式$.data.uuid对应的值
INFO    2025-04-15 11:21:42,795d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:38 获取obj达式{'code': 200, 'msg': '操作成功', 'data': {'img': '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', 'captchaEnabled': True, 'uuid': '0dc4afc6430f4527be9656b6713243a6'}, 'paramMsg': None, 'errCode': None}对应的值
INFO    2025-04-15 11:21:42,796d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:39 获取jsonpath表达式$.code对应的值
INFO    2025-04-15 11:21:42,825d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
INFO    2025-04-15 11:21:42,825d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 正常登录
INFO    2025-04-15 11:21:42,826d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 正常登录
请求路径: http://47.107.113.31:18090/prod-api/user/login
请求方式: POST
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam', 'Content-Length': '109', 'Content-Type': 'application/json'}
请求内容: {'username': 'test02', 'password': 'admin@lzy123', 'code': '200', 'uuid': '0dc4afc6430f4527be9656b6713243a6'}
接口响应内容: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
接口响应时长: 27.23 ms
Http状态码: 200
=====================================================
ERROR   2025-04-15 11:21:42,830d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:152 用例总数: 2
ERROR   2025-04-15 11:21:42,830d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:153 异常用例数: 0
INFO    2025-04-15 11:21:42,830d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:156 用例执行时长: 0.30 s
INFO    2025-04-15 11:21:42,830d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:160 用例成功率: 100.00 %
INFO    2025-04-15 11:21:45,224d:\PytestAutoApi\logs\info-2025-04-15.log:main.py:35 Allure report generated, total cases: TestMetrics(passed=2, failed=0, skipped=0, total=2, broken=0, pass_rate=100.0, time=0.15)
INFO    2025-04-15 14:41:14,473d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-15 14:41:14,494d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 14:41:14,495d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 14:41:14,495d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 14:41:14,504d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-15 14:41:14,505d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-15 14:41:14,505d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 14:41:14,506d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 14:41:14,506d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 14:41:15,007d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:19 开始执行测试用例
INFO    2025-04-15 14:41:15,106d:\PytestAutoApi\logs\info-2025-04-15.log:test_get_code.py:13 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 14:41:15,124d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:12 TestData: [{'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 14:41:15,124d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 14:41:15,124d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:106 指定运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 14:41:15,124d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:115 运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 14:41:15,190d:\PytestAutoApi\logs\info-2025-04-15.log:test_get_code.py:24 data: {'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 14:41:15,207d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:164 _dependent_type: False
INFO    2025-04-15 14:41:15,207d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:165 _dependence_case_datas: None
INFO    2025-04-15 14:41:15,240d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"cef13efd36544fda92b38d98170288f8"},"paramMsg":null,"errCode":null}
INFO    2025-04-15 14:41:15,242d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 获取验证码和uuid
INFO    2025-04-15 14:41:15,246d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 获取验证码和uuid
请求路径: http://47.107.113.31:18090/prod-api/code
请求方式: GET
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}
请求内容: None
接口响应内容: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"cef13efd36544fda92b38d98170288f8"},"paramMsg":null,"errCode":null}
接口响应时长: 27.14 ms
Http状态码: 200
=====================================================
INFO    2025-04-15 14:41:15,250d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:29 data: {'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 14:41:15,250d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:164 _dependent_type: True
INFO    2025-04-15 14:41:15,254d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:165 _dependence_case_datas: [DependentCaseData(case_id='code_01', dependent_data=[DependentData(dependent_type='response', jsonpath='$.data.uuid', set_cache='code_01_uuid', replace_key=None), DependentData(dependent_type='response', jsonpath='$.data.img', set_cache='code_01_code', replace_key=None)])]
INFO    2025-04-15 14:41:15,254d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:173 ********开始获取依赖数据: code_01********
INFO    2025-04-15 14:41:15,255d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:183 ********获取依赖数据成功: code_01********
INFO    2025-04-15 14:41:15,255d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:186 依赖数据: {'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 14:41:15,255d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:164 _dependent_type: False
INFO    2025-04-15 14:41:15,255d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:165 _dependence_case_datas: None
INFO    2025-04-15 14:41:15,284d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code":200,"msg":"操作成功","data":{"img":"iVBORw0KGgoAAAANSUhEUgAAAKAAAAA8CAYAAADha7EVAAAGE0lEQVR42u3cX2wURRgA8L76JvHVGBOJRhNfFGJATeODiT5obCSIxvhEUDEmqCG+GCsqiKgkYCREjCLFAhFraxGoirHUUpWWNvawAjatlD+9u97t3d7t3t6DGTubXHO3O7O3f+bPzt738KW59nq37f5uZr5vvt22arWKIFoz/tt9V0PIOIY2OBGti8/P9wAghBB8shACQMAnFSEABIAAECI++EQjBIAAEAD6jdVPtYcOAAgAI8OT/RoAEEZAGAEBIAQAFAAw9+aNXKNVTrpVqaIrgwaa2FlAZ17Noe8fTqO+1Wn07cp51Lsqjfrb02hwwwIa3aKhfwfKyCxZygN84dBo00gswJU9kw0hC156wkBnOzXU90Aa9dw77zswzvEdGiplKsrVAZ24/Dw3UQBJ4EQjvP57GQ2uzwVCR4r+hzLo8qmyEgCDwEvsFOwFTSTCqPCcceGgHvu94LD4EgPQDzBRCJ2A8JoPr+9mT5SQNl2x14S1tWH2vIn+/lJHJx/LeCKc+0XMSCgaH/cs2MpfRfnty1349L5XEg9waOMCujpkLIHzikrZQiOb81SAxx/J2M+JYz9grAEWDz3nwlf47FHh+EQiHHopZ49sgT+sZhX98GSWivCfb/TYZvpcpuCoYUx87cKX33GHPSomGWCUuHREpwI881ou1gCZJyHRp97bGgG+dRMyp4eFJh+16L+h2BBxPZHFKxYVIF5Lxr3mybQME+kf2f2sa/Qrn94lrPSiKkC8XqQB7L1vXpniO5NCdOipd6zbve47sEYaPpUAepVx8K5JEneKmAK0cnMo/96tjeu+xSzY0q4DQB+hzVQ8M2EA2CTwSOcc/cypk1y33ZIE8OJhehLy2+t5AOgV5bMHCPW+TVwPPmkAf1pHL8PgQjYA9Jp6t93SOPV+dDeySnkA6DNmjpWo+AaeyPgqaLcswML+DvfUe+FH7gefFIDlbMUus9AAXhsxEtuuFhlgeWSfe+rt2Sjk4JMC8NeX6d0zqb3sj3eya53Q6PpwPzUiAbSyMyi/9ebGqXcxC+aV9SYRIO79o+Eb26pxeU/RALmNgIXPH3cXnIf3Cjt5qgM8/2mRig93UPN630QAJE292if3Cz2BKgNM7SHjw636eE+Y53srD5CU9dqJx8WfhZw8Jyjewfr4cX8gbb8Xd1SrmEzg9ZywJKTQtda93baYCYv6Y1UFaOQtu12LhO/08wtIn6+0FL5QAI3xI8QO58rcOABscpESrueRptypL3SlSynCAFqFNLHDufjVM0L/YJUAGpqFzr1PnnIHOrIomzKVr+UJA4i31kijnzn7h9R/QLNkhAWo2U2dgePSix+gY6umifhG39G4tNknFmDl8hgRH+sW+7gAdGIKekz6NcvuYCG21x+VO+UqmQVrex4kAjQme2PxKfRCGBRgGHDOaffU0+TGAlxiifr6UWLf9jvVA0i6vqN2jUecpgLahelBALLAga/faLazIQuhkgC1XSuIAEsDnbFbj5BuzSFyBMQXktNqfHhklIlPSYBG6jvqxeV4XajCIlnUGnBhyrRb54kNpWt6Q68nWQOs/8ozMfGTnDQFSOpyrvX7sTrYj9+dWoq4AAyTBZ9oT1H3dvEVb7I/iE50vBHWQwzVDYMbSvHllCSA+tENzPB5PY4LQBn3hXGGigAjjYDGnz3U6dc4d5g5Pl4IAaCiAPE9XGgAWVxkDgABYFvQVvulu1uZJS74eCAEgIoCdHY7s7y9GgAEgNzvjhUXgBD+AM6snyRG4gD6xQUIxQBsBo0nRADY4gCDwOKBEAC2MMAwoFgjBIAtChBDCpuEsEQoDODbyzqWAsOqf4xDdYDLu28nBgAUAPCe8hu+wgsWCaJMgAe3/BUIXZTniAZYAxSlDMMKYWCAy7YNu8JrxCNB9YJV/3uyANbw0RCGBSUbodIAndjqRzTnz2hTKul3vSDKAOhE53wcFZHM0TBRAOtHtPqfeeHzMwLKnoJ5A5Q9GtZKL1F3QWI1BbNYA6oAkCUaAMghC2429YbZigvymjwB8gDD4zVzxzd7Rj3AZs8FgIIBsk464jgKOteBsssw/wOObjkqkNtcGgAAAABJRU5ErkJggg==","captchaEnabled":true,"uuid":"6066f7e891c240c8b3a02f69aa24addb"},"paramMsg":null,"errCode":null}
INFO    2025-04-15 14:41:15,284d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 获取验证码和uuid
INFO    2025-04-15 14:41:15,287d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 获取验证码和uuid
请求路径: http://47.107.113.31:18090/prod-api/code
请求方式: GET
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}
请求内容: None
接口响应内容: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"6066f7e891c240c8b3a02f69aa24addb"},"paramMsg":null,"errCode":null}
接口响应时长: 26.88 ms
Http状态码: 200
=====================================================
INFO    2025-04-15 14:41:15,288d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:188 依赖响应数据: url='http://47.107.113.31:18090/prod-api/code' is_run=None detail='获取验证码和uuid' response_data='{"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"6066f7e891c240c8b3a02f69aa24addb"},"paramMsg":null,"errCode":null}' request_body=None method='GET' sql_data={'sql': None} yaml_data=TestCase(url='http://47.107.113.31:18090/prod-api/code', method='GET', detail='获取验证码和uuid', assert_data={'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, headers={'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, requestType='NONE', is_run=None, data=None, dependence_case=False, dependence_case_data=None, sql=None, setup_sql=None, status_code=None, teardown_sql=None, teardown=None, current_request_set_cache=None, sleep=None) headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'} cookie={} assert_data={'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}} res_time=26.88 status_code=200 teardown=None teardown_sql=None body=None
INFO    2025-04-15 14:41:15,312d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
INFO    2025-04-15 14:41:15,312d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 正常登录
INFO    2025-04-15 14:41:15,313d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 正常登录
请求路径: http://47.107.113.31:18090/prod-api/user/login
请求方式: POST
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam', 'Content-Length': '2258', 'Content-Type': 'application/json'}
请求内容: {'username': 'test02', 'password': 'admin@lzy123', 'code': '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', 'uuid': '6066f7e891c240c8b3a02f69aa24addb'}
接口响应内容: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
接口响应时长: 20.8 ms
Http状态码: 200
=====================================================
ERROR   2025-04-15 14:41:15,315d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:152 用例总数: 2
ERROR   2025-04-15 14:41:15,315d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:153 异常用例数: 0
INFO    2025-04-15 14:41:15,324d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:156 用例执行时长: 0.29 s
INFO    2025-04-15 14:41:15,324d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:160 用例成功率: 100.00 %
INFO    2025-04-15 14:41:23,186d:\PytestAutoApi\logs\info-2025-04-15.log:main.py:36 Allure report generated, total cases: TestMetrics(passed=2, failed=0, skipped=0, total=2, broken=0, pass_rate=100.0, time=0.12)
INFO    2025-04-15 15:05:18,083d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-15 15:05:18,084d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 15:05:18,084d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 15:05:18,084d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 15:05:18,086d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-15 15:05:18,087d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-15 15:05:18,087d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 15:05:18,087d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 15:05:18,087d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 15:05:18,367d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:19 开始执行测试用例
INFO    2025-04-15 15:05:18,435d:\PytestAutoApi\logs\info-2025-04-15.log:test_get_code.py:13 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 15:05:18,446d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:12 TestData: [{'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 15:05:18,446d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 15:05:18,446d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:106 指定运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 15:05:18,446d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:115 运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 15:05:18,494d:\PytestAutoApi\logs\info-2025-04-15.log:test_get_code.py:24 data: {'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 15:05:18,503d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:164 _dependent_type: False
INFO    2025-04-15 15:05:18,503d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:165 _dependence_case_datas: None
INFO    2025-04-15 15:05:18,535d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"c1a9b1a735054f9c89db8bec604741c2"},"paramMsg":null,"errCode":null}
INFO    2025-04-15 15:05:18,536d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 获取验证码和uuid
INFO    2025-04-15 15:05:18,539d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 获取验证码和uuid
请求路径: http://47.107.113.31:18090/prod-api/code
请求方式: GET
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}
请求内容: None
接口响应内容: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"c1a9b1a735054f9c89db8bec604741c2"},"paramMsg":null,"errCode":null}
接口响应时长: 28.74 ms
Http状态码: 200
=====================================================
INFO    2025-04-15 15:05:18,547d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:29 data: {'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 15:05:18,547d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:164 _dependent_type: True
INFO    2025-04-15 15:05:18,547d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:165 _dependence_case_datas: [DependentCaseData(case_id='code_01', dependent_data=[DependentData(dependent_type='response', jsonpath='$.data.uuid', set_cache='code_01_uuid', replace_key=None), DependentData(dependent_type='response', jsonpath='$.data.img', set_cache='code_01_code', replace_key=None)])]
INFO    2025-04-15 15:05:18,548d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:173 ********开始获取依赖数据: code_01********
INFO    2025-04-15 15:05:18,549d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:183 ********获取依赖数据成功: code_01********
INFO    2025-04-15 15:05:18,549d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:186 依赖数据: {'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 15:05:18,549d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:164 _dependent_type: False
INFO    2025-04-15 15:05:18,549d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:165 _dependence_case_datas: None
INFO    2025-04-15 15:05:18,576d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"8421170cf9634618927c9673fb3c7809"},"paramMsg":null,"errCode":null}
INFO    2025-04-15 15:05:18,577d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 获取验证码和uuid
INFO    2025-04-15 15:05:18,578d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 获取验证码和uuid
请求路径: http://47.107.113.31:18090/prod-api/code
请求方式: GET
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}
请求内容: None
接口响应内容: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"8421170cf9634618927c9673fb3c7809"},"paramMsg":null,"errCode":null}
接口响应时长: 24.96 ms
Http状态码: 200
=====================================================
INFO    2025-04-15 15:05:18,579d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:188 依赖响应数据: url='http://47.107.113.31:18090/prod-api/code' is_run=None detail='获取验证码和uuid' response_data='{"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"8421170cf9634618927c9673fb3c7809"},"paramMsg":null,"errCode":null}' request_body=None method='GET' sql_data={'sql': None} yaml_data=TestCase(url='http://47.107.113.31:18090/prod-api/code', method='GET', detail='获取验证码和uuid', assert_data={'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, headers={'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, requestType='NONE', is_run=None, data=None, dependence_case=False, dependence_case_data=None, sql=None, setup_sql=None, status_code=None, teardown_sql=None, teardown=None, current_request_set_cache=None, sleep=None) headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'} cookie={} assert_data={'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}} res_time=24.96 status_code=200 teardown=None teardown_sql=None body=None
INFO    2025-04-15 15:05:18,596d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
INFO    2025-04-15 15:05:18,596d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 正常登录
INFO    2025-04-15 15:05:18,597d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 正常登录
请求路径: http://47.107.113.31:18090/prod-api/user/login
请求方式: POST
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam', 'Content-Length': '2554', 'Content-Type': 'application/json'}
请求内容: {'username': 'test02', 'password': 'admin@lzy123', 'code': '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', 'uuid': '8421170cf9634618927c9673fb3c7809'}
接口响应内容: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
接口响应时长: 14.71 ms
Http状态码: 200
=====================================================
ERROR   2025-04-15 15:05:18,600d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:152 用例总数: 2
ERROR   2025-04-15 15:05:18,600d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:153 异常用例数: 0
INFO    2025-04-15 15:05:18,601d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:156 用例执行时长: 0.22 s
INFO    2025-04-15 15:05:18,601d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:160 用例成功率: 100.00 %
INFO    2025-04-15 15:05:21,204d:\PytestAutoApi\logs\info-2025-04-15.log:main.py:36 Allure report generated, total cases: TestMetrics(passed=2, failed=0, skipped=0, total=2, broken=0, pass_rate=100.0, time=0.1)
INFO    2025-04-15 16:00:05,415d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-15 16:00:05,415d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 16:00:05,416d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 16:00:05,416d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 16:00:05,420d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '${{generate_vcode($cache{code_01_code})}}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-15 16:00:05,420d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-15 16:00:05,420d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '${{generate_vcode($cache{code_01_code})}}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 16:00:05,422d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '${{generate_vcode($cache{code_01_code})}}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 16:00:05,422d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '${{generate_vcode($cache{code_01_code})}}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 16:00:05,705d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:19 开始执行测试用例
INFO    2025-04-15 16:00:05,781d:\PytestAutoApi\logs\info-2025-04-15.log:test_get_code.py:13 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 16:00:05,781d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:12 TestData: [{'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '${{generate_vcode($cache{code_01_code})}}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 16:00:05,896d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:106 指定运行顺序: [<Function test_get_code[获取验证码和uuid]>]
INFO    2025-04-15 16:00:05,896d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:115 运行顺序: [<Function test_get_code[获取验证码和uuid]>]
ERROR   2025-04-15 16:00:05,957d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:152 用例总数: 1
ERROR   2025-04-15 16:00:05,957d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:153 异常用例数: 1
INFO    2025-04-15 16:00:05,958d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:156 用例执行时长: 0.24 s
INFO    2025-04-15 16:00:05,958d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:160 用例成功率: 0.00 %
INFO    2025-04-15 16:00:08,107d:\PytestAutoApi\logs\info-2025-04-15.log:main.py:36 Allure report generated, total cases: TestMetrics(passed=0, failed=0, skipped=0, total=0, broken=0, pass_rate=0.0, time={})
INFO    2025-04-15 16:02:14,521d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-15 16:02:14,521d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 16:02:14,522d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 16:02:14,522d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 16:02:14,524d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '${{generate_vcode($cache{code_01_code})}}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-15 16:02:14,525d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-15 16:02:14,525d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '${{generate_vcode($cache{code_01_code})}}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 16:02:14,526d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '${{generate_vcode($cache{code_01_code})}}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 16:02:14,526d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '${{generate_vcode($cache{code_01_code})}}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 16:02:14,804d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:19 开始执行测试用例
INFO    2025-04-15 16:02:14,884d:\PytestAutoApi\logs\info-2025-04-15.log:test_get_code.py:13 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 16:02:14,884d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:12 TestData: [{'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '${{generate_vcode($cache{code_01_code})}}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 16:02:14,884d:\PytestAutoApi\logs\info-2025-04-15.log:regular_control.py:111 {'img': '$cache{code_01_code}'}
INFO    2025-04-15 16:02:14,984d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:106 指定运行顺序: [<Function test_get_code[获取验证码和uuid]>]
INFO    2025-04-15 16:02:14,984d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:115 运行顺序: [<Function test_get_code[获取验证码和uuid]>]
ERROR   2025-04-15 16:02:15,043d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:152 用例总数: 1
ERROR   2025-04-15 16:02:15,043d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:153 异常用例数: 1
INFO    2025-04-15 16:02:15,043d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:156 用例执行时长: 0.23 s
INFO    2025-04-15 16:02:15,043d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:160 用例成功率: 0.00 %
INFO    2025-04-15 16:02:17,231d:\PytestAutoApi\logs\info-2025-04-15.log:main.py:36 Allure report generated, total cases: TestMetrics(passed=0, failed=0, skipped=0, total=0, broken=0, pass_rate=0.0, time={})
INFO    2025-04-15 16:45:35,847d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-15 16:45:35,848d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 16:45:35,848d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 16:45:35,848d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 16:45:35,851d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-15 16:45:35,851d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-15 16:45:35,851d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 16:45:35,852d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 16:45:35,852d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 16:45:36,159d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:19 开始执行测试用例
INFO    2025-04-15 16:45:36,233d:\PytestAutoApi\logs\info-2025-04-15.log:test_get_code.py:13 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 16:45:36,236d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:12 TestData: [{'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 16:45:36,239d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 16:45:36,241d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:106 指定运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 16:45:36,241d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:115 运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 16:45:36,292d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:36 登录初始化
INFO    2025-04-15 16:45:37,344d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:60 验证码: 13
INFO    2025-04-15 16:45:37,344d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:61 uuid: eff49654ba8b43b6a36480c6faccfadd
INFO    2025-04-15 16:45:37,623d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:82 缓存中的token:Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJsb2dpblR5cGUiOiJsb2dpbiIsImxvZ2luSWQiOiJzeXNfdXNlcjoxNjU5MzkxNjY2MjU0NzA0NjQyIiwicm5TdHIiOiJ3a0YydG5vRVViZUFrTEx2VTQ0M2dOc2RaamxwT29vMCIsInVzZXJJZCI6MTY1OTM5MTY2NjI1NDcwNDY0Mn0.1xTdC5CU4HCvAGA6gOZGjZVvqjyGVpeFQw3PsVD58W0
INFO    2025-04-15 16:45:37,625d:\PytestAutoApi\logs\info-2025-04-15.log:test_get_code.py:24 data: {'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 16:45:37,640d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:164 _dependent_type: False
INFO    2025-04-15 16:45:37,640d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:165 _dependence_case_datas: None
INFO    2025-04-15 16:45:37,669d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"93e8112e1a644c2cbd79ac4e05fa0041"},"paramMsg":null,"errCode":null}
INFO    2025-04-15 16:45:37,670d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 获取验证码和uuid
INFO    2025-04-15 16:45:37,674d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 获取验证码和uuid
请求路径: http://47.107.113.31:18090/prod-api/code
请求方式: GET
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}
请求内容: None
接口响应内容: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"93e8112e1a644c2cbd79ac4e05fa0041"},"paramMsg":null,"errCode":null}
接口响应时长: 28.4 ms
Http状态码: 200
=====================================================
INFO    2025-04-15 16:45:37,681d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:29 data: {'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 16:45:37,681d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:164 _dependent_type: True
INFO    2025-04-15 16:45:37,682d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:165 _dependence_case_datas: [DependentCaseData(case_id='code_01', dependent_data=[DependentData(dependent_type='response', jsonpath='$.data.uuid', set_cache='code_01_uuid', replace_key=None), DependentData(dependent_type='response', jsonpath='$.data.img', set_cache='code_01_code', replace_key=None)])]
INFO    2025-04-15 16:45:37,682d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:173 ********开始获取依赖数据: code_01********
INFO    2025-04-15 16:45:37,683d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:183 ********获取依赖数据成功: code_01********
INFO    2025-04-15 16:45:37,684d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:186 依赖数据: {'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 16:45:37,684d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:164 _dependent_type: False
INFO    2025-04-15 16:45:37,684d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:165 _dependence_case_datas: None
INFO    2025-04-15 16:45:37,709d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"792de0d7144743038646eca71ac5adfa"},"paramMsg":null,"errCode":null}
INFO    2025-04-15 16:45:37,710d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 获取验证码和uuid
INFO    2025-04-15 16:45:37,714d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 获取验证码和uuid
请求路径: http://47.107.113.31:18090/prod-api/code
请求方式: GET
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}
请求内容: None
接口响应内容: {"code":200,"msg":"操作成功","data":{"img":"iVBORw0KGgoAAAANSUhEUgAAAKAAAAA8CAYAAADha7EVAAAHAklEQVR42u2cS2wbRRjHe0BC4sIdCc6AKiROwI0LEicqcQOO5AaqkKhU0ROIHhCqgCIhWudNi6jURI3ThLopedQh7zROeNlO4mfiZ2nqxI7tSEjDfis2Mc5849mXszs7h78UrWe+TaxfZuZ7zHfq4OCASEmdlE7JL0FKAiglAeRRPBjXJfkFS5kG0AxQEkYpUwBaCY6EUEoCKCW3YCkp6YRIyTCMlJQEUMpdAKZ3a2QmWyH+xB7pje6SzkhJVY/yMzybVj6DMfKLpWs7/TeZn1knP/tD5MfeGdLfGVR1vedX9dncdFQdIwFsUrJUIzdje+RquMQlGBt7LEHUlEoWydDNJdJ79T6XYGw8VpAAVusHZHy7wg1es2Au2PAqeNVqjdwf/4sbvGZNKXPBhicBrNTqZChRNgyfJrABtrwGX6VSJaNDIcPwaQIbYMtzAN5O0rdcn6K5XIUUykdQ5cs19ZkPgXBYseU1AAO3V6lA9fmCZHFukxQLpcOxhfxj9Rl8RptzZ3jVWwAu5PepIF2JFMkX2/3kYv5LqrEtxQEBh4Q2d14B1CvwLS/EqCCB45HZwp0M+AwcEtrcpflNbwAIqxm2kq3vHG0FGIQwBtuOc3viOyawmmEr2eZ6ruV8GINtx/ncjvgAQjiFBg88bx6LQYjaSJaFBxDCKTR44DmvjVHExqgOG64EMKusUNjqFS/RVy8ahBCCwexsnUCccPD0tf/Jrvfksjvo6pWM84dVErECaoe1hbsewMkMPeTSHdkldcQADUAY242cBSE0IyqA05NhKjQ/dE+Tuo5wFIy91k0/C0JYR0gAARrMgQik8a0T24Zhjl6Y3QwgQHOl5y4Vml8Cv+u2B3OsgNk1AKZKuPOwqHjFegHEPGlQqs3bcDsATKceotvmg8W4ZZ40aEt5l3AArhRxYDZ2qroB3GB4w8uFfeEAXFtJosDENvK67cEczF5oOSEegGNbeNYjqcMB4VlR4V2iAfjB2CUUGMgFW7miToz9IR6AWOgEtE9JpbHgA5WVOaz0nGgAfuL3ocDs7+s/clTKVWZ6TjgAexEHBHQxd0kFrlGtDNeUgzJmD94lGoDf9wZQYGoGcuEwB7MHGRXhAOyK4AUFRo1j9sATFg3Azq5xFBijNjF74Amb+V1feflMW8UFIKuixWoAoYhVNABZFS1W24QiVgmgCQC7JIDmVsAuAVdAuQXLLfhEAexbx52QmoHIO8sJgXfR5px58SVVeoGyWzx/73d9d9rnhPQJ6IQMJ/EwjJGKZlYYhlZZ43YAoWgUA8ZIRTMzDOMPyUB0y4s4jED0PSQQ7WYAITjcrkD05L0/xQMwZDAVh4lVmAppP9EA/C2UsjQVxypMXV1Jigdg2mAxAiZmMUKpagrAk3RCOl7vOCb1OkK6fcUIaRGLEeqMbAirHAu9lIOVY0XxciynA6jBRnsOJVKQobC7HAvqBM2WYznSCwZNYQWpUX01fHVGWGeCUZBqFMALHYO2A4jB1/j59FTEEmhgLBbWCU6ETf9DOhZAVkl+QocjwirFyjAuJhkBEOB7P/wkU2YBbAWfpo/ePo87Igl+R+S1jXdQO9nMI3EBZN0H1nO395bBS0l6AWxe+bCV0AyAvPBp+vrTn0zd7X3q4AUycmvF1vCLowGEC+c+nReTGhV+ZPxapggAnn3rHHotk3UxCcADRcMZb1/LBC0iHixkMLIMiMCTxi4jzXFeTHcSgHrh0/TZh99SAYJsyfPZNw9ha5TmSWOXkaBzgtNheu6J96gy1JpjBNmKwbmYz1dIsVI/dDgAymCm/a05nAogzAuMrKGFBEvzMfKwWDp0OOA652ww6trWHK1AY33ObE4EZzazzYnABthKfHUWVeCb01S5GUC1OZHfguZEfmc3J2q1wrUaa2t7Ngi5xC5/rEKmxgYRuDQQj8USW8BIA472rN0AanOhtdqUifZsEHJxcns2PfBhc7gaVEKngxubu9zgDcT3yIP+y8fAa9kRAAGRZgNb7awC0Ax8zfOh2eTgjUX+BpUDy4byx06HjzZXV4teSKEFM2V1WwVnwxc+atE7mtojs4qjAXG+Roh4wKOBiGZY/rPnJgAbCwxmlLMebKvgbMCZT2vRe3d0jSzMblgS5xMWQCPwGAGQBaERAHn1bteArQCKJEcCiJ3j7LAnAfTQGdCKVcvsSmjmDCgBdKkXbNW5jderpY3XwjS8oJkB0O4zoMgQWh4HtANADEZWHBCzKwEUPBNiJ3xW2HcygF6Ez9JcsATQfCZEwiUBlABKAJ0D4NO1z1XZBVIw++yxeZFn/tElr8H3xoVXJYBWQagBCOONAuU1EIUDkAUf7WcJoCAA2gkhyy5vOZYZAHkhBACbx8kt2OUAsqpj2gkgD4SNZ0ApfgD/BTWM4CvcleAwAAAAAElFTkSuQmCC","captchaEnabled":true,"uuid":"792de0d7144743038646eca71ac5adfa"},"paramMsg":null,"errCode":null}
接口响应时长: 23.54 ms
Http状态码: 200
=====================================================
INFO    2025-04-15 16:45:37,716d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:188 依赖响应数据: url='http://47.107.113.31:18090/prod-api/code' is_run=None detail='获取验证码和uuid' response_data='{"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"792de0d7144743038646eca71ac5adfa"},"paramMsg":null,"errCode":null}' request_body=None method='GET' sql_data={'sql': None} yaml_data=TestCase(url='http://47.107.113.31:18090/prod-api/code', method='GET', detail='获取验证码和uuid', assert_data={'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, headers={'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, requestType='NONE', is_run=None, data=None, dependence_case=False, dependence_case_data=None, sql=None, setup_sql=None, status_code=None, teardown_sql=None, teardown=None, current_request_set_cache=None, sleep=None) headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'} cookie={} assert_data={'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}} res_time=23.54 status_code=200 teardown=None teardown_sql=None body=None
INFO    2025-04-15 16:45:37,738d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
INFO    2025-04-15 16:45:37,738d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 正常登录
INFO    2025-04-15 16:45:37,740d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 正常登录
请求路径: http://47.107.113.31:18090/prod-api/user/login
请求方式: POST
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam', 'Content-Length': '2574', 'Content-Type': 'application/json'}
请求内容: {'username': 'test02', 'password': 'admin@lzy123', 'code': 'iVBORw0KGgoAAAANSUhEUgAAAKAAAAA8CAYAAADha7EVAAAHAklEQVR42u2cS2wbRRjHe0BC4sIdCc6AKiROwI0LEicqcQOO5AaqkKhU0ROIHhCqgCIhWudNi6jURI3ThLopedQh7zROeNlO4mfiZ2nqxI7tSEjDfis2Mc5849mXszs7h78UrWe+TaxfZuZ7zHfq4OCASEmdlE7JL0FKAiglAeRRPBjXJfkFS5kG0AxQEkYpUwBaCY6EUEoCKCW3YCkp6YRIyTCMlJQEUMpdAKZ3a2QmWyH+xB7pje6SzkhJVY/yMzybVj6DMfKLpWs7/TeZn1knP/tD5MfeGdLfGVR1vedX9dncdFQdIwFsUrJUIzdje+RquMQlGBt7LEHUlEoWydDNJdJ79T6XYGw8VpAAVusHZHy7wg1es2Au2PAqeNVqjdwf/4sbvGZNKXPBhicBrNTqZChRNgyfJrABtrwGX6VSJaNDIcPwaQIbYMtzAN5O0rdcn6K5XIUUykdQ5cs19ZkPgXBYseU1AAO3V6lA9fmCZHFukxQLpcOxhfxj9Rl8RptzZ3jVWwAu5PepIF2JFMkX2/3kYv5LqrEtxQEBh4Q2d14B1CvwLS/EqCCB45HZwp0M+AwcEtrcpflNbwAIqxm2kq3vHG0FGIQwBtuOc3viOyawmmEr2eZ6ruV8GINtx/ncjvgAQjiFBg88bx6LQYjaSJaFBxDCKTR44DmvjVHExqgOG64EMKusUNjqFS/RVy8ahBCCwexsnUCccPD0tf/Jrvfksjvo6pWM84dVErECaoe1hbsewMkMPeTSHdkldcQADUAY242cBSE0IyqA05NhKjQ/dE+Tuo5wFIy91k0/C0JYR0gAARrMgQik8a0T24Zhjl6Y3QwgQHOl5y4Vml8Cv+u2B3OsgNk1AKZKuPOwqHjFegHEPGlQqs3bcDsATKceotvmg8W4ZZ40aEt5l3AArhRxYDZ2qroB3GB4w8uFfeEAXFtJosDENvK67cEczF5oOSEegGNbeNYjqcMB4VlR4V2iAfjB2CUUGMgFW7miToz9IR6AWOgEtE9JpbHgA5WVOaz0nGgAfuL3ocDs7+s/clTKVWZ6TjgAexEHBHQxd0kFrlGtDNeUgzJmD94lGoDf9wZQYGoGcuEwB7MHGRXhAOyK4AUFRo1j9sATFg3Azq5xFBijNjF74Amb+V1feflMW8UFIKuixWoAoYhVNABZFS1W24QiVgmgCQC7JIDmVsAuAVdAuQXLLfhEAexbx52QmoHIO8sJgXfR5px58SVVeoGyWzx/73d9d9rnhPQJ6IQMJ/EwjJGKZlYYhlZZ43YAoWgUA8ZIRTMzDOMPyUB0y4s4jED0PSQQ7WYAITjcrkD05L0/xQMwZDAVh4lVmAppP9EA/C2UsjQVxypMXV1Jigdg2mAxAiZmMUKpagrAk3RCOl7vOCb1OkK6fcUIaRGLEeqMbAirHAu9lIOVY0XxciynA6jBRnsOJVKQobC7HAvqBM2WYznSCwZNYQWpUX01fHVGWGeCUZBqFMALHYO2A4jB1/j59FTEEmhgLBbWCU6ETf9DOhZAVkl+QocjwirFyjAuJhkBEOB7P/wkU2YBbAWfpo/ePo87Igl+R+S1jXdQO9nMI3EBZN0H1nO395bBS0l6AWxe+bCV0AyAvPBp+vrTn0zd7X3q4AUycmvF1vCLowGEC+c+nReTGhV+ZPxapggAnn3rHHotk3UxCcADRcMZb1/LBC0iHixkMLIMiMCTxi4jzXFeTHcSgHrh0/TZh99SAYJsyfPZNw9ha5TmSWOXkaBzgtNheu6J96gy1JpjBNmKwbmYz1dIsVI/dDgAymCm/a05nAogzAuMrKGFBEvzMfKwWDp0OOA652ww6trWHK1AY33ObE4EZzazzYnABthKfHUWVeCb01S5GUC1OZHfguZEfmc3J2q1wrUaa2t7Ngi5xC5/rEKmxgYRuDQQj8USW8BIA472rN0AanOhtdqUifZsEHJxcns2PfBhc7gaVEKngxubu9zgDcT3yIP+y8fAa9kRAAGRZgNb7awC0Ax8zfOh2eTgjUX+BpUDy4byx06HjzZXV4teSKEFM2V1WwVnwxc+atE7mtojs4qjAXG+Roh4wKOBiGZY/rPnJgAbCwxmlLMebKvgbMCZT2vRe3d0jSzMblgS5xMWQCPwGAGQBaERAHn1bteArQCKJEcCiJ3j7LAnAfTQGdCKVcvsSmjmDCgBdKkXbNW5jderpY3XwjS8oJkB0O4zoMgQWh4HtANADEZWHBCzKwEUPBNiJ3xW2HcygF6Ez9JcsATQfCZEwiUBlABKAJ0D4NO1z1XZBVIw++yxeZFn/tElr8H3xoVXJYBWQagBCOONAuU1EIUDkAUf7WcJoCAA2gkhyy5vOZYZAHkhBACbx8kt2OUAsqpj2gkgD4SNZ0ApfgD/BTWM4CvcleAwAAAAAElFTkSuQmCC', 'uuid': '792de0d7144743038646eca71ac5adfa'}
接口响应内容: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
接口响应时长: 19.59 ms
Http状态码: 200
=====================================================
ERROR   2025-04-15 16:45:37,749d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:152 用例总数: 2
ERROR   2025-04-15 16:45:37,750d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:153 异常用例数: 0
INFO    2025-04-15 16:45:37,751d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:156 用例执行时长: 1.58 s
INFO    2025-04-15 16:45:37,752d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:160 用例成功率: 100.00 %
INFO    2025-04-15 16:45:40,334d:\PytestAutoApi\logs\info-2025-04-15.log:main.py:36 Allure report generated, total cases: TestMetrics(passed=2, failed=0, skipped=0, total=2, broken=0, pass_rate=100.0, time=0.12)
INFO    2025-04-15 17:19:11,074d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-15 17:19:11,074d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 17:19:11,074d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 17:19:11,074d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 17:19:11,088d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-15 17:19:11,088d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-15 17:19:11,088d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 17:19:11,090d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 17:19:11,090d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 17:19:11,430d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:19 开始执行测试用例
INFO    2025-04-15 17:19:11,528d:\PytestAutoApi\logs\info-2025-04-15.log:test_get_code.py:13 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 17:19:11,541d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:12 TestData: [{'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 17:19:11,541d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 17:19:11,545d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:108 指定运行顺序: [<Function test_get_code[获取验证码和uuid]>]
INFO    2025-04-15 17:19:11,545d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:117 运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 17:19:11,591d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:36 登录初始化
INFO    2025-04-15 17:19:12,526d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:60 验证码: 8
INFO    2025-04-15 17:19:12,526d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:61 uuid: 3b1f5a21e4dd474fa197e7d04ee92003
INFO    2025-04-15 17:19:12,785d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:82 缓存中的token:Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJsb2dpblR5cGUiOiJsb2dpbiIsImxvZ2luSWQiOiJzeXNfdXNlcjoxNjU5MzkxNjY2MjU0NzA0NjQyIiwicm5TdHIiOiI3SkF4T2lqSzdCSjI4aWduRFRQOHJXTmdyOXhBOUdZZSIsInVzZXJJZCI6MTY1OTM5MTY2NjI1NDcwNDY0Mn0.zQsUvA74IQYX0M4GF9XppKO6Ckv9_qEXluXfZZ7ptTU
INFO    2025-04-15 17:19:12,785d:\PytestAutoApi\logs\info-2025-04-15.log:test_get_code.py:24 data: {'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 17:19:12,787d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:164 _dependent_type: False
INFO    2025-04-15 17:19:12,787d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:165 _dependence_case_datas: None
INFO    2025-04-15 17:19:12,818d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"223637d3fd6c424ebe9b044e2edcd8a1"},"paramMsg":null,"errCode":null}
INFO    2025-04-15 17:19:12,818d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 获取验证码和uuid
INFO    2025-04-15 17:19:12,822d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 获取验证码和uuid
请求路径: http://47.107.113.31:18090/prod-api/code
请求方式: GET
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}
请求内容: None
接口响应内容: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"223637d3fd6c424ebe9b044e2edcd8a1"},"paramMsg":null,"errCode":null}
接口响应时长: 29.72 ms
Http状态码: 200
=====================================================
INFO    2025-04-15 17:19:12,826d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:29 data: {'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 17:19:12,828d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:164 _dependent_type: True
INFO    2025-04-15 17:19:12,829d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:165 _dependence_case_datas: [DependentCaseData(case_id='code_01', dependent_data=[DependentData(dependent_type='response', jsonpath='$.data.uuid', set_cache='code_01_uuid', replace_key=None), DependentData(dependent_type='response', jsonpath='$.data.img', set_cache='code_01_code', replace_key=None)])]
INFO    2025-04-15 17:19:12,829d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:173 ********开始获取依赖数据: code_01********
INFO    2025-04-15 17:19:12,830d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:183 ********获取依赖数据成功: code_01********
INFO    2025-04-15 17:19:12,831d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:186 依赖数据: {'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 17:19:12,831d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:164 _dependent_type: False
INFO    2025-04-15 17:19:12,831d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:165 _dependence_case_datas: None
INFO    2025-04-15 17:19:12,859d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"0265129d2c124a68b31401cf19b7de75"},"paramMsg":null,"errCode":null}
INFO    2025-04-15 17:19:12,859d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 获取验证码和uuid
INFO    2025-04-15 17:19:12,861d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 获取验证码和uuid
请求路径: http://47.107.113.31:18090/prod-api/code
请求方式: GET
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}
请求内容: None
接口响应内容: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"0265129d2c124a68b31401cf19b7de75"},"paramMsg":null,"errCode":null}
接口响应时长: 26.9 ms
Http状态码: 200
=====================================================
INFO    2025-04-15 17:19:12,861d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:188 依赖响应数据: url='http://47.107.113.31:18090/prod-api/code' is_run=None detail='获取验证码和uuid' response_data='{"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"0265129d2c124a68b31401cf19b7de75"},"paramMsg":null,"errCode":null}' request_body=None method='GET' sql_data={'sql': None} yaml_data=TestCase(url='http://47.107.113.31:18090/prod-api/code', method='GET', detail='获取验证码和uuid', assert_data={'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, headers={'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, requestType='NONE', is_run=None, data=None, dependence_case=False, dependence_case_data=None, sql=None, setup_sql=None, status_code=None, teardown_sql=None, teardown=None, current_request_set_cache=None, sleep=None) headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'} cookie={} assert_data={'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}} res_time=26.9 status_code=200 teardown=None teardown_sql=None body=None
INFO    2025-04-15 17:19:12,877d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
INFO    2025-04-15 17:19:12,878d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 正常登录
INFO    2025-04-15 17:19:12,878d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 正常登录
请求路径: http://47.107.113.31:18090/prod-api/user/login
请求方式: POST
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam', 'Content-Length': '2670', 'Content-Type': 'application/json'}
请求内容: {'username': 'test02', 'password': 'admin@lzy123', 'code': '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', 'uuid': '0265129d2c124a68b31401cf19b7de75'}
接口响应内容: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
接口响应时长: 13.4 ms
Http状态码: 200
=====================================================
ERROR   2025-04-15 17:19:12,884d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:154 用例总数: 2
ERROR   2025-04-15 17:19:12,884d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:155 异常用例数: 0
INFO    2025-04-15 17:19:12,884d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:158 用例执行时长: 1.42 s
INFO    2025-04-15 17:19:12,884d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:162 用例成功率: 100.00 %
INFO    2025-04-15 17:19:18,585d:\PytestAutoApi\logs\info-2025-04-15.log:main.py:36 Allure report generated, total cases: TestMetrics(passed=2, failed=0, skipped=0, total=2, broken=0, pass_rate=100.0, time=0.09)
INFO    2025-04-15 17:24:13,385d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-15 17:24:13,388d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 17:24:13,388d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 17:24:13,388d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 17:24:13,388d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-15 17:24:13,388d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-15 17:24:13,388d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 17:24:13,388d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 17:24:13,388d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 17:24:13,683d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:19 初始化conftest.py
INFO    2025-04-15 17:24:13,804d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:12 TestData: [{'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 17:24:13,854d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 17:24:13,854d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:108 指定运行顺序: []
INFO    2025-04-15 17:24:13,854d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:117 运行顺序: [<Function test_login[正常登录]>]
ERROR   2025-04-15 17:24:13,973d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:154 用例总数: 1
ERROR   2025-04-15 17:24:13,973d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:155 异常用例数: 1
INFO    2025-04-15 17:24:13,973d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:158 用例执行时长: 0.28 s
INFO    2025-04-15 17:24:13,973d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:162 用例成功率: 0.00 %
INFO    2025-04-15 17:24:16,129d:\PytestAutoApi\logs\info-2025-04-15.log:main.py:36 Allure report generated, total cases: TestMetrics(passed=0, failed=0, skipped=0, total=0, broken=0, pass_rate=0.0, time={})
INFO    2025-04-15 17:24:46,353d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-15 17:24:46,354d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 17:24:46,354d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 17:24:46,354d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 17:24:46,356d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-15 17:24:46,357d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-15 17:24:46,357d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 17:24:46,357d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 17:24:46,357d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 17:24:46,631d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:19 初始化conftest.py
INFO    2025-04-15 17:24:46,761d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:12 TestData: [{'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 17:24:46,811d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 17:24:46,811d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:108 指定运行顺序: []
INFO    2025-04-15 17:24:46,811d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:117 运行顺序: [<Function test_login[正常登录]>]
ERROR   2025-04-15 17:24:46,866d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:154 用例总数: 1
ERROR   2025-04-15 17:24:46,866d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:155 异常用例数: 1
INFO    2025-04-15 17:24:46,866d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:158 用例执行时长: 0.22 s
INFO    2025-04-15 17:24:46,866d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:162 用例成功率: 0.00 %
INFO    2025-04-15 17:24:48,891d:\PytestAutoApi\logs\info-2025-04-15.log:main.py:36 Allure report generated, total cases: TestMetrics(passed=0, failed=0, skipped=0, total=0, broken=0, pass_rate=0.0, time={})
INFO    2025-04-15 17:45:00,639d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': False, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-15 17:45:00,648d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': False, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 17:45:00,651d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': False, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 17:45:00,651d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': False, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 17:45:00,654d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-15 17:45:00,656d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-15 17:45:00,656d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 17:45:00,656d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 17:45:00,656d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 17:45:01,052d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:19 初始化conftest.py
INFO    2025-04-15 17:45:01,198d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:12 TestData: [{'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 17:45:01,198d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 17:45:01,202d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:108 指定运行顺序: [<Function test_get_code[获取验证码和uuid]>]
INFO    2025-04-15 17:45:01,202d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:117 运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 17:45:01,249d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:36 登录初始化
INFO    2025-04-15 17:45:01,414d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:60 验证码: 2
INFO    2025-04-15 17:45:01,415d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:61 uuid: b7c732d3ad7f44f1921a24c51131d77f
INFO    2025-04-15 17:45:01,687d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:82 缓存中的token:Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJsb2dpblR5cGUiOiJsb2dpbiIsImxvZ2luSWQiOiJzeXNfdXNlcjoxNjU5MzkxNjY2MjU0NzA0NjQyIiwicm5TdHIiOiIybnVOZ3dCRjU4dHpNOGJWWlhFdXIyTXlndVR2MTlOeSIsInVzZXJJZCI6MTY1OTM5MTY2NjI1NDcwNDY0Mn0.Ifmm9c77TwB0ahy9KPvE0HPZhJ5OszwXtJMgcnpyFUw
INFO    2025-04-15 17:45:01,758d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:29 data: {'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 17:45:01,771d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:164 _dependent_type: True
INFO    2025-04-15 17:45:01,772d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:165 _dependence_case_datas: [DependentCaseData(case_id='code_01', dependent_data=[DependentData(dependent_type='response', jsonpath='$.data.uuid', set_cache='code_01_uuid', replace_key=None), DependentData(dependent_type='response', jsonpath='$.data.img', set_cache='code_01_code', replace_key=None)])]
INFO    2025-04-15 17:45:01,772d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:173 ********开始获取依赖数据: code_01********
INFO    2025-04-15 17:45:01,773d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:183 ********获取依赖数据成功: code_01********
INFO    2025-04-15 17:45:01,774d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:186 依赖数据: {'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': False, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
ERROR   2025-04-15 17:45:01,981d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:154 用例总数: 2
ERROR   2025-04-15 17:45:01,981d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:155 异常用例数: 0
INFO    2025-04-15 17:45:01,983d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:158 用例执行时长: 0.91 s
INFO    2025-04-15 17:45:01,983d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:162 用例成功率: 0.00 %
INFO    2025-04-15 17:45:06,387d:\PytestAutoApi\logs\info-2025-04-15.log:main.py:36 Allure report generated, total cases: TestMetrics(passed=0, failed=0, skipped=1, total=2, broken=1, pass_rate=50.0, time=0.65)
INFO    2025-04-15 17:52:13,239d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': False, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-15 17:52:13,240d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': False, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 17:52:13,240d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': False, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 17:52:13,240d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': False, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 17:52:13,240d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-15 17:52:13,240d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-15 17:52:13,240d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 17:52:13,251d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 17:52:13,252d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 17:52:13,597d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:19 初始化conftest.py
INFO    2025-04-15 17:52:13,727d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:12 TestData: [{'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 17:52:13,727d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 17:52:13,732d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:108 指定运行顺序: [<Function test_get_code[获取验证码和uuid]>]
INFO    2025-04-15 17:52:13,732d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:117 运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 17:52:13,803d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:36 登录初始化
INFO    2025-04-15 17:52:13,946d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:60 验证码: 6
INFO    2025-04-15 17:52:13,947d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:61 uuid: 2b1dfe9ef5bb4d7bb95d154897ac3be4
INFO    2025-04-15 17:52:14,196d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:82 缓存中的token:Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJsb2dpblR5cGUiOiJsb2dpbiIsImxvZ2luSWQiOiJzeXNfdXNlcjoxNjU5MzkxNjY2MjU0NzA0NjQyIiwicm5TdHIiOiJucnZ6VFQ2TkhHWXJod1BJREprUnc2Rk5BVTdlNFlmcCIsInVzZXJJZCI6MTY1OTM5MTY2NjI1NDcwNDY0Mn0.3DlUTJ5wUDw9D4LYu38AWutl8mUMo2crNFMCEBv6aE0
INFO    2025-04-15 17:52:14,216d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:29 data: {'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 17:52:14,218d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:164 _dependent_type: True
INFO    2025-04-15 17:52:14,218d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:165 _dependence_case_datas: [DependentCaseData(case_id='code_01', dependent_data=[DependentData(dependent_type='response', jsonpath='$.data.uuid', set_cache='code_01_uuid', replace_key=None), DependentData(dependent_type='response', jsonpath='$.data.img', set_cache='code_01_code', replace_key=None)])]
INFO    2025-04-15 17:52:14,218d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:173 ********开始获取依赖数据: code_01********
INFO    2025-04-15 17:52:14,221d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:183 ********获取依赖数据成功: code_01********
INFO    2025-04-15 17:52:19,440d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:186 依赖数据: {'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': False, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 17:54:47,328d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': False, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-15 17:54:47,328d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': False, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 17:54:47,328d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': False, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 17:54:47,328d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': False, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 17:54:47,328d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-15 17:54:47,332d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-15 17:54:47,332d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 17:54:47,332d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 17:54:47,332d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 17:54:47,622d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:19 初始化conftest.py
INFO    2025-04-15 17:54:47,695d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:12 TestData: [{'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 17:54:47,695d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 17:54:47,695d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:108 指定运行顺序: [<Function test_get_code[获取验证码和uuid]>]
INFO    2025-04-15 17:54:47,695d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:117 运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 17:54:47,745d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:36 登录初始化
INFO    2025-04-15 17:54:47,896d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:60 验证码: 2
INFO    2025-04-15 17:54:47,896d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:61 uuid: 9bfb9c6cadfe4258ba924db8e67453ac
INFO    2025-04-15 17:54:48,215d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:82 缓存中的token:Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJsb2dpblR5cGUiOiJsb2dpbiIsImxvZ2luSWQiOiJzeXNfdXNlcjoxNjU5MzkxNjY2MjU0NzA0NjQyIiwicm5TdHIiOiIxNTNTQWVIT3NaRlJYamZHRXNvMWMwb0RoYkFyaWZJcCIsInVzZXJJZCI6MTY1OTM5MTY2NjI1NDcwNDY0Mn0.C6cFawmm_QU4o_gEu03ZguTE0PPAoNr-fWp8N0nvN8U
INFO    2025-04-15 17:54:48,225d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:29 data: {'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 17:54:48,226d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:164 _dependent_type: True
INFO    2025-04-15 17:54:48,226d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:165 _dependence_case_datas: [DependentCaseData(case_id='code_01', dependent_data=[DependentData(dependent_type='response', jsonpath='$.data.uuid', set_cache='code_01_uuid', replace_key=None), DependentData(dependent_type='response', jsonpath='$.data.img', set_cache='code_01_code', replace_key=None)])]
INFO    2025-04-15 17:54:48,227d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:173 ********开始获取依赖数据: code_01********
INFO    2025-04-15 17:54:48,228d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:183 ********获取依赖数据成功: code_01********
INFO    2025-04-15 17:54:48,228d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:186 依赖数据: {'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': False, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
ERROR   2025-04-15 17:54:48,334d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:154 用例总数: 2
ERROR   2025-04-15 17:54:48,334d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:155 异常用例数: 0
INFO    2025-04-15 17:54:48,335d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:158 用例执行时长: 0.70 s
INFO    2025-04-15 17:54:48,335d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:162 用例成功率: 0.00 %
INFO    2025-04-15 17:54:50,592d:\PytestAutoApi\logs\info-2025-04-15.log:main.py:36 Allure report generated, total cases: TestMetrics(passed=0, failed=0, skipped=1, total=2, broken=1, pass_rate=50.0, time=0.54)
INFO    2025-04-15 17:57:06,877d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': False, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-15 17:57:06,878d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': False, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 17:57:06,878d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': False, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 17:57:06,878d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': False, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 17:57:06,881d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-15 17:57:06,881d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-15 17:57:06,882d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 17:57:06,882d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 17:57:06,882d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 17:57:07,178d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:19 初始化conftest.py
INFO    2025-04-15 17:57:07,244d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:12 TestData: [{'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 17:57:07,257d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 17:57:07,257d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:108 指定运行顺序: [<Function test_get_code[获取验证码和uuid]>]
INFO    2025-04-15 17:57:07,257d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:117 运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 17:57:07,312d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:36 登录初始化
INFO    2025-04-15 17:57:07,451d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:60 验证码: 7
INFO    2025-04-15 17:57:07,452d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:61 uuid: eec86f0ab09a4ce0aa7a68029f9310f5
INFO    2025-04-15 17:57:07,719d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:82 缓存中的token:Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJsb2dpblR5cGUiOiJsb2dpbiIsImxvZ2luSWQiOiJzeXNfdXNlcjoxNjU5MzkxNjY2MjU0NzA0NjQyIiwicm5TdHIiOiJ4cGk5aTY2UGFIaGhSSXByMEZrZnltaFJNYnppeVpIUyIsInVzZXJJZCI6MTY1OTM5MTY2NjI1NDcwNDY0Mn0.YeuKrwaE5_VkIN-thv0TyrhMALpEeXvJqA9_VWjddmo
INFO    2025-04-15 17:57:07,728d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:29 data: {'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 17:57:07,729d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:164 _dependent_type: True
INFO    2025-04-15 17:57:07,729d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:165 _dependence_case_datas: [DependentCaseData(case_id='code_01', dependent_data=[DependentData(dependent_type='response', jsonpath='$.data.uuid', set_cache='code_01_uuid', replace_key=None), DependentData(dependent_type='response', jsonpath='$.data.img', set_cache='code_01_code', replace_key=None)])]
INFO    2025-04-15 17:57:07,729d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:173 ********开始获取依赖数据: code_01********
INFO    2025-04-15 17:57:07,731d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:183 ********获取依赖数据成功: code_01********
INFO    2025-04-15 17:57:07,731d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:186 依赖数据: {'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': False, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
ERROR   2025-04-15 17:57:07,854d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:154 用例总数: 2
ERROR   2025-04-15 17:57:07,854d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:155 异常用例数: 0
INFO    2025-04-15 17:57:07,854d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:158 用例执行时长: 0.66 s
INFO    2025-04-15 17:57:07,854d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:162 用例成功率: 0.00 %
INFO    2025-04-15 17:57:10,323d:\PytestAutoApi\logs\info-2025-04-15.log:main.py:36 Allure report generated, total cases: TestMetrics(passed=0, failed=0, skipped=1, total=2, broken=1, pass_rate=50.0, time=0.48)
INFO    2025-04-15 17:57:27,068d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': False, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-15 17:57:27,068d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': False, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 17:57:27,068d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': False, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 17:57:27,068d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': False, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 17:57:27,068d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-15 17:57:27,068d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-15 17:57:27,068d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 17:57:27,068d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 17:57:27,068d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 17:57:27,376d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:19 初始化conftest.py
INFO    2025-04-15 17:57:27,445d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:12 TestData: [{'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 17:57:27,445d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 17:57:27,452d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:108 指定运行顺序: [<Function test_get_code[获取验证码和uuid]>]
INFO    2025-04-15 17:57:27,452d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:117 运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 17:57:27,507d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:36 登录初始化
INFO    2025-04-15 17:57:27,670d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:60 验证码: 9
INFO    2025-04-15 17:57:27,670d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:61 uuid: 1574f64550964f4f86065e7de32b7401
INFO    2025-04-15 17:57:27,923d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:82 缓存中的token:Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJsb2dpblR5cGUiOiJsb2dpbiIsImxvZ2luSWQiOiJzeXNfdXNlcjoxNjU5MzkxNjY2MjU0NzA0NjQyIiwicm5TdHIiOiI3VTJqNzNVQ0czYXJOWWhWVGFnMzh0aDlOTTdpN2gyNCIsInVzZXJJZCI6MTY1OTM5MTY2NjI1NDcwNDY0Mn0.xv5PL1IeYfRctFNPBa1fs-DYtoCn3aZ5YnUuRl970es
INFO    2025-04-15 17:57:27,937d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:29 data: {'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 17:57:27,937d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:164 _dependent_type: True
INFO    2025-04-15 17:57:27,937d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:165 _dependence_case_datas: [DependentCaseData(case_id='code_01', dependent_data=[DependentData(dependent_type='response', jsonpath='$.data.uuid', set_cache='code_01_uuid', replace_key=None), DependentData(dependent_type='response', jsonpath='$.data.img', set_cache='code_01_code', replace_key=None)])]
INFO    2025-04-15 17:57:27,937d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:173 ********开始获取依赖数据: code_01********
INFO    2025-04-15 17:57:27,937d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:183 ********获取依赖数据成功: code_01********
INFO    2025-04-15 17:57:27,937d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:186 依赖数据: {'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': False, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 17:57:27,937d:\PytestAutoApi\logs\info-2025-04-15.log:run_time_decorator.py:14 响应结果: None
ERROR   2025-04-15 17:57:28,045d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:154 用例总数: 2
ERROR   2025-04-15 17:57:28,045d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:155 异常用例数: 0
INFO    2025-04-15 17:57:28,046d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:158 用例执行时长: 0.66 s
INFO    2025-04-15 17:57:28,046d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:162 用例成功率: 0.00 %
INFO    2025-04-15 17:57:30,463d:\PytestAutoApi\logs\info-2025-04-15.log:main.py:36 Allure report generated, total cases: TestMetrics(passed=0, failed=0, skipped=1, total=2, broken=1, pass_rate=50.0, time=0.49)
INFO    2025-04-15 17:59:51,380d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'None', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'sql': None}
INFO    2025-04-15 17:59:51,380d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'GET', 'is_run': None, 'url': '${{host()}}/code', 'detail': '获取验证码和uuid', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 17:59:51,380d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 17:59:51,380d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'code_01': {'url': '${{host()}}/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 17:59:51,380d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:255 获取依赖的用例{'host': '${{host()}}', 'url': '/user/login', 'method': 'POST', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'json', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'assert': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'sql': None}
INFO    2025-04-15 17:59:51,380d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:269 获取依赖的用例数据------------------------------[{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}]
INFO    2025-04-15 17:59:51,380d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:56 测试用例数据=========={'method': 'POST', 'is_run': None, 'url': '${{host()}}/user/login', 'detail': '正常登录', 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid'}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code'}]}], 'current_request_set_cache': None, 'sql': None, 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'setup_sql': None, 'teardown': None, 'teardown_sql': None, 'sleep': None}
INFO    2025-04-15 17:59:51,380d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:59 测试用例列表(SWITCH)==========[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 17:59:51,380d:\PytestAutoApi\logs\info-2025-04-15.log:get_yaml_data_analysis.py:63 测试用例列表=====================================[{'login_01': {'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}}]
INFO    2025-04-15 17:59:51,667d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:19 初始化conftest.py
INFO    2025-04-15 17:59:51,742d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:12 TestData: [{'url': '${{host()}}/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 17:59:51,742d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:14 re_data: [{'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}]
INFO    2025-04-15 17:59:51,742d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:108 指定运行顺序: [<Function test_get_code[获取验证码和uuid]>]
INFO    2025-04-15 17:59:51,742d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:117 运行顺序: [<Function test_get_code[获取验证码和uuid]>, <Function test_login[正常登录]>]
INFO    2025-04-15 17:59:51,791d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:36 登录初始化
INFO    2025-04-15 17:59:51,944d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:60 验证码: 7
INFO    2025-04-15 17:59:51,944d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:61 uuid: 2d88c56facdb4b74a4e4ebb362402912
INFO    2025-04-15 17:59:52,212d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:82 缓存中的token:Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJsb2dpblR5cGUiOiJsb2dpbiIsImxvZ2luSWQiOiJzeXNfdXNlcjoxNjU5MzkxNjY2MjU0NzA0NjQyIiwicm5TdHIiOiJRWEZtaHRHeWxaOUpXN1NucUR0U1lnYlc3NEdIa1dRUiIsInVzZXJJZCI6MTY1OTM5MTY2NjI1NDcwNDY0Mn0.qx-nNFbtDuuxkvrHDwevga3xuiNJdOxwUULY_Ejjsvw
INFO    2025-04-15 17:59:52,212d:\PytestAutoApi\logs\info-2025-04-15.log:test_get_code.py:23 data: {'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 17:59:52,212d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:164 _dependent_type: False
INFO    2025-04-15 17:59:52,212d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:165 _dependence_case_datas: None
INFO    2025-04-15 17:59:52,244d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code":200,"msg":"操作成功","data":{"img":"iVBORw0KGgoAAAANSUhEUgAAAKAAAAA8CAYAAADha7EVAAAFPUlEQVR42u3cS4gcRRgH8AWvoqyybBD1EILrkot4iBhBBI3EB6iIoCgoahDRgwQJohcRyUkCQtBDEPFi4sU1yKoEFBEPoogx+zD7zD4ym4ebifvoqpqew+dUb3ro6a3qZ033dPf/8Ifd6c4csj+q+qv6qvsajQYhSF7pw38CAoAIACIIACIA2Gu556X7neCPBYC54FP9jAAgACIAiAAgACLlAjgz/Ebs4A9ZYoAb4gxd5l/QIn+d5tkzNGHtonFrkMasgVZudn6esHY615bYW3RFjJBobGQKsNAILUH2qTWyP14l+/nzZN8xB4Dr4jQts0P0j7Wbzlg3xM64tYOW+TvExAUj02+ppuHTm2R/WafmgRVq7l2g5o3T1Ly+M5UHmASdKhPsdqqL0eoCrDGyR66S/e5Fsp9cpubAzDZsqgCgIYBu6uLbSgKMgg0AAwCOWf00yx6lFX7YebbbbEy3nu+s9n2WqLU+/5rm2FOhI2Hc6RgAKwxwhj3UKjw+Iy5WI3/RqvgqEGGNf1B5gPadc2S/XNt6BgRA88swy+xtLcBpdl/1AO6eJ/vVFbJP1MleYJFHRwBMmDXxW0BlPIgquEAAj/55kzK5A1zdc6Qjnde5FqBcM8wL4NHrvusIAIbDS3q9qwD94FQIdQAnrSEA7HGAcWCZQpgKoP8zWenqAC7wVwAwR4D1s6PtmAJlAmFfGnz+a3LLTgfwP/ErAOYE0I9OhbAUAKfYvUp8i/y1XLthqgxQN+J5P08DKS1CYwCX+JtKfHPsiY7FawDsLsB9f4y1I5F5f5dRISw0QNktM/XLXYqqt5/O8/ecyjjvfsAqAAwCpruvcADlSLYhxumKOOlsz8kdExW8c+wFB2avNKSWGaAKXtj06/67QgCM3oI12EL5IVmNcz13Kq6sAHXwwvA9/c1kpskEoDv6zbD9dIkfI96o98yuQxkBBuGrLEB/U6ocEdN0RwMgAKbuBZxie5w2LgAEQCN7wXJE2ypERqjG329NuQ+Ed0ZbO40+G/pBdTtlA+i/T/VdaZoRHnzsI+XPXeuGkRVvWFPqLHsYAHukCElyX5xkDtCNXPcLbs3/HgAzWoYJg+VdrC4NQJnZVhWsbUhgLwJgRgvROlhR7zOBLwpC4wDlASRTLVkoQrLZiisVQFmk6NcJBwAww2YEHbCsq+BMAQYt3aQBeNsPB2MFACsKUJ6k0y/H7EqMLg1YtGNVCOBl/rkWoGxScO/bP7TZjg4QpuDuICwtQHlQXRYaOoCyY1qFTgcRI2B2Lfn+/HzLaKLrRooQeYb3Ij8SawttozHpbLvp8MkXHT0yvB74HbrREM+A2SYMX9B9RgB64ZxldzvdzvLNB/Lcr7e5YOvVHCdpkR9wjl0GLUJfFT8FAgsDiCm4GACNLESbfjnRv+J4ZFzdQJgXwKTvhskbZ2kATlrDzsgXBxYA5gswKr6o03AigOviL1piB50ulqTw5DOkO13HRWUaIQBuz6d7D3XEJEAXXhi+SFXwmvidLolPnIPls+xxmmC3Xns9b/+1V/TucIqPefacc05Edf4XAHsLoBec/zNTAHN5OZEpUN0qRhA1Pu+10gFMigkIs8VnegoGQAQAAbBY+FxQUe8FQAQAAbB6AI///WM78n7v7zIAiCTCF4RQBUw3+sXBCIAAGApQBynK9BuGEAABUAswbBSL+vwX9D0A6MmzJ45tSxUBurhM4AsbCQHQAy/utbIDNF39+hEOnVrEVlxUXEVGGBeghBK0LZdm6cWLsPIA46IqKsKkAFXY0q77+QH+D/vQbAMb+MitAAAAAElFTkSuQmCC","captchaEnabled":true,"uuid":"d8f609b975704219be0cfb851e3da65b"},"paramMsg":null,"errCode":null}
INFO    2025-04-15 17:59:52,247d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 获取验证码和uuid
INFO    2025-04-15 17:59:52,247d:\PytestAutoApi\logs\info-2025-04-15.log:run_time_decorator.py:14 响应结果: url='http://47.107.113.31:18090/prod-api/code' is_run=None detail='获取验证码和uuid' response_data='{"code":200,"msg":"操作成功","data":{"img":"iVBORw0KGgoAAAANSUhEUgAAAKAAAAA8CAYAAADha7EVAAAFPUlEQVR42u3cS4gcRRgH8AWvoqyybBD1EILrkot4iBhBBI3EB6iIoCgoahDRgwQJohcRyUkCQtBDEPFi4sU1yKoEFBEPoogx+zD7zD4ym4ebifvoqpqew+dUb3ro6a3qZ033dPf/8Ifd6c4csj+q+qv6qvsajQYhSF7pw38CAoAIACIIACIA2Gu556X7neCPBYC54FP9jAAgACIAiAAgACLlAjgz/Ebs4A9ZYoAb4gxd5l/QIn+d5tkzNGHtonFrkMasgVZudn6esHY615bYW3RFjJBobGQKsNAILUH2qTWyP14l+/nzZN8xB4Dr4jQts0P0j7Wbzlg3xM64tYOW+TvExAUj02+ppuHTm2R/WafmgRVq7l2g5o3T1Ly+M5UHmASdKhPsdqqL0eoCrDGyR66S/e5Fsp9cpubAzDZsqgCgIYBu6uLbSgKMgg0AAwCOWf00yx6lFX7YebbbbEy3nu+s9n2WqLU+/5rm2FOhI2Hc6RgAKwxwhj3UKjw+Iy5WI3/RqvgqEGGNf1B5gPadc2S/XNt6BgRA88swy+xtLcBpdl/1AO6eJ/vVFbJP1MleYJFHRwBMmDXxW0BlPIgquEAAj/55kzK5A1zdc6Qjnde5FqBcM8wL4NHrvusIAIbDS3q9qwD94FQIdQAnrSEA7HGAcWCZQpgKoP8zWenqAC7wVwAwR4D1s6PtmAJlAmFfGnz+a3LLTgfwP/ErAOYE0I9OhbAUAKfYvUp8i/y1XLthqgxQN+J5P08DKS1CYwCX+JtKfHPsiY7FawDsLsB9f4y1I5F5f5dRISw0QNktM/XLXYqqt5/O8/ecyjjvfsAqAAwCpruvcADlSLYhxumKOOlsz8kdExW8c+wFB2avNKSWGaAKXtj06/67QgCM3oI12EL5IVmNcz13Kq6sAHXwwvA9/c1kpskEoDv6zbD9dIkfI96o98yuQxkBBuGrLEB/U6ocEdN0RwMgAKbuBZxie5w2LgAEQCN7wXJE2ypERqjG329NuQ+Ed0ZbO40+G/pBdTtlA+i/T/VdaZoRHnzsI+XPXeuGkRVvWFPqLHsYAHukCElyX5xkDtCNXPcLbs3/HgAzWoYJg+VdrC4NQJnZVhWsbUhgLwJgRgvROlhR7zOBLwpC4wDlASRTLVkoQrLZiisVQFmk6NcJBwAww2YEHbCsq+BMAQYt3aQBeNsPB2MFACsKUJ6k0y/H7EqMLg1YtGNVCOBl/rkWoGxScO/bP7TZjg4QpuDuICwtQHlQXRYaOoCyY1qFTgcRI2B2Lfn+/HzLaKLrRooQeYb3Ij8SawttozHpbLvp8MkXHT0yvB74HbrREM+A2SYMX9B9RgB64ZxldzvdzvLNB/Lcr7e5YOvVHCdpkR9wjl0GLUJfFT8FAgsDiCm4GACNLESbfjnRv+J4ZFzdQJgXwKTvhskbZ2kATlrDzsgXBxYA5gswKr6o03AigOviL1piB50ulqTw5DOkO13HRWUaIQBuz6d7D3XEJEAXXhi+SFXwmvidLolPnIPls+xxmmC3Xns9b/+1V/TucIqPefacc05Edf4XAHsLoBec/zNTAHN5OZEpUN0qRhA1Pu+10gFMigkIs8VnegoGQAQAAbBY+FxQUe8FQAQAAbB6AI///WM78n7v7zIAiCTCF4RQBUw3+sXBCIAAGApQBynK9BuGEAABUAswbBSL+vwX9D0A6MmzJ45tSxUBurhM4AsbCQHQAy/utbIDNF39+hEOnVrEVlxUXEVGGBeghBK0LZdm6cWLsPIA46IqKsKkAFXY0q77+QH+D/vQbAMb+MitAAAAAElFTkSuQmCC","captchaEnabled":true,"uuid":"d8f609b975704219be0cfb851e3da65b"},"paramMsg":null,"errCode":null}' request_body=None method='GET' sql_data={'sql': None} yaml_data=TestCase(url='http://47.107.113.31:18090/prod-api/code', method='GET', detail='获取验证码和uuid', assert_data={'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, headers={'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, requestType='NONE', is_run=None, data=None, dependence_case=False, dependence_case_data=None, sql=None, setup_sql=None, status_code=None, teardown_sql=None, teardown=None, current_request_set_cache=None, sleep=None) headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'} cookie={} assert_data={'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}} res_time=28.97 status_code=200 teardown=None teardown_sql=None body=None
INFO    2025-04-15 17:59:52,247d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 获取验证码和uuid
请求路径: http://47.107.113.31:18090/prod-api/code
请求方式: GET
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}
请求内容: None
接口响应内容: {"code":200,"msg":"操作成功","data":{"img":"iVBORw0KGgoAAAANSUhEUgAAAKAAAAA8CAYAAADha7EVAAAFPUlEQVR42u3cS4gcRRgH8AWvoqyybBD1EILrkot4iBhBBI3EB6iIoCgoahDRgwQJohcRyUkCQtBDEPFi4sU1yKoEFBEPoogx+zD7zD4ym4ebifvoqpqew+dUb3ro6a3qZ033dPf/8Ifd6c4csj+q+qv6qvsajQYhSF7pw38CAoAIACIIACIA2Gu556X7neCPBYC54FP9jAAgACIAiAAgACLlAjgz/Ebs4A9ZYoAb4gxd5l/QIn+d5tkzNGHtonFrkMasgVZudn6esHY615bYW3RFjJBobGQKsNAILUH2qTWyP14l+/nzZN8xB4Dr4jQts0P0j7Wbzlg3xM64tYOW+TvExAUj02+ppuHTm2R/WafmgRVq7l2g5o3T1Ly+M5UHmASdKhPsdqqL0eoCrDGyR66S/e5Fsp9cpubAzDZsqgCgIYBu6uLbSgKMgg0AAwCOWf00yx6lFX7YebbbbEy3nu+s9n2WqLU+/5rm2FOhI2Hc6RgAKwxwhj3UKjw+Iy5WI3/RqvgqEGGNf1B5gPadc2S/XNt6BgRA88swy+xtLcBpdl/1AO6eJ/vVFbJP1MleYJFHRwBMmDXxW0BlPIgquEAAj/55kzK5A1zdc6Qjnde5FqBcM8wL4NHrvusIAIbDS3q9qwD94FQIdQAnrSEA7HGAcWCZQpgKoP8zWenqAC7wVwAwR4D1s6PtmAJlAmFfGnz+a3LLTgfwP/ErAOYE0I9OhbAUAKfYvUp8i/y1XLthqgxQN+J5P08DKS1CYwCX+JtKfHPsiY7FawDsLsB9f4y1I5F5f5dRISw0QNktM/XLXYqqt5/O8/ecyjjvfsAqAAwCpruvcADlSLYhxumKOOlsz8kdExW8c+wFB2avNKSWGaAKXtj06/67QgCM3oI12EL5IVmNcz13Kq6sAHXwwvA9/c1kpskEoDv6zbD9dIkfI96o98yuQxkBBuGrLEB/U6ocEdN0RwMgAKbuBZxie5w2LgAEQCN7wXJE2ypERqjG329NuQ+Ed0ZbO40+G/pBdTtlA+i/T/VdaZoRHnzsI+XPXeuGkRVvWFPqLHsYAHukCElyX5xkDtCNXPcLbs3/HgAzWoYJg+VdrC4NQJnZVhWsbUhgLwJgRgvROlhR7zOBLwpC4wDlASRTLVkoQrLZiisVQFmk6NcJBwAww2YEHbCsq+BMAQYt3aQBeNsPB2MFACsKUJ6k0y/H7EqMLg1YtGNVCOBl/rkWoGxScO/bP7TZjg4QpuDuICwtQHlQXRYaOoCyY1qFTgcRI2B2Lfn+/HzLaKLrRooQeYb3Ij8SawttozHpbLvp8MkXHT0yvB74HbrREM+A2SYMX9B9RgB64ZxldzvdzvLNB/Lcr7e5YOvVHCdpkR9wjl0GLUJfFT8FAgsDiCm4GACNLESbfjnRv+J4ZFzdQJgXwKTvhskbZ2kATlrDzsgXBxYA5gswKr6o03AigOviL1piB50ulqTw5DOkO13HRWUaIQBuz6d7D3XEJEAXXhi+SFXwmvidLolPnIPls+xxmmC3Xns9b/+1V/TucIqPefacc05Edf4XAHsLoBec/zNTAHN5OZEpUN0qRhA1Pu+10gFMigkIs8VnegoGQAQAAbBY+FxQUe8FQAQAAbB6AI///WM78n7v7zIAiCTCF4RQBUw3+sXBCIAAGApQBynK9BuGEAABUAswbBSL+vwX9D0A6MmzJ45tSxUBurhM4AsbCQHQAy/utbIDNF39+hEOnVrEVlxUXEVGGBeghBK0LZdm6cWLsPIA46IqKsKkAFXY0q77+QH+D/vQbAMb+MitAAAAAElFTkSuQmCC","captchaEnabled":true,"uuid":"d8f609b975704219be0cfb851e3da65b"},"paramMsg":null,"errCode":null}
接口响应时长: 28.97 ms
Http状态码: 200
=====================================================
INFO    2025-04-15 17:59:52,256d:\PytestAutoApi\logs\info-2025-04-15.log:test_login.py:29 data: {'url': 'http://47.107.113.31:18090/prod-api/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'JSON', 'is_run': None, 'data': {'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'code_01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.data.uuid', 'set_cache': 'code_01_uuid', 'replace_key': None}, {'dependent_type': 'response', 'jsonpath': '$.data.img', 'set_cache': 'code_01_code', 'replace_key': None}]}], 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 17:59:52,256d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:164 _dependent_type: True
INFO    2025-04-15 17:59:52,257d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:165 _dependence_case_datas: [DependentCaseData(case_id='code_01', dependent_data=[DependentData(dependent_type='response', jsonpath='$.data.uuid', set_cache='code_01_uuid', replace_key=None), DependentData(dependent_type='response', jsonpath='$.data.img', set_cache='code_01_code', replace_key=None)])]
INFO    2025-04-15 17:59:52,257d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:173 ********开始获取依赖数据: code_01********
INFO    2025-04-15 17:59:52,258d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:183 ********获取依赖数据成功: code_01********
INFO    2025-04-15 17:59:52,258d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:186 依赖数据: {'url': 'http://47.107.113.31:18090/prod-api/code', 'method': 'GET', 'detail': '获取验证码和uuid', 'assert_data': {'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, 'headers': {'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, 'requestType': 'NONE', 'is_run': None, 'data': None, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}
INFO    2025-04-15 17:59:52,258d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:164 _dependent_type: False
INFO    2025-04-15 17:59:52,259d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:165 _dependence_case_datas: None
INFO    2025-04-15 17:59:52,289d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code":200,"msg":"操作成功","data":{"img":"iVBORw0KGgoAAAANSUhEUgAAAKAAAAA8CAYAAADha7EVAAAGz0lEQVR42u2cWWhcVRjH81r0qQjiglYRi4gLvmhBbBH0QbAWVOoGikVciG3aFE2tqRY10YK2WlsLsVWLktpasLYvrc3SmWyTfU8madI0yzTrmGWSydwRjn5TbkjunHPueu4y93v4Q5J7zsnMvT++73zLuVmJRIKgUE4pK5O+TO0NJ1SFDx0BFAacUUgRBATQEHhuXQ+VwQCKBAUhRAAdBwQhRAAdBwMhtEdd6/72BoBOAIEQiofPMxYQAUQAEUAUAogAZhZ8ugG8ON5OdoVPkuebD5J7Kj8gtwZzyC2BbeT24HaytjKPvNp6hHx2+U9SPdXj+yBkY0lSqHwF4NHBcvJQ9cfkpkvZmvVEXUEKWL+mYRBACwCMxKbIs037dYGnFFhMPyaiEUCTAAJ8j4b2moJP1u6eU74rxSGAJgGEfR4NpkdqPiHHh4IpQGFcPLFI2qYHU3s/2BOyIKycDNvS/SKqiQEBtBHA8olOKkQb6gvJ5MIMc+HGaH8qOKHNfbvjJ2zJ0qnxWIK8FpDS4DvUKWU2gG91HDNsxY4MllLn3luVhykInSpsSYcvrz6Z+XlAVsQL7lZtYbCQtLmQrkGotKt8JB2+14NSyipmPIA3B7ZSIZqNx5bGdP+bxxRt7m3BbOpYEV9u6sqaNHnp4Vx3vSvh21SaJK0TPqmEgLWiQbRvOFcVnOjCLHXuc00HqOOtBJIHG+ta+Lsc07L64RQ0p1u/0/1Sxll5ZjfM43VfUCGCAKNjeoi7aPFINXXuwYELmj6UURC1WjkYZzU8VgJ5cSgdvk8bpYzdalABzO/5g5lOAQjPjjYyF3yy/kvqHLCMogDUCp8Mh2iXbBTCsZhEXrm0Ej6IgidjCX8B2Dc7ytwHynqv8xdyLRZdMe+HqyXUsb+P1KgCJ9ryKa2VbAl5Yy9v2siUCAsIlk5p/UKjUkYHW8xE9Ff951QrHHdVvk8Khq7vC38c30kd827vdm7AYnbPZ3a+W/aA5wdp+b5kxkf73FowdLdoKbWxSnbZXceFfngrAFRaOyPrmJkru96XFK53S0WSzCz4/EzI/GI8VcEwUv8t7DvraviWr2MGHiWIRublN6Rbv/oxa11v6MYXUvLkoSRWdYMlKNnBPhIBVNe5q+l14wPtScvhW/7z2K+5tsoUgGUTneThmnzdFhAaE2AfqaV64jSAVn4uPRBGZiWyuXwlfBAFWxn10qyeZwCENipWRwwrWa3UUw37yFBsEgGk3V+K6z0zIBY+TwAIe7+XWw8z3evY/D+kdzZCtrQf1QTh/VUfka6ZYctu7JsnHrNcdgNIc71ba8S5Xk8B+EZ7ERWkB6p3L/UByqqL9jErJ0oIlXMzDUCt8NGiXlDjuGQLgGrXHA1CigbLmBAFJrqoi8A+j1c9kQVWFQFMkL1N6a4XImG74HMThCsAnI7PMRtKN7ccUl3szGhD6oQcD0IrTsyJANCuPGDZsETtcO6JJhBAXroF4NJ0g/+PmnllPCuT01YmomnlN61lOs3/b57e4fx5s/XlNk8CyAo8lL2AqolVjjuGZlc3RMNa5mmtBWsVlNZo1q9rKuEYgKtL97gHwDUVuUxw9CwKLVusdUR0RuuF0IkG1XCUflBJVIs9D0DXRsE81zm3uKDrBvAS1E4mpp3qjt4Wolu/YERCAGXxjlXqecsBRMV2uWCzHdFOne+Qz3iI+p+eBJDWTCorp/s3El89ou2GM451giB5LfqBu+1MyDtVdOv3cw8CmKU1eAD3XLGuVtOXf7Hle+Y6F8bbfHW6rfKaxDxcHjaYeinas19VehLRTgYiWcpOaF6Nd+1fH5LQVC93wZ3dxdwuGb8dr6R1Ocv9fkah0zoeIKONB+CUcDoFYVol5NuB89xEMljC3HBxqioid7pAbRja7gEw3lkSK+vBXhA0lMJxShqAX7dJuuAz44aV810NIAgAs+KlRMvhE/FuGLcrEGG735Jh8QDKECrn01yzqwCUqyJ3VOwwDd8zTd+QK3Njvny7AbzDhQWg3kPmRlywLGVDKg021wEIAnDAGvLSMyxBRH0qEvL16zVorfay5uPG19UahLBa8j0DoCxIQp+O1JIdu46lIlz59bywH4SgBSwl7P8gxQJHM9UOr/tFym5nt7xezXMALiWYNeYBUe6WUwCuujsrTQggAogWEJUg/es3LAkBRABth4/3OwKIAJpS+52rEEAE0J0AsmATCSEC6EP4WBDSQLtv9GkEEAEUDyALPtFWkAfg4QdPLgkB9BmAy+GTryv/JhJAJXR2QIgAIoBc2ERDiAAigAggApiggiZfFw2hGmQiIUQAfQ6gloBDJID/AXt9yGkddj9AAAAAAElFTkSuQmCC","captchaEnabled":true,"uuid":"3da0c82edac84fc5b885bbecb2217907"},"paramMsg":null,"errCode":null}
INFO    2025-04-15 17:59:52,291d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 获取验证码和uuid
INFO    2025-04-15 17:59:52,295d:\PytestAutoApi\logs\info-2025-04-15.log:run_time_decorator.py:14 响应结果: url='http://47.107.113.31:18090/prod-api/code' is_run=None detail='获取验证码和uuid' response_data='{"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"3da0c82edac84fc5b885bbecb2217907"},"paramMsg":null,"errCode":null}' request_body=None method='GET' sql_data={'sql': None} yaml_data=TestCase(url='http://47.107.113.31:18090/prod-api/code', method='GET', detail='获取验证码和uuid', assert_data={'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, headers={'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, requestType='NONE', is_run=None, data=None, dependence_case=False, dependence_case_data=None, sql=None, setup_sql=None, status_code=None, teardown_sql=None, teardown=None, current_request_set_cache=None, sleep=None) headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'} cookie={} assert_data={'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}} res_time=30.02 status_code=200 teardown=None teardown_sql=None body=None
INFO    2025-04-15 17:59:52,295d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 获取验证码和uuid
请求路径: http://47.107.113.31:18090/prod-api/code
请求方式: GET
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}
请求内容: None
接口响应内容: {"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"3da0c82edac84fc5b885bbecb2217907"},"paramMsg":null,"errCode":null}
接口响应时长: 30.02 ms
Http状态码: 200
=====================================================
INFO    2025-04-15 17:59:52,301d:\PytestAutoApi\logs\info-2025-04-15.log:dependent_case.py:188 依赖响应数据: url='http://47.107.113.31:18090/prod-api/code' is_run=None detail='获取验证码和uuid' response_data='{"code":200,"msg":"操作成功","data":{"img":"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","captchaEnabled":true,"uuid":"3da0c82edac84fc5b885bbecb2217907"},"paramMsg":null,"errCode":null}' request_body=None method='GET' sql_data={'sql': None} yaml_data=TestCase(url='http://47.107.113.31:18090/prod-api/code', method='GET', detail='获取验证码和uuid', assert_data={'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}}, headers={'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, requestType='NONE', is_run=None, data=None, dependence_case=False, dependence_case_data=None, sql=None, setup_sql=None, status_code=None, teardown_sql=None, teardown=None, current_request_set_cache=None, sleep=None) headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam'} cookie={} assert_data={'code': {'jsonpath': '$.code', 'type': '==', 'value': 200, 'AssertType': None}, 'msg': {'jsonpath': '$.msg', 'type': '==', 'value': '操作成功', 'AssertType': None}} res_time=30.02 status_code=200 teardown=None teardown_sql=None body=None
INFO    2025-04-15 17:59:52,328d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:427 响应结果: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
INFO    2025-04-15 17:59:52,328d:\PytestAutoApi\logs\info-2025-04-15.log:request_control.py:432 res响应数据: 正常登录
INFO    2025-04-15 17:59:52,328d:\PytestAutoApi\logs\info-2025-04-15.log:run_time_decorator.py:14 响应结果: url='http://47.107.113.31:18090/prod-api/user/login' is_run=None detail='正常登录' response_data='{"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}' request_body={'username': 'test02', 'password': 'admin@lzy123', 'code': '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', 'uuid': '3da0c82edac84fc5b885bbecb2217907'} method='POST' sql_data={'sql': None} yaml_data=TestCase(url='http://47.107.113.31:18090/prod-api/user/login', method='POST', detail='正常登录', assert_data={'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}}, headers={'Content-Language': 'zh_CN', 'App-Source': 'WOcam'}, requestType='JSON', is_run=None, data={'username': 'test02', 'password': 'admin@lzy123', 'code': '$cache{code_01_code}', 'uuid': '$cache{code_01_uuid}'}, dependence_case=True, dependence_case_data=[DependentCaseData(case_id='code_01', dependent_data=[DependentData(dependent_type='response', jsonpath='$.data.uuid', set_cache='code_01_uuid', replace_key=None), DependentData(dependent_type='response', jsonpath='$.data.img', set_cache='code_01_code', replace_key=None)])], sql=None, setup_sql=None, status_code=None, teardown_sql=None, teardown=None, current_request_set_cache=None, sleep=None) headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam', 'Content-Length': '2506', 'Content-Type': 'application/json'} cookie={} assert_data={'code': {'jsonpath': '$.code', 'type': '==', 'value': 401, 'AssertType': None, 'message': '登录失败'}} res_time=21.48 status_code=200 teardown=None teardown_sql=None body={'username': 'test02', 'password': 'admin@lzy123', 'code': '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', 'uuid': '3da0c82edac84fc5b885bbecb2217907'}
INFO    2025-04-15 17:59:52,333d:\PytestAutoApi\logs\info-2025-04-15.log:log_decorator.py:32 
======================================================
用例标题: 正常登录
请求路径: http://47.107.113.31:18090/prod-api/user/login
请求方式: POST
请求头:   {'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Language': 'zh_CN', 'App-Source': 'WOcam', 'Content-Length': '2506', 'Content-Type': 'application/json'}
请求内容: {'username': 'test02', 'password': 'admin@lzy123', 'code': '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', 'uuid': '3da0c82edac84fc5b885bbecb2217907'}
接口响应内容: {"code": 401, "msg": "认证失败，无法访问系统资源!", "data": null}
接口响应时长: 21.48 ms
Http状态码: 200
=====================================================
ERROR   2025-04-15 17:59:52,343d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:154 用例总数: 2
ERROR   2025-04-15 17:59:52,343d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:155 异常用例数: 0
INFO    2025-04-15 17:59:52,344d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:158 用例执行时长: 0.66 s
INFO    2025-04-15 17:59:52,344d:\PytestAutoApi\logs\info-2025-04-15.log:conftest.py:162 用例成功率: 100.00 %
INFO    2025-04-15 17:59:54,738d:\PytestAutoApi\logs\info-2025-04-15.log:main.py:36 Allure report generated, total cases: TestMetrics(passed=2, failed=0, skipped=0, total=2, broken=0, pass_rate=100.0, time=0.12)
